{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u7b14\u8bb0\u672c","text":"<p>research aspirations</p> <ul> <li> set up a technical blog (using Jekyll) and update regularly (comment function)</li> <li> MIT linear algebra review</li> <li> matrix differentiation review</li> </ul> weekly roadmap <ul> <li>daily CNN news dictation / weekly bilibili videos dictation</li> </ul> roadmap in 2024 winter <p>course resources</p> <p>research resources</p> <p>toefl resources</p> <p>Potential Contest</p> <ul> <li>open hackathons</li> <li>LeetCode</li> <li>Kaggle</li> <li>CodeForces</li> <li>National Computer System Competition</li> </ul> life &amp; interest <ul> <li> driving car</li> <li> go to gym</li> <li> Read something novel</li> <li> play basketball\ud83c\udfc0</li> <li> play tennis\ud83c\udfbe</li> <li> play instruments like guitar or saxophone</li> <li> learn to cook</li> <li> learn Japanese</li> <li> build my own os(probably from mit6.s081)</li> <li> reflections</li> </ul> to my self <p>\u60f3\u5230\u4f60\u6b63\u5728\u63a2\u7d22\u672a\u77e5\u7684\u81ea\u5df1\uff0c\u60f3\u8c61\u81ea\u5df1\u5c06\u62e5\u6709\u7684\u65e0\u9650\u53ef\u80fd\uff0c\u4f60\u96be\u9053\u4e0d\u611f\u5230\u5174\u594b\u5417\uff1f</p>"},{"location":"courses/","title":"\u8bfe\u7a0b\u7b14\u8bb0","text":""},{"location":"courses/#compilation-of-learning-resources-for-2024-autumnwinter-semester","title":"Compilation of learning resources for 2024 autumn/winter semester","text":"<p>Architecture</p> <ul> <li> <p>cs152</p> </li> <li> <p>Operating Systems: Three Easy Pieces</p> </li> <li> <p>RAID</p> </li> </ul> <p>Network</p> <ul> <li> <p>\u738b\u9053\u8003\u7814</p> </li> <li> <p>\u4e0d\u826f\u6797</p> </li> <li> <p>course website</p> </li> </ul> <p>OS</p> <ul> <li> <p>swb</p> </li> <li> <p>CSAPP</p> </li> <li> <p>ZJUTuring OS course</p> </li> <li> <p>course website</p> </li> <li> <p>riscv-isa-manual</p> </li> </ul> <p>TCS</p> <ul> <li>myc</li> </ul> <p>General advice on course study</p> <p>Andrej Karpathy</p>"},{"location":"courses/data_market/","title":"lec02 \u9690\u79c1\u8ba1\u7b97\u5e38\u89c1\u6280\u672f","text":""},{"location":"courses/data_market/#_1","title":"\u5b89\u5168\u591a\u65b9\u8ba1\u7b97","text":"<p>\u767e\u4e07\u5bcc\u7fc1\u95ee\u9898\uff1a\u4e24\u4e2a\u5bcc\u4eba\u6bd4\u8c01\u94b1\u591a\uff0c\u5982\u4f55\u80fd\u5b9e\u73b0\u4e92\u76f8\u4fdd\u5bc6\uff08\u4e0d\u501f\u52a9\u7b2c\u4e09\u65b9\uff09\u4f46\u53ef\u4ee5\u6bd4\u51fa\u8c01\u7684\u94b1\u591a</p>"},{"location":"courses/data_market/#_2","title":"\u8054\u90a6\u5b66\u4e60","text":"<p>\u672c\u5730\u8bad\u7ec3\u6a21\u578b\uff0c\u4f7f\u6570\u636e\u4e0d\u88ab\u591a\u65b9\u5171\u4eab</p>"},{"location":"courses/data_market/#_3","title":"\u6570\u636e\u8131\u654f","text":""},{"location":"courses/data_market/#differential-privacy","title":"\u5dee\u5206\u9690\u79c1(differential privacy)","text":""},{"location":"courses/data_market/#_4","title":"\u5168\u540c\u6001\u52a0\u5bc6","text":""},{"location":"courses/data_market/#zero-knowledge-proof","title":"\u96f6\u77e5\u8bc6\u8bc1\u660e(zero knowledge proof)","text":""},{"location":"courses/data_market/#lec03","title":"lec03 \u6570\u636e\u5b9a\u4ef7\u57fa\u7840","text":"<p>\u4ece\u9762\u5411\u6210\u672c\u5b9a\u4ef7\u8f6c\u5411\u9762\u5411\u9700\u6c42\u5b9a\u4ef7</p>"},{"location":"courses/data_market/#_5","title":"\u67e5\u8be2\u5b9a\u4ef7\u7684\u65e0\u5957\u5229\u539f\u5219","text":""},{"location":"courses/data_market/#lec05-mechanism-design-by-haifeng-xu","title":"lec05 mechanism design (By Haifeng Xu)","text":"<p>Goal: design a game by specifying its rules to induce a desired outcome among strategic participants</p> <ul> <li>Specify game rules, player payoffs, allowable actions, etc.</li> <li>Objective is to induce desirable outcome, e.g., incentivizing socially good or fair behaviors, maximizing revenue if selling goods</li> <li>Typically, want the game to be easy to play (friendly interface)</li> </ul>"},{"location":"courses/data_market/#examples-of-mechanism-design","title":"Examples of Mechanism Design","text":""},{"location":"courses/data_market/#single-item-allocation","title":"Single-Item Allocation","text":"<p>1\u4e2aitem\u548cn\u4e2aagents</p> <p>agent i\u5bf9\u4e8e\u7269\u54c1\u6709\u81ea\u5df1\u7684\u4f30\u4ef7\\(v_i\\)</p> <p>\u9700\u8981\u8bbe\u8ba1\u652f\u4ed8\u91d1\u989d\\(p:(b_i)_i \\rightarrow \\R^n\\)\u548c\u5206\u914d\u89c4\u5219\\(x:(b_i)_i \\rightarrow \\R^n\\)</p> <p>\u798f\u5229\u6700\u5927\u5316\u539f\u5219\uff1a\u51fa\u4ef7\u6700\u9ad8\u7684\u4eba\uff0c\u7269\u54c1\u5bf9\u4ed6\u7684\u6548\u7528\u6700\u5927\uff0c\u56e0\u6b64\u5356\u7ed9\u4ed6\u3002</p> <p>\u8bda\u5b9e\u62a5\u4ef7\u6240\u9700\u7ea6\u675f\uff1a\u91c7\u7528\u4e8c\u4ef7\u62cd\u5356(second-price auction)\uff0c\u51fa\u4ef7\u6700\u9ad8\u7684\u4eba\uff0c\u7528\u4e8c\u4ef7\u5f97\u5230\u7269\u54c1\u3002</p> <p>Truthful bidding is a dominant strategy equilibrium in second-price auctions. That is, bidding true value \\(v_i\\) is optimal for i, regardless of how other people bid. In such cases, we say the mechanism is Dominant-Strategy Incentive Compatible (DISC)</p>"},{"location":"courses/data_market/#multi-item-allocation","title":"Multi-Item Allocation","text":"<p>m\u4e2aitem\u548cn\u4e2aagents</p> <p>agent i \u5bf9\u4e8e\\([m]\\)\u7684\u4efb\u4f55\u5b50\u96c6\\(S\\)\u6709\u81ea\u5df1\u7684\u4f30\u4ef7\\(v_i(S)\\)</p> <p>\u9700\u8981\u8bbe\u8ba1\u4e00\u4e2apartition\u5c06m\u4e2a\u7269\u54c1\u5206\u914d\u5230\\(S_1,S_2,...,S_n\\)\u4e2d</p>"},{"location":"courses/data_market/#vcg-mechanism-vickrey-clarke-groves-mechanism","title":"VCG mechanism (Vickrey-Clarke-Groves mechanism)","text":"<ol> <li> <p>Ask each bidder to report their value function \\(b_i(S)\\)</p> </li> <li> <p>Compute optimal allocation \\((S_1^*,...,S_n^*)=\\arg\\max_(S_1,...,S_n)\\sum_{i=1}^nb_i(S_i)\\)</p> </li> <li> <p>Allocate \\(S_i^*\\) to bidder i, charge i the following amount </p> </li> </ol> \\[ p_i=[\\max_{S_{-i}}\\sum_{j\\neq i}b_j(S_j)]-\\sum_{j\\neq i}b_j(S_j^*) \\] <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\\(p_i\\)\u5373agent i\u5bf9\u5176\u4ed6\u4eba\u7684\u798f\u5229\u7684\u5f71\u54cd\u7a0b\u5ea6</p>"},{"location":"courses/data_market/#school-choice","title":"School Choice\uff08\u65e0\u94b1\u673a\u5236\uff09","text":"<p>n\u4e2a\u5b66\u751f\uff0cm\u4e2a\u5b66\u6821\u8fdb\u884c\u5339\u914d</p>"},{"location":"courses/data_market/#myersons-revenue-optimal-auction","title":"Myerson's Revenue-Optimal Auction","text":""},{"location":"courses/discrete/","title":"\u79bb\u6563\u6570\u5b66","text":""},{"location":"courses/discrete/#chapter-1-logic-and-proofs","title":"Chapter 1 - Logic and Proofs","text":"<p>\u6709\u4e24\u79cd\u65b9\u5f0f\u4ece\u547d\u9898\u51fd\u6570\u5f97\u5230\u5177\u4f53\u547d\u9898\uff1aPredicate \u548c Quantifier</p>"},{"location":"courses/discrete/#predicates","title":"Predicates","text":"<ul> <li>\u547d\u9898\u51fd\u6570: \\(P(x_1,x_2,...,x_n)\\)</li> <li>\u53d6\u503c\uff1a\\((x_1,x_2,...,x_n) \\in D\\)</li> <li>predicate: \\(P(x_1,x_2,...,x_n)\\)</li> <li>\u547d\u9898\u51fd\u6570\u7684\u53d8\u91cf\u53d6\u5177\u4f53\u503c-&gt;\u547d\u9898</li> </ul>"},{"location":"courses/discrete/#quantifiers","title":"Quantifiers","text":"<ul> <li>universal quantifier: \\(\\forall xP(x)\\)</li> <li>existential quantifier: \\(\\exists xP(x)\\)</li> <li>uniqueness quantifier: \\(\\exists! xP(x)\\)\uff0c\u53ea\u6709\u4e00\u4e2a\u8fd9\u6837\u7684x</li> <li>\u4f18\u5148\u7ea7\uff1a\\(\\forall \\exists\\) \u4f18\u5148\u7ea7\u9ad8\u4e8e\u6240\u6709\u903b\u8f91\u8fd0\u7b97\u7b26</li> <li>Universe of discourse: \u547d\u9898\u51fd\u6570\u7684\u53d6\u503c\u57df\uff0c\u6bcf\u4e00\u4e2a quantifier \u90fd\u5b58\u5728\u8fd9\u4e2a\u57df</li> </ul> <p>Remark</p> <p>\\(\\forall x\\forall yP(x,y) \\Leftrightarrow \\forall y\\forall xP(x,y)\\)</p> <p>\\(\\exists x\\exists yP(x,y) \\Leftrightarrow \\exists y\\exists xP(x,y)\\)</p> <p>\\(\\forall x\\exists yP(x,y) \\nLeftrightarrow \\exists y\\forall xP(x,y)\\)</p>"},{"location":"courses/discrete/#banding-variables","title":"Banding Variables","text":"<p>\u7528 predicate \u8d4b\u503c\u53d8\u91cf\u6216\u7528 quantifier \u5728\u67d0\u53d8\u91cf\u65f6\uff0c\u8be5\u53d8\u91cf\u79f0\u4e3a bounded\uff0c\u5176\u4f59\u53d8\u91cf\u79f0\u4e3a free</p>"},{"location":"courses/discrete/#predicate","title":"predicate \u7b49\u4ef7\u516c\u5f0f","text":"<ul> <li> <p>De Morgan's law</p> <ul> <li>\\(\\neg\\forall xP(x) \\Leftrightarrow \\exists x\\neg P(x)\\)</li> <li>\\(\\neg\\exists xP(x) \\Leftrightarrow \\forall x\\neg P(x)\\)</li> </ul> </li> <li> <p>Quantifier</p> <ul> <li>\\(\\forall x(P(x) \\wedge Q(x)) \\Leftrightarrow (\\forall xP(x)) \\wedge (\\forall xQ(x))\\)</li> <li>\\(\\exists x(P(x) \\vee Q(x)) \\Leftrightarrow (\\exists xP(x)) \\vee (\\exists xQ(x))\\)</li> </ul> </li> <li> <p>\\(\\forall\\) \u76f8\u5173</p> <ul> <li>\\(A \\wedge \\forall xP(x) \\Leftrightarrow \\forall x(A \\wedge P(x))\\)\uff0c\u82e5 A \u4e2d\u6ca1\u6709\u51fa\u73b0 x</li> <li>\\(A \\vee \\forall xP(x) \\Leftrightarrow \\forall x(A \\vee P(x))\\)\uff0c\u82e5 A \u4e2d\u6ca1\u6709\u51fa\u73b0 x</li> <li>\\(A \\rightarrow \\forall xP(x) \\Leftrightarrow \\forall x(A \\rightarrow P(x))\\)\uff0c\u82e5 A \u4e2d\u6ca1\u6709\u51fa\u73b0 x</li> <li>\u53cd\u76f4\u89c9: \\(\\forall xP(x) \\rightarrow A \\Leftrightarrow \\exists x(P(x) \\rightarrow A)\\)\uff0c\u82e5 A \u4e2d\u6ca1\u6709\u51fa\u73b0 x</li> </ul> </li> <li> <p>\\(\\exists\\) \u76f8\u5173</p> <ul> <li>\\(A \\wedge \\exists xP(x) \\Leftrightarrow \\exists x(A \\wedge P(x))\\)\uff0c\u82e5 A \u4e2d\u6ca1\u6709\u51fa\u73b0 x</li> <li>\\(A \\vee \\exists xP(x) \\Leftrightarrow \\exists x(A \\vee P(x))\\)\uff0c\u82e5 A \u4e2d\u6ca1\u6709\u51fa\u73b0 x</li> <li>\\(A \\rightarrow \\exists xP(x) \\Leftrightarrow \\exists x(A \\rightarrow P(x))\\)\uff0c\u82e5 A \u4e2d\u6ca1\u6709\u51fa\u73b0 x</li> <li>\u53cd\u76f4\u89c9: \\(\\exists xP(x) \\rightarrow A \\Leftrightarrow \\forall x(P(x) \\rightarrow A)\\)\uff0c\u82e5 A \u4e2d\u6ca1\u6709\u51fa\u73b0 x</li> </ul> </li> </ul>"},{"location":"courses/discrete/#prenex-normal-form","title":"Prenex normal form","text":"<ul> <li>\u5c06 quantifier \u653e\u5728\u547d\u9898\u6700\u524d\u9762</li> <li>\u5f62\u5f0f\uff1a\\(Q_1x_1Q_2x_2...Q_nx_nB\\)\uff0c\u5176\u4e2d \\(Q_i\\) \u4e3a \\(\\forall,\\exists,\\exists!\\)\uff0c\\(B\\) \u4e3a\u6ca1\u6709 quantifier \u7684\u547d\u9898</li> </ul>"},{"location":"courses/discrete/#chapter-2-sets-and-functions","title":"Chapter 2 - Sets and Functions","text":""},{"location":"courses/network/","title":"Data link layer","text":""},{"location":"courses/network/#sliding-window-protocol","title":"Sliding Window protocol","text":"<ul> <li> <p>A One-Bit Sliding Window Protocol (stop-and-wait)</p> </li> <li> <p>A Protocol Using Go Back N</p> </li> <li> <p>A Protocol Using Selective Repeat</p> <p>The selective repeat protocol is to allow the receiver to accept and buffer the frames following a damaged or lost one.</p> <p>The receiver accepts frames out of order but passes packets to the network layer in order</p> <p>NACK packets: receiver detected problem</p> </li> </ul>"},{"location":"courses/network/#protocol-examples-in-data-link-layer","title":"Protocol examples in Data Link layer","text":"<ul> <li>PPP (Point-to-Point Protocol)</li> </ul> <p>SONET is the physical layer protocol that is most commonly used over the wide-area optical fiber links that make up the backbone of communication networks, including the telephone system.</p>"},{"location":"courses/ADS/","title":"\u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790\u8bfe\u7a0b\u7b14\u8bb0","text":""},{"location":"courses/ADS/#_2","title":"\u7ae0\u8282\u4f20\u9001\u95e8","text":"<ul> <li>lec1 | AVL tree/Splay tree</li> <li>lec2 | RedBlack tree/B+ tree</li> </ul> <p>\u672a\u5b8c\u6210\u7684\u90e8\u5206</p> <ul> <li>lec1 | AVL tree/Splay tree splay tree\u7684\u5747\u644a\u5206\u6790</li> <li></li> </ul> <p>\u58f0\u660e</p> <p>\u672c\u7b14\u8bb0\u5f88\u5927\u90e8\u5206\u6765\u81eaisshiki\u4fee\u524d\u8f88\uff0c\u5728\u6b64\u9e23\u8c22\uff01</p>"},{"location":"courses/ADS/ads1/","title":"AVL tree","text":""},{"location":"courses/ADS/ads1/#_1","title":"\u5b9a\u4e49","text":""},{"location":"courses/ADS/ads1/#_2","title":"\u4e00\u4e9b\u5fc5\u8981\u7684\u524d\u63d0\u5b9a\u4e49","text":"<ul> <li> <p>\u9ad8\u5ea6(height of a tree)\uff1a\u6839\u7ed3\u70b9\u5230\u81ea\u5df1\u7684\u53f6\u5b69\u5b50\u7ed3\u70b9\u7684\u6700\u5927\u8ddd\u79bb\u3002\u53f6\u7ed3\u70b9\u7684\u9ad8\u5ea6\u4e3a0\uff0c\u7a7a\u7ed3\u70b9\u7684\u9ad8\u5ea6\u4e3a-1</p> </li> <li> <p>\u5e73\u8861\u56e0\u5b50(Balance Factor, BF)\uff1a\u4e00\u68f5\u6811T\u7684BF\u4e3a\\(BF(T)=height(T_l)-height(T_r)\\)\uff0c\u5176\u4e2d\\(T_l, T_r\\)\u5206\u522b\u4e3aT\u7684\u5de6\u3001\u53f3\u5b50\u6811</p> </li> </ul> <p>\u90a3\u4e48AVL tree\u5c31\u662f\u4e00\u68f5BST\uff0c\u6ee1\u8db3\u5bf9\u6240\u6709\u7ed3\u70b9T\uff0c\u90fd\u6709 \\(\\left| h(T_l)-h(T_r)\\right| \\leq 1\\)\uff0c\u5373BF\u7edd\u5bf9\u503c\u4e0d\u8d85\u8fc71\uff1b</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c\u4e8c\u53c9\u6811 T \u662f AVL \u6811\uff0c\u5219\u5176\u5de6\u53f3\u5b50\u6811\u4e5f\u90fd\u5e94\u8be5\u662f AVL \u6811\uff0c\u4e14\u6709 \\(BF(T) \\in \\{0,\\pm 1\\}\\)\uff1b</p>"},{"location":"courses/ADS/ads1/#_3","title":"\u6027\u8d28","text":""},{"location":"courses/ADS/ads1/#_4","title":"\u9ad8\u5ea6\u4e0e\u7ed3\u70b9\u6570\u7684\u5173\u7cfb","text":"<p>\u53ef\u4ee5\u8bc1\u660e\uff0c\u7ed3\u70b9\u6570\u4e3a \\(N\\) \u7684AVL\u6811\u7684\u9ad8\u5ea6\u4e3a \\(O(\\log N)\\)\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a</p> Height of AVL Trees <pre><code>graph TD;\nA((\"Root\"))\nB[/\"Left Subtree\"\\]\nC[/\"Right Subtree\"\\]\nA === B\nA === C</code></pre> <p>\u6211\u4eec\u8bb0 \\(n_h\\) \u662f\u9ad8\u5ea6\u4e3a \\(h\\) \u7684 AVL \u6811\u6240\u5305\u542b\u7684\u6700\u5c11\u8282\u70b9\u6570\uff0c\u5219\u6709\u5982\u4e0b\u9012\u63a8\u5173\u7cfb\uff1a</p> \\[ n_h = \\left\\{     \\begin{array}{l}         1                       &amp; (h = 0) \\\\         2                       &amp; (h = 1) \\\\         n_{h-1} + n_{h-2} + 1   &amp; (h &gt; 1)     \\end{array} \\right. \\] <p>\u53d1\u73b0 \\(n_h + 1\\) \u7b26\u5408 Fibonacci \u6570\u5217\u7684\u9012\u63a8\u516c\u5f0f\uff08\u4f46\u662f\u521d\u59cb\u6761\u4ef6\u4e0d\u4e00\u6837\uff09\uff0c\u6240\u4ee5\u6211\u4eec\u53ef\u4ee5\u7528 Fibonacci \u5bf9\u5176\u8fdb\u884c\u4e00\u4e2a\u4f30\u8ba1\u3002</p> <p>\u800c\u5bf9\u4e8e\u5982\u4e0b Fibonacci \u6570\u5217\uff1a</p> \\[ F_i = \\left\\{     \\begin{array}{l}         1                   &amp; (i = 1) \\\\         1                   &amp; (i = 2) \\\\         F_{i-1} + F_{i-2}   &amp; (i &gt; 2)     \\end{array} \\right. \\] <p>\u5176\u901a\u9879\u4e3a\uff1a</p> \\[ \\begin{aligned}     F_n &amp;= \\frac{1}{\\sqrt{5}} \\left( \\left( \\frac{1 + \\sqrt{5}}{2} \\right)^n - \\left( \\frac{1 - \\sqrt{5}}{2} \\right)^n \\right) \\\\         &amp;\\approx \\frac{1}{\\sqrt{5}} \\left( \\frac{1 + \\sqrt{5}}{2} \\right)^n \\\\     \\log{(F_n)} &amp;\\approx n \\end{aligned} \\] <p>\u800c \\(n_h + 1 \\approx F_{h+2}\\)\uff0c\u6240\u4ee5 \\(h \\approx \\log{(n_h)}\\)\uff0c\u4e5f\u5c31\u662f\u8bf4 \\(h \\approx \\log{N}\\)\u3002</p>"},{"location":"courses/ADS/ads1/#_5","title":"\u64cd\u4f5c","text":"<p>\u5bf9\u4e8eAVL\u6811\u7684\u63d2\u5165\uff0c\u6211\u4eec\u91c7\u7528\u6bcf\u63d2\u5165\u4e00\u4e2a\u7ed3\u70b9\uff0c\u5c31\u52a8\u6001\u300c\u8c03\u6574\u6811\u7ed3\u6784+\u66f4\u65b0\u76f8\u5173\u7ed3\u70b9BF\u5b57\u6bb5\u300d\u7684\u65b9\u5f0f\u3002\u8c03\u6574\u7684\u57fa\u672c\u64cd\u4f5c\u5305\u62ec\u5de6\u65cb\u3001\u53f3\u65cb\uff1b</p> <p>\u4e24\u4e2a\u7ed3\u70b9\u7684\u6982\u5ff5\uff1a + Trouble maker\uff1a\u6307\u63d2\u5165\u7684\u65b0\u7ed3\u70b9\uff0c\u5b83\u5bfc\u81f4AVL\u6811\u7684\u6027\u8d28\u8fdd\u53cd+  + Trouble finder\uff1a\u6307\u56e0\u63d2\u5165\u65b0\u7ed3\u70b9\uff0c\u800c\u5bfc\u81f4\u5176BF\u4e0d\u518d\u4e3a0\u62161\u7684\u7ed3\u70b9</p> <p>\u7531\u4e8e\u63d2\u5165\u64cd\u4f5c\u53ea\u4f1a\u5f71\u54cd\u4ece\u65b0\u63d2\u5165\u7684\u53f6\u7ed3\u70b9\u5230\u6839\u8fd9\u6761\u8def\u5f84\u4e0a\u7684\u7ed3\u70b9\u7684BF\u503c\uff0c\u56e0\u6b64\u5b9a\u4f4dTrouble maker\u548cTrouble finder\u65f6\u53ea\u9700\u8981\u8003\u8651\u8be5\u8def\u5f84\u4e0a\u7684\u7ed3\u70b9\uff1b\u7531\u4e8eAVL\u6811\u7684\u9012\u5f52\u5b9a\u4e49\u5f62\u5f0f\uff0c\u6211\u4eec\u503e\u5411\u4e8e\u4ece\u53f6\u5b50\u7ed3\u70b9\u5f00\u59cb\u8c03\u6574\u6811\u7684\u7ed3\u6784\uff0c\u56e0\u6b64\u5728\u5b9a\u4f4dTrouble finder\u65f6\u4e00\u822c\u5148\u5b9a\u4f4d\u6700\u9760\u8fd1\u53f6\u5b50\u7684\u7ed3\u70b9</p> <p>\u800c\u5bf9\u4e8e\u4e0d\u540c\u7684\u60c5\u51b5\uff0c\u9700\u8981\u7528\u5230\u4e0d\u540c\u7684\u5de6\u53f3\u65cb\u7ec4\u5408\u3002\u6839\u636eTrouble maker\u548cTrouble finder\u7684\u5173\u7cfb\uff0c\u6211\u4eec\u628a\u60c5\u51b5\u5206\u4e3a\u4ee5\u4e0b\u56db\u79cd\uff1a</p> <p>4 cases</p> LLRRLRRL <ul> <li>LL single rotation: Trouble maker\u4f4d\u4e8eTrouble finder\u7684 \u5de6\u5b69\u5b50 \u7684 \u5de6\u5b50\u6811 \u4e2d</li> </ul> beforeafter <pre><code>flowchart TD\n    A(((\"A\")))\n    B(((\"B\")))\n    Ar[/\"A_R\"\\]\n    Bl[/\"B_L\"\\]\n    Br[/\"B_R\"\\]\n    tm((\"Trouble\\nMaker\"))\n    A === B\n    B === Bl === tm\n    B === Br\n    A === Ar</code></pre> <pre><code>flowchart TD\n    A(((\"A\")))\n    B(((\"B\")))\n    Ar[/\"A_R\"\\]\n    Bl[/\"B_L\"\\]\n    Br[/\"B_R\"\\]\n    tm((\"Trouble\\nMaker\"))\n    B === Bl === tm\n    B === A\n    A === Br\n    A === Ar</code></pre> <ul> <li>RR single rotation: Trouble maker\u4f4d\u4e8eTrouble finder\u7684 \u53f3\u5b69\u5b50 \u7684 \u53f3\u5b50\u6811</li> </ul> beforeafter <pre><code>flowchart TD\n    A(((\"A\")))\n    Al[/\"A_L\"\\]\n    B(((\"B\")))\n    Bl[/\"B_L\"\\]\n    Br[/\"B_R\"\\]\n    tm((\"Trouble\\nMaker\"))\n    A === B\n    B === Bl\n    B === Br === tm\n    A === Al</code></pre> <pre><code>flowchart TD\n    A(((\"A\")))\n    Al[/\"A_L\"\\]\n    B(((\"B\")))\n    Bl[/\"B_L\"\\]\n    Br[/\"B_R\"\\]\n    tm((\"Trouble\\nMaker\"))\n    B === A\n    A === Bl\n    B === Br === tm\n    A === Al</code></pre> <ul> <li>LR double rotation: Trouble maker\u4f4d\u4e8eTrouble finder\u7684 \u5de6\u5b69\u5b50 \u7684 \u53f3\u5b50\u6811 \u4e2d</li> </ul> beforemiddleafter <pre><code>flowchart TD\n    A(((\"A\")))\n    B(((\"B\")))\n    Ar[/\"A_R\"\\]\n    Bl[/\"B_L\"\\]\n    C(((\"C\")))\n    Cl[/\"C_L\"\\]\n    Cr[/\"C_R\"\\]\n    tm((\"Trouble\\nMaker\"))\n    A === B\n    A === Ar\n    B === Bl\n    B === C\n    C === Cl === tm\n    C === Cr === tm</code></pre> <pre><code>flowchart TD\n    A(((\"A\")))\n    B(((\"B\")))\n    Ar[/\"A_R\"\\]\n    Bl[/\"B_L\"\\]\n    C(((\"C\")))\n    Cl[/\"C_L\"\\]\n    Cr[/\"C_R\"\\]\n    tm((\"Trouble\\nMaker\"))\n    A === C\n    C === B === Bl\n    C === Cr === tm\n    B === Cl === tm\n    A === Ar</code></pre> <pre><code>flowchart TD\n    A(((\"A\")))\n    B(((\"B\")))\n    Ar[/\"A_R\"\\]\n    Bl[/\"B_L\"\\]\n    C(((\"C\")))\n    Cl[/\"C_L\"\\]\n    Cr[/\"C_R\"\\]\n    tm((\"Trouble\\nMaker\"))\n    C === B === Bl\n    B === Cl === tm\n    C === A\n    A === Cr === tm\n    A === Ar</code></pre> <ul> <li>RL double rotaion: Trouble maker\u4f4d\u4e8eTrouble finder\u7684 \u53f3\u5b69\u5b50 \u7684 \u5de6\u5b50\u6811 \u4e2d</li> </ul> beforemiddleafter <pre><code>flowchart TD\n    A(((\"A\")))\n    Al[/\"A_L\"\\]\n    B(((\"B\")))\n    C(((\"C\")))\n    Cl[/\"C_L\"\\]\n    Cr[/\"C_R\"\\]\n    Br[/\"B_R\"\\]\n    tm((\"Trouble\\nMaker\"))\n    A === Al\n    A === B\n    B === C\n    C === Cl === tm\n    C === Cr === tm\n    B === Br</code></pre> <pre><code>flowchart TD\n    A(((\"A\")))\n    Al[/\"A_L\"\\]\n    B(((\"B\")))\n    C(((\"C\")))\n    Cl[/\"C_L\"\\]\n    Cr[/\"C_R\"\\]\n    Br[/\"B_R\"\\]\n    tm((\"Trouble\\nMaker\"))\n    A === Al\n    A === C\n    C === Cl === tm\n    C === B\n    B === Cr === tm\n    B === Br</code></pre> <pre><code>flowchart TD\n    A(((\"A\")))\n    Al[/\"A_L\"\\]\n    B(((\"B\")))\n    C(((\"C\")))\n    Cl[/\"C_L\"\\]\n    Cr[/\"C_R\"\\]\n    Br[/\"B_R\"\\]\n    tm((\"Trouble\\nMaker\"))\n    C === A\n    A === Al\n    A === Cl === tm\n    C === B\n    B === Cr === tm\n    B === Br</code></pre>"},{"location":"courses/ADS/ads1/#splay-tree","title":"Splay tree","text":"<p>\u6ee1\u8db3\u6570\u636e\u8bbf\u95ee\u7684access locality\u539f\u5219\uff0c\u5f53\u524d\u8bbf\u95ee\u8fc7\u7684\u7ed3\u70b9\u5927\u6982\u7387\u518d\u6b21\u8bbf\u95ee</p>"},{"location":"courses/ADS/ads1/#_6","title":"\u6027\u8d28","text":""},{"location":"courses/ADS/ads1/#amortized-time-bound","title":"Amortized time bound\uff08\u5747\u644a\u65f6\u95f4\u4e0a\u754c\uff09","text":"<p>Any M consecutive tree operations starting from an empty tree take at most \\(O(M \\log N)\\) time.</p>"},{"location":"courses/ADS/ads1/#_7","title":"\u64cd\u4f5c","text":""},{"location":"courses/ADS/ads1/#_8","title":"\u5143\u64cd\u4f5c","text":"<p>\u5bf9\u4e8e\u975e\u6839\u7ed3\u70b9X\uff0c\u8bb0\u5b83\u7684\u7236\u4eb2\u548c\u7956\u7236\u7ed3\u70b9\u4e3aP\u3001G</p> <ul> <li>case1: P\u662froot\uff0c\u5219\u901a\u8fc7\u4e00\u6b21\u65cb\u8f6cX\u3001P</li> <li>case2: P\u4e0d\u662froot</li> </ul> zigzag zigzig X,P\u65cb\u8f6c; X,G\u65cb\u8f6c P,G\u65cb\u8f6c; X,G\u65cb\u8f6c"},{"location":"courses/ADS/ads1/#_9","title":"\u5355\u7ed3\u70b9\u64cd\u4f5c","text":"<ul> <li>find \u627e\u5230\u8be5\u7ed3\u70b9\uff0c\u5c06\u5176\u901a\u8fc7\u4e0a\u8ff02\u79cd\u5143\u64cd\u4f5c\u79fb\u81f3root\u8282\u70b9</li> <li>insert \u548c\u666e\u901a\u7684BST\u63d2\u5165\u4e00\u6837\uff0c\u6811\u7ed3\u6784\u8c03\u6574\u4e3b\u8981\u4f9d\u8d56\u4e8efind\u64cd\u4f5c</li> <li>delete<ol> <li>find\u8be5\u7ed3\u70b9X\uff0c\u6b64\u65f6X\u5df2\u4f4d\u4e8eroot\uff1b</li> <li>\u7136\u540e\u79fb\u9664\u5b83\uff1b</li> <li>\u7136\u540e\u627e\u5230X\u5de6\u5b50\u6811\u7684\u6700\u5927\u8282\u70b9Y\uff0c\u5c06Y\u7684\u5de6\u5b50\u6811\u79fb\u81f3Y\u7236\u4eb2\u7684\u5b69\u5b50\uff0c\u518d\u5c06Y\u79fb\u81f3root\uff0croot\u7684\u5de6\u53f3\u5b50\u6811\u4f5c\u4e3aY\u7684\u5de6\u53f3\u5b50\u6811\uff08\u666e\u901a\u7684BST\u5220\u9664\uff09</li> </ol> </li> </ul>"},{"location":"courses/ADS/ads1/#amortized-analysis","title":"Amortized Analysis","text":""},{"location":"courses/ADS/ads1/#aggregate-analysis","title":"Aggregate analysis","text":"<p>\u76f4\u63a5\u5206\u6790\u4e00\u4e32n\u4e2a\u7684\u64cd\u4f5c\u603b\u5171\u82b1\u8d39\u7684worst-case time \\(T(n)\\)\uff0c\u5f97\u5230\u6bcf\u4e2a\u64cd\u4f5c\u5747\u644a\u65f6\u95f4\u4e3a \\(T(n)/n\\)</p>"},{"location":"courses/ADS/ads1/#accounting-method","title":"Accounting method","text":"<p>\u5bf9\u4e8e\u4e00\u4e32n\u4e2a\u7684\u64cd\u4f5c\uff0c\u5c06\u67d0\u64cd\u4f5c\u7684\u5747\u644a\u6210\u672c \\(\\tilde{c_i}\\) \u548c\u5b9e\u9645\u6210\u672c \\(c_i\\) \u7684\u5dee\u7d2f\u52a0\u5230credit\u4e0a\uff0c\u82e5\u67d0\u64cd\u4f5c\u7684\u5747\u644a\u6210\u672c \\(\\tilde{c_i}\\) \u9ad8\u4e8e\u5b9e\u9645\u6210\u672c \\(c_i\\)\uff0c\u5219credit\u589e\u52a0\uff0c\u53ef\u7528\u4e8e\u540e\u7eed\u64cd\u4f5c\u7684\u6d88\u8d39\u900f\u652f\uff1b\u82e5\u67d0\u64cd\u4f5c\u7684\u5747\u644a\u6210\u672c\u4f4e\u4e8e\u5b9e\u9645\u6210\u672c\uff0c\u5219\u6d88\u8017credit</p> \\[ \\tilde{c_i}-c_i=credit_i\\\\ credit=\\sum_{i=1}^{n}\\tilde{c_i}-\\sum_{i=1}^{n}c_i \\ge 0\\\\ T_{amortized}=\\frac{\\sum_{i=1}^{n}\\tilde{c_i}}{n} \\ge \\frac{\\sum_{i=1}^{n}c_i}{n} \\] <p>\u4e00\u822c\u6765\u8bf4\uff0c\u6211\u4eec\u5206\u6790\u51fa\u6bcf\u4e2a\u64cd\u4f5c\u7684\u5747\u644a\u6210\u672c\uff0c\u7136\u540e\u7d2f\u52a0\u3002\u4f8b\u5982\u5bf9\u4e8e\u5177\u6709<code>multipop</code>\u64cd\u4f5c\u7684stack\u800c\u8a00</p> <code>push</code> <code>pop</code> <code>multipop</code> \\(c_i\\) 1 1 <code>min(sizeof(stack), k)</code> \\(\\tilde{c_i}\\) 2 0 0 <p>\u76f8\u5f53\u4e8e\u662f\u5728push\u64cd\u4f5c\u65f6\u5df2\u7ecf\u5c06<code>pop</code>\u548c<code>multipop</code>\u7684\u6210\u672c\u5df2\u7ecf\u8003\u8651\u8fdb\u53bb</p>"},{"location":"courses/ADS/ads1/#potential-method","title":"Potential method","text":"<p>\u76f8\u6bd4\u4e8eaccounting method\uff0c\u52bf\u80fd\u51fd\u6570\u5206\u6790\u6cd5\u7684\u533a\u522b\u5728\u4e8e\u6bcf\u6b21\u64cd\u4f5c\u7684credit\u662f\u52bf\u80fd\u51fd\u6570\u7684\u524d\u540e\u5dee\uff0c\u66f4\u52a0\u7075\u6d3b\uff1b\u800c\u52bf\u80fd\u51fd\u6570\u5219\u662f\u5173\u4e8e\u6570\u636e\u7ed3\u6784\u5f53\u524d\u72b6\u6001\u7684\u51fd\u6570</p> \\[ \\tilde{c_i}-c_i=credit_i=\\phi(D_i)-\\phi(D_{i-1})\\\\ \\sum_{i=1}^{n}\\tilde{c_i}=\\sum_{i=1}^{n}(c_i+\\phi(D_i)-\\phi(D_{i-1}))\\\\ =(\\sum_{i=1}^{n}c_i)+\\underbrace{\\phi(D_i)-\\phi(D_{i-1})}_{\\ge 0} \\] <p>\u4f8b\u5982\u5bf9\u4e8esplay tree\u800c\u8a00\uff0c \u6211\u4eec\u5e0c\u671b\u64cd\u4f5c\u7684\u6210\u672c\u8d8a\u9ad8\uff0c\u5219\u52bf\u80fd\u51fd\u6570\u964d\u4f4e\u7684\u8d8a\u591a\uff1b\u800c\u6210\u672c\u8d8a\u9ad8\uff0c\u6811\u7684\u7ed3\u6784\u8c03\u6574\u8d8a\u591a\uff0c\u90a3\u4e48\u6bcf\u4e2a\u7ed3\u70b9\u7684\u9ad8\u5ea6\u51cf\u5c0f\u8d8a\u591a\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u52bf\u80fd\u51fd\u6570\u8bbe\u4e3a\u4e0e\u6240\u6709\u7ed3\u70b9\u9ad8\u5ea6\u548c\u76f8\u5173\u7684\u51fd\u6570\u3002</p> <p>\u6211\u4eec\u91c7\u7528 \\(\\phi(T)=\\sum_{i\\in T}\\log S(i)\\) \uff0c\u5176\u4e2d \\(S(i)\\) \u662f\u4ee5i\u4e3a\u6839\u7684\u5b50\u6811\u7684\u540e\u4ee3\u6570\u91cf\uff0c \\(\\log S(i)\\) \u7528\u4e8e\u8fd1\u4f3c\u5b50\u6811\u7684\u9ad8\u5ea6</p> <p>\u5177\u4f53\u8ba1\u7b97\u5c31\u7b97\u4e86\uff0c\u592a\u96be\u4e86\uff08</p>"},{"location":"courses/ADS/ads2/","title":"Red Black tree\uff08\u7ea2\u9ed1\u6811\uff09","text":"<p>\u7ea2\u9ed1\u6811\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u6784\u5efa\u5e73\u8861\u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5176\u7ed3\u70b9\u9664\u5305\u542b\u952e\u503c\u548c\u5de6\u53f3\u5b50\u6811\u6307\u9488\u5916\uff0c\u8fd8\u6709\u989c\u8272\u5b57\u6bb5</p> <p>\u7ea2\u9ed1\u6811\u7684\u5185\u90e8\u8282\u70b9\u5373\u6811\u672c\u8eab\u5177\u6709\u7684\u7ed3\u70b9\uff1b\u5916\u90e8\u8282\u70b9\u662f\u6307\u6bcf\u4e2a\u5185\u90e8\u8282\u70b9\u7684\u7a7a\u5b69\u5b50\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a<code>NIL</code>\u7ed3\u70b9\uff0c\u5b83\u4e5f\u662f\u9ed1\u8272\u7684\uff1b</p> <p>\u82e5\u7b97\u4e0a\u5916\u90e8\u8282\u70b9<code>NIL</code>\uff0c\u5219\u7ea2\u9ed1\u6811\u7684\u53f6\u7ed3\u70b9\u5747\u4e3a<code>NIL</code></p>"},{"location":"courses/ADS/ads2/#_1","title":"\u5b9a\u4e49","text":"<p>\u7ea2\u9ed1\u6811\u662f\u6ee1\u8db3\u4e0b\u52175\u6761\u6027\u8d28\u7684BST</p> <ol> <li>\u6bcf\u4e2a\u7ed3\u70b9\u975e\u7ea2\u5373\u9ed1 </li> <li>root\u4e3a\u9ed1</li> <li>\u6bcf\u4e2a\u53f6\u7ed3\u70b9\uff08<code>NIL</code>\uff09\u5747\u4e3a\u9ed1\u8272</li> <li>\u82e5\u67d0\u7ed3\u70b9\u4e3a\u7ea2\u8272\uff0c\u5219\u5b83\u7684\u4e24\u4e2a\u5b69\u5b50\u5747\u4e3a\u9ed1\u8272</li> <li>\u5bf9\u4e0e\u6bcf\u4e00\u4e2a\u7ed3\u70b9\uff0c\u4ece\u5b83\u5f00\u59cb\u7684\u6240\u6709simple path\uff08\u4e00\u8def\u5411\u4e0b\u76f4\u5230<code>NIL</code>\uff09\u90fd\u5305\u542b\u76f8\u540c\u6570\u91cf\u7684\u9ed1\u8282\u70b9</li> </ol>"},{"location":"courses/ADS/ads2/#_2","title":"\u5b50\u5b9a\u4e49","text":"<p>\u9ed1\u9ad8(black-height, bh)\uff1a\u67d0\u7ed3\u70b9\u7684\u9ed1\u9ad8\u4e3a\u4ece\u8be5\u7ed3\u70b9\u5f00\u59cb\u7684simple path\u4e0a\u5305\u542b\u7684\u9ed1\u7ed3\u70b9\u6570\u91cf\uff08\u4e0d\u5305\u62ec\u81ea\u8eab\uff09\uff1bbh(tree)=bh(root)</p>"},{"location":"courses/ADS/ads2/#_3","title":"\u6027\u8d28","text":"<p>\u6709n\u4e2a\u5185\u90e8\u8282\u70b9\u7684\u7ea2\u9ed1\u6811\uff0c\u9ad8\u5ea6\u6700\u5927\u662f \\(2\\log_2 (n+1)\\)</p> <p>Height of RB Trees</p> <p>\u4e00\u4e2a\u663e\u7136\u7684\u524d\u63d0\uff1a\u4efb\u4f55simple path\u4e0a\u7684\u9ed1\u7ed3\u70b9\u6570\u5927\u4e8e\u7b49\u4e8e\u7ea2\u7ed3\u70b9\u6570</p> <ol> <li>\u9996\u5148\u6709 \\(n\\ge 2^{bh}-1\\)\uff0c\u5373 \\(bh\\le \\log_2(n+1)\\)</li> <li>\u53c8\u663e\u7136\u6709 \\(2bh(Tree)\\ge h(Tree)\\)</li> <li>\u56e0\u6b64 \\(h(Tree)\\le 2\\log_2 (n+1)\\)</li> </ol>"},{"location":"courses/ADS/ads2/#_4","title":"\u64cd\u4f5c","text":""},{"location":"courses/ADS/ads2/#insert","title":"insert","text":"<p>\u6211\u4eec\u5728\u63d2\u5165\u65b0\u7ed3\u70b9\u65f6\u4e00\u5f8b\u5c06\u5176\u8bbe\u4e3a\u7ea2\u8272\uff0c\u540e\u7eed\u8fdb\u884c\u8c03\u6574</p> <ul> <li>\u65b0\u7ed3\u70b9\u7684\u7236\u4eb2\u4e3a\u9ed1\u8272\uff0c\u5219\u65e0\u9700\u8c03\u6574</li> <li>\u65b0\u7ed3\u70b9\u7684\u7236\u4eb2\u4e3a\u7ea2\u8272 \u5219\u6709\u4ee5\u4e0b3\u79cd\u60c5\u51b5</li> </ul> <p>Note</p> <p>\u7531\u4e8e\u65b0\u63d2\u5165\u7684\u7ed3\u70b9\u4e5f\u6709\u5b50\u8282\u70b9<code>NIL</code>\uff0c\u800c\u5728\u8c03\u6574\u8fc7\u7a0b\u4e2d\u4e5f\u4f1a\u51fa\u73b0\u7236\u8f88\u4e2d\u7684\u7ea2\u7ed3\u70b9\u8fdd\u4f8b\u73b0\u8c61\uff0c\u56e0\u6b64\u6240\u6709\u7ea2\u7ed3\u70b9\u5728\u793a\u610f\u56fe\u4e2d\u5747\u6709\u4e24\u4e2a\u5b69\u5b50\uff0c\u4e14\u201c\u88ab\u63d2\u5165\u7684\u7ea2\u8272\u7ed3\u70b9\u201d\u672a\u5fc5\u662f\u6700\u5e95\u5c42\u7684\u7ed3\u70b9</p> <p>Insert</p> <p></p> <ul> <li> <p>case3: \u53d4\u53d4\u4e3a\u9ed1\uff0c\u81ea\u5df1\u662f\u53d4\u53d4\u7684\u8fdc\u4f84</p> <p>\u53ef\u76f4\u63a5\u89e3\u51b3\uff0c\u4e0d\u7528\u9012\u5f52\u5411\u4e0a</p> </li> </ul> <ul> <li> <p>case2: \u53d4\u53d4\u4e3a\u9ed1\uff0c\u81ea\u5df1\u4e3a\u53d4\u53d4\u7684\u8fd1\u4f84</p> <p>\u5148\u65cb\u8f6c\u6210\u8fdc\u4f84\uff0c\u518d\u6309case3\u64cd\u4f5c</p> <p>\u53ef\u76f4\u63a5\u89e3\u51b3\uff0c\u4e0d\u7528\u9012\u5f52\u5411\u4e0a</p> </li> </ul> <ul> <li> <p>case1: \u53d4\u53d4\u4e3a\u7ea2</p> <p>\u5c06\u7237\u7237\u7684\u9ed1\u5411\u4e0b\u4f20\u9012\u7ed9\u4e24\u4e2a\u5b69\u5b50\uff08\u4e0b\u653e\uff09\uff0c\u7237\u7237\u53d8\u7ea2\uff0c\u5c06\u95ee\u9898\u629b\u7ed9\u7237\u7237\u89e3\u51b3</p> </li> </ul> <p>RBtree insert</p> case3case2case1 <p></p> <p></p> <p></p>"},{"location":"courses/ADS/ads2/#delete","title":"delete","text":"<p>\u7531\u4e8e\u5220\u9664\u7ea2\u7ed3\u70b9\u4e0d\u5f71\u54cd\u9ed1\u9ad8\uff0c\u56e0\u6b64\u4ee5\u4e0b1.\u548c2.\u4ec5\u8003\u8651\u5220\u9664\u9ed1\u7ed3\u70b9\uff1a</p> <ol> <li> <p>\u5220\u9664\u53f6\u7ed3\u70b9</p> </li> <li> <p>\u5220\u9664\u6709\u5355\u5b69\u7ed3\u70b9</p> </li> <li> <p>\u5220\u9664\u4e8c\u5b69\u7ed3\u70b9</p> <p>\u7528\u666e\u901a\u641c\u7d22\u6811\u7684\u5220\u9664\u64cd\u4f5c\uff0c\u5c06\u5de6\u5b50\u6811\u6700\u5927\u5b69\u9876\u66ff\u4e0a\u6765\uff0c\u8ba9\u5b83\u4fdd\u6301\u88ab\u5220\u9664\u7ed3\u70b9\u7684\u989c\u8272\uff1b</p> <p>\u6b64\u65f6\uff0c\u76f8\u5f53\u4e8e\u5de6\u5b50\u6811\u6700\u5927\u5b69\u539f\u5148\u6240\u5728\u7684\u4f4d\u7f6e\u4f5c\u4e3a\u5220\u9664\u7ed3\u70b9\u7684\u4f4d\u7f6e\uff0c\u800c\u8be5\u4f4d\u7f6e\u4ec5\u6709\u5355\u5b69\uff0c\u6240\u4ee5\u53ef\u4ee5\u5f52\u7ed3\u4e3a1. \u548c2. \u7684\u60c5\u5f62</p> </li> </ol> <p>\u6211\u4eec\u5c06\u88ab\u5220\u9664\u7ed3\u70b9\u7684\u5b50\u7ed3\u70b9\u79fb\u4e0a\u6765\u540e\uff0c\u82e5\u8be5\u5b50\u7ed3\u70b9\u539f\u5148\u4e3a\u7ea2\uff0c\u5219\u6b64\u65f6\u67d3\u9ed1\u540e\u6b63\u597d\u7b26\u5408\uff0c\u56e0\u6b64\u4ec5\u8003\u8651\u8be5\u5b50\u7ed3\u70b9\u539f\u5148\u4e3a\u9ed1\uff1b</p> <p>\u82e5\u8be5\u5b50\u7ed3\u70b9\u539f\u5148\u4e3a\u9ed1\uff0c\u5219\u4e3a\u4e86\u4fdd\u6301\u7ea2\u9ed1\u6811\u5176\u4ed6\u6027\u8d28\u4e0d\u53d8\uff0c\u6211\u4eec\u5c06\u5b83\u8bbe\u7f6e\u4e3a\u53cc\u9ed1\u7ed3\u70b9\uff08\u4e00\u4e2a\u7ed3\u70b9\u7b97\u4f5c\u4e24\u4e2a\u9ed1\u9ad8\uff09\uff0c\u5e76\u5c06\u5b83\u8bb0\u4f5cx\uff0c\u5b83\u7684\u5144\u5f1f\u8bb0\u4f5cw</p> <p>\u4e8e\u662f\uff0c\u95ee\u9898\u53ef\u4ee5\u5206\u4e3a</p> <ul> <li> <p>\u5144\u5f1fw\u4e3a\u7ea2(case1)</p> </li> <li> <p>\u5144\u5f1fw\u4e3a\u9ed1</p> <ul> <li>\u8fd1\u4f84\u4e3a\u9ed1\uff0c\u8fdc\u4f84\u4e3a\u9ed1(case2)</li> <li>\u8fd1\u4f84\u4e3a\u7ea2\uff0c\u8fdc\u4f84\u4e3a\u9ed1(case3)</li> <li>\u8fd1\u4f84\uff1f\uff1f\uff0c\u8fdc\u4f84\u4e3a\u7ea2(case4)</li> </ul> </li> </ul> <p>Delete</p> <p></p> <ul> <li>case1: \u5144\u5f1f\u7ea2</li> </ul> <p>\u5148\u7236\u5144\u6362\u8272\uff0c\u7136\u540e\u518d\u65cb\u8f6c-&gt;\u5144\u5f1f\u9ed1</p> <ul> <li> <p>case2: \u4e24\u4f84\u5747\u9ed1</p> <p>x\u548cw\u5747\u4e0a\u4f20\u4e00\u4e2a\u9ed1\u9ad8\uff1b</p> <p>\u82e5\u7236\u4eb2\u4e3a\u7ea2\uff0c\u5219\u67d3\u9ed1\uff1b\u82e5\u7236\u4eb2\u4e3a\u9ed1\uff0c\u5219\u7236\u4eb2\u53cc\u9ed1\u7ed3\u70b9\u4e0a\u4f20\u81f3\u7236\u4eb2\uff0c\u9012\u5f52\u89e3\u51b3</p> </li> </ul> <ul> <li> <p>case3: \u8fd1\u4f84\u7ea2\uff0c\u8fdc\u4f84\u9ed1</p> <p>\u65cb\u8f6c\u6210\u8fdc\u4f84\u7ea2-&gt;case4</p> </li> </ul> <ul> <li> <p>case4: \u8fdc\u4f84\u7ea2</p> <p>\u5c06\u8fdc\u4f84\u67d3\u9ed1\uff1b\u4ea4\u6362\u7236\u5144\u989c\u8272\uff1b\u65cb\u8f6c</p> </li> </ul> <p>Summary</p> <p>\u5bf9\u5355\u7ed3\u70b9\u800c\u8a00\uff0cdelete\u6700\u591a\u65cb\u8f6c3\u6b21</p> <ul> <li>case1\u65cb\u8f6c\u4e00\u6b21-&gt;case2,3,4</li> <li>case2\u4e0d\u7528\u65cb\u8f6c\uff0c\u6216\u76f4\u63a5\u6216\u9012\u5f52\u89e3\u51b3</li> <li>case3\u65cb\u8f6c\u4e00\u6b21-&gt;case4</li> <li>case4\u65cb\u8f6c\u4e00\u6b21\u89e3\u51b3</li> </ul> <p>worst case\u5373\u4e3a\uff1acase1 -&gt; case3 -&gt; case4 -&gt; done</p>"},{"location":"courses/ADS/ads2/#b-treeb","title":"B+ tree\uff08B+\u6811\uff09","text":""},{"location":"courses/ADS/ads2/#_5","title":"\u5b9a\u4e49","text":"<p>\u4e00\u68f5M\u9636B+\u6811\u7684\u5c5e\u6027\u5982\u4e0b\uff1a</p> <ol> <li>\u6839\u8282\u70b9\u662f\u53f6\u7ed3\u70b9\uff0c\u6216\u67092~M\u4e2a\u5b69\u5b50\u7684\u975e\u53f6\u7ed3\u70b9</li> <li>\u6240\u6709\u975e\u53f6\u7ed3\u70b9\uff08\u9664\u6839\u7ed3\u70b9\u5916\uff09\u5747\u6709\\(\\lceil \\frac{M}{2}\\rceil\\)~\\(M\\)\u4e2a\u5b69\u5b50</li> <li>\u6240\u6709\u53f6\u5b50\u9ad8\u5ea6\u76f8\u540c\uff0c\u6240\u6709\u975e\u6839\u7684\u53f6\u7ed3\u70b9\u4e5f\u6709\\(\\lceil \\frac{M}{2}\\rceil\\)~\\(M\\)\u4e2a\u5b69\u5b50</li> </ol>"},{"location":"courses/ADS/ads2/#_6","title":"\u64cd\u4f5c","text":"<p>M\u9636B+\u6811\u7684\u63d2\u5165\u590d\u6742\u5ea6\u4e3a\\(O(\\frac{M}{\\log M}\\log N)\\)</p> <p>B+ tree insertion</p> <p>\u6811\u7684\u6700\u5927\u9ad8\u5ea6\u4e3a\\(O(\\lceil\\log_{\\frac{M}{2}\\rceil}{N})=O(\\frac{\\log N}{\\log M})\\)\uff0c</p> <p>\u63d2\u5165\u4e00\u4e2a\u503c\u53ef\u80fd\u4f1a\u4f7f\u6bcf\u4e00\u5c42\u90fd\u5206\u88c2\uff0c\u5206\u88c2\u65f6\u9700\u8981\u62f7\u8d1d\\(O(M)\\)\u4e2a\u7d22\u5f15\u503c\uff0c\u56e0\u6b64\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a $$ T(M,N)=O(M)O(\\frac{\\log N}{\\log M})=O(\\frac{M}{\\log M}\\log N) $$</p> <p>\u67e5\u627e\u590d\u6742\u5ea6\u5219\u4e3a\\(T_{find}(M,N)=O(\\log M \\times \\frac{\\log N}{\\log M})=O(\\log N)\\)</p>"},{"location":"courses/CO/2_instruction/","title":"\u7b2c2\u7ae0 Risc-V ISA","text":""},{"location":"courses/CO/2_instruction/#operation","title":"operation","text":""},{"location":"courses/CO/2_instruction/#arithmetic","title":"arithmetic\u6307\u4ee4\u7684\u89c4\u5219\u548c\u7edf\u4e00\u5f62\u5f0f","text":"<ul> <li>\u6bcf\u6761\u6307\u4ee4\u53ea\u80fd\u6267\u884c1\u4e2a\u64cd\u4f5c\uff0c\u5982add\u3001and\u3001\u6570\u636e\u5b58\u53d6\u7b49</li> <li>Exactly three variables \u5982<code>add a,b,c</code>, a\u2190b+c</li> </ul>"},{"location":"courses/CO/2_instruction/#operand","title":"operand","text":"<p>Risc-V\u7684arithmetic\u6307\u4ee4\u7684\u64cd\u4f5c\u6570\u5fc5\u987b\u662fregister</p>"},{"location":"courses/CO/2_instruction/#register-word-4-bytes","title":"Register, Word (4 Bytes)","text":"Risc-V Registers Name Register Name Usage Preserved or call? x0 (zero) 0 The constant value 0 n.a. x1 (ra) 1 Return address(link register) yes x2 (sp) 2 Stack pointer yes x3 (gp) 3 Global pointer yes x4 (tp) 4 Thread pointer yes x5-x7 (t0-t2) 5-7 Temporaries no x8 (s0/fp) 8 Saved/frame pointer yes x9 (s1) 9 Saved yes x10-x17 (a0-a7) 10-17 Arguments/results no x18-x27 (s2-s11) 18-27 Saved yes x28-x31 (t3-t6) 28-31 Temporaries no PC - Add Upper Immediate to PC yes <p>\u6839\u636e\u6559\u6750\u7684\u786c\u4ef6\u8bbe\u65bd\uff0c\u670932\u4e2a64bit\u7684register\uff0cmemory\u4e2d\u7684\u6570\u636e\u4ee51\u4e2adoubleword (8Byte = 64bit) \u4e3a\u4e00\u4e2a\u8bbf\u95ee\u5355\u4f4d\uff0c\u6bcf\u4e00\u6b21\u8bbf\u95eememory\u90fd\u662f\u8bbf\u95ee\u4e00\u4e2adoubleword\u5757\uff0c\u56e0\u6b64\u8bbf\u95ee\u8d77\u59cb\u5730\u5740\u4e3a 0, 8, 16, 24...\u4ee5\u6b64\u7c7b\u63a8</p>"},{"location":"courses/CO/2_instruction/#memory-operands","title":"memory operands","text":"<ul> <li>\u4e3b\u5b58(main memory)\u7528\u4e8e\u5b58\u653e\u590d\u6742\u6570\u636e\u7ed3\u6784 \u5982Arrays, structures, dynamic data</li> <li>\u8fdb\u884c\u7b97\u672f\u8fd0\u7b97\u901a\u8fc7<ul> <li>Load values from memory into registers</li> <li>Store result from register to memory</li> </ul> </li> <li>Memory is byte addressed Each address identifies an 8-bit byte</li> <li>RISC-V is Little Endian<ul> <li>\u5c0f\u7aef\u6cd5\uff1aLeast-significant byte at least address of a word</li> <li>\u5927\u7aef\u6cd5: most-significant byte at least address</li> </ul> </li> <li>RISC-V does not require words to be aligned in memory words align: \u4e00\u4e2a\u5b57\u662f 4 \u5b57\u8282\uff0c\u6211\u4eec\u8981\u6c42\u5b57\u7684\u8d77\u59cb\u5730\u5740\u4e00\u5b9a\u8981\u662f 4 \u7684\u500d\u6570\u3002</li> </ul>"},{"location":"courses/CO/2_instruction/#registers-vs-memory","title":"Registers vs. Memory","text":"<ul> <li>Registers are faster to access than memory</li> <li>Operating on memory data requires loads and stores</li> <li>Compiler must use registers for variables as much as possible \u7f16\u8bd1\u5668\u5c3d\u91cf\u4f7f\u7528\u5bc4\u5b58\u5668\u5b58\u53d8\u91cf\u3002\u53ea\u6709\u5728\u5bc4\u5b58\u5668\u4e0d\u591f\u7528\u65f6\uff0c\u624d\u4f1a\u628a\u4e0d\u592a\u7528\u7684\u503c\u653e\u56de\u5185\u5b58\u3002</li> </ul> <p>Risc-V ISA</p> <p></p> <p>memory operand example</p> Casm <pre><code>A[12] = h + A[8];\n/* assume A is an array of 8Byte elements (a doubleword),\nBase of A is stored in x22, h in x21 */\n</code></pre> <pre><code>ld x9, 64(x22)\nadd x9, x21, x9\nsd x9, 96(x22)\n</code></pre>"},{"location":"courses/CO/2_instruction/#instruction-set","title":"Instruction set","text":""},{"location":"courses/CO/2_instruction/#procedure-calling","title":"procedure calling\uff08\u51fd\u6570\u8c03\u7528\uff09","text":"<ul> <li>sp (stack pointer) : \u6307\u5411\u5f53\u524d\u7684\u6808\u9876\uff0c\u5728\u5f53\u524d\u8fdb\u7a0b\u4e2d\u4e0d\u65ad\u53d8\u5316</li> <li>fp (frame pointer) : \u6307\u5411\u5f53\u524d\u8fdb\u7a0b\u7684\u6808\u5e95</li> </ul>"},{"location":"courses/CO/3_arithmatic/","title":"\u7b2c\u4e09\u7ae0 Arithmetic for Computer","text":""},{"location":"courses/CO/3_arithmatic/#overflow","title":"Overflow","text":"<p>\u5bf9\u4e8eoverflow\u7684\u68c0\u67e5\uff0c\u6211\u4eec\u91c7\u7528double sign-bits\u7684\u65b9\u6cd5\u6765\u68c0\u6d4b\uff0c\u5728\u4e24\u64cd\u4f5c\u6570<code>A[n,0]</code>\u548c<code>B[n,0]</code>\u6700\u9ad8\u4f4d\u524d\u6dfb\u52a0\u4e00\u4f4d0\uff0c\u4f7f\u5f97<code>C[n+1,0] = {0,A} + {0,B}</code>\u3002\u6709\u4ee5\u4e0b4\u79cd\u60c5\u51b5\uff1a </p>"},{"location":"courses/CO/3_arithmatic/#alu","title":"ALU","text":"<ul> <li>\u6700\u6734\u7d20\u7684ALU \u53ef\u4ee5\u5b9e\u73b0AND,OR,ADD\u529f\u80fd</li> <li>\u5e26\u51cf\u6cd5\u7684ALU \u6dfb\u52a01bit\u7684Binvert\u4fe1\u53f7</li> <li> <p>\u5e26comparison\u7684ALU \u5728MUX\u4e2d\u6dfb\u52a0\u63a5\u53e3less\u8fdb\u884c\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u6bd4\u5927\u5c0f</p> <p>\u82e5A,B\u540c\u53f7\uff0c\u5219\u6839\u636eA-B\u7684\u7b26\u53f7\u4f4d\u5224\u65ad\u5927\u5c0f\uff1b\u5426\u5219\u76f4\u63a5\u6839\u636e\u7b26\u53f7\u5224\u65ad</p> </li> <li> <p>\u5b8c\u6574ALU 1. \u8f93\u5165\uff1aA\u3001B 2. \u63a7\u5236\u4fe1\u53f7\uff1aBinvert\u3001Operation\u3001Carry in 3. \u8f93\u51fa\uff1aresult\u3001overflow\u3001Zero detector 4. \u591a\u4f4d\u8f93\u5165\u5e76\u884c\uff0c\u8fdb\u4f4d\u7684\u4f20\u64ad\u901a\u8fc7\u884c\u6ce2\u4e32\u884c(ripple carry)</p> </li> <li> <p>\u7f3a\u70b9\uff1a 1. redundancy parallel input 2. ripple carry adder is slow</p> </li> </ul>"},{"location":"courses/CO/3_arithmatic/#faster-adders","title":"Faster adders","text":""},{"location":"courses/CO/3_arithmatic/#carry-look-ahead-addercla","title":"Carry look-ahead adder(CLA)","text":"<p>\u8fdb\u4f4d\u7684\u4f20\u64ad\u53ef\u4ee5\u5206\u89e3\u4e3a<code>C[i+1]=G[i]+P[i]C[i]</code>\uff0c\u800c<code>G[i]=A[i]B[i]</code>\uff0c<code>P[i]=A[i] ^ B[i]</code> \u6bcf4\u4e2aadder\u4e00\u7ec4\uff0c\u5185\u90e8\u91c7\u7528\u5e76\u884c\u8f93\u5165\uff0c\u51cf\u5c11\u8fdb\u4f4d\u4f20\u64ad\u4ea7\u751f\u7684\u5ef6\u65f6</p> <p></p>"},{"location":"courses/CO/3_arithmatic/#group-carry-lookahead-logic","title":"Group Carry Lookahead Logic","text":"<p>\u591a\u4e2a4\u5355\u5143CLA\u4e4b\u95f4\u518d\u7528\u4e00\u4e2aCLA\u6765\u8fdb\u4e00\u6b65\u63d0\u901f</p> <p> </p>"},{"location":"courses/CO/3_arithmatic/#carry-select-adder-csa","title":"Carry select adder (CSA)","text":"<p>\u5c06\u8fdb\u4f4d\u4e3a0\u548c1\u7684\u60c5\u51b5\u540c\u65f6\u8ba1\u7b97\uff0c\u5f53\u4e0a\u4e00\u4e2a\u5355\u5143\u7684\u8fdb\u4f4d\u4f20\u64ad\u6765\u65f6\u76f4\u63a5\u7528\u9009\u62e9\u5668\u8fdb\u884c\u9009\u62e9</p>"},{"location":"courses/CO/3_arithmatic/#multiplication","title":"Multiplication","text":"<p>\u4ee5 64bit * 64bit = 128bit \u4e3a\u4f8b  Product\u5de6\u8fb964bits\u7f6e\u96f6\uff0c\u53f3\u8fb964bits\u5b58\u653emultiplier\u3002\u6bcf\u6b21\u5faa\u73af\u82e5multiplier\u672b\u4f4d\u4e3a0\uff0c\u5219Product\u6574\u4f53\u53f3\u79fb\uff0c\u82e5\u4e3a1\u5219\u5c0664bit\u7684multiplicand\u52a0\u5230Product\u5de6\u534a\u8fb9\uff0c\u518d\u5c06Product\u6574\u4f53\u53f3\u79fb</p>"},{"location":"courses/CO/3_arithmatic/#signed-multiplication","title":"signed multiplication","text":"<ul> <li>\u57fa\u672c\u6cd5\uff1a\u8f6c\u4e3a\u7edd\u5bf9\u503c\u76f8\u4e58\uff0c\u518d\u8f6c\u56de\u6b63\u786e\u7b26\u53f7</li> <li>Booth's algorithm \u5bf9\u4e8eN\u4f4d\u4e58\u6570Y\uff0c\u5e03\u65af\u7b97\u6cd5\u68c0\u67e5\u51762\u7684\u8865\u7801\u5f62\u5f0f\u7684\u6700\u540e\u4e00\u4f4d\u548c\u4e00\u4e2a\u9690\u542b\u7684\u4f4e\u4f4d\uff0c\u547d\u540d\u4e3ay[-1]\uff0c\u521d\u59cb\u503c\u4e3a0\u3002\u5bf9\u4e8ey[i], i = 0, 1, ..., N - 1\uff0c\u8003\u5bdfy[i]\u548cy[i - 1]\u3002\u5f53\u8fd9\u4e24\u4f4d\u76f8\u540c\u65f6\uff0c\u5b58\u653e\u79ef\u7684\u7d2f\u52a0\u5668P\u7684\u503c\u4fdd\u6301\u4e0d\u53d8\u3002\u5f53y[i] = 0\u4e14y[i - 1] = 1\u65f6\uff0c\u88ab\u4e58\u6570\u4e58\u4ee52^i\u52a0\u5230P\u4e2d\u3002\u5f53y[i] = 1\u4e14y[i - 1] = 0\u65f6\uff0c\u4eceP\u4e2d\u51cf\u53bb\u88ab\u4e58\u6570\u4e58\u4ee52^i\u7684\u503c\u3002\u7b97\u6cd5\u7ed3\u675f\u540e\uff0cP\u4e2d\u7684\u6570\u5373\u4e3a\u4e58\u6cd5\u7ed3\u679c\u3002</li> </ul> booth algorithm"},{"location":"courses/CO/3_arithmatic/#faster-multiplication","title":"faster multiplication","text":""},{"location":"courses/CO/3_arithmatic/#division","title":"division","text":"<ul> <li>64bit_dividend / 64bit_divisor = 64bit_quotient \u00b7\u00b7\u00b7\u00b7\u00b7\u00b7 64bit_remainder</li> <li>\u6d41\u7a0b\uff1a 128bit\u7684remainder\u53f3\u534a\u8bbe\u4e3adividend\u3002</li> </ul> <p>\u6bcf\u6b21\u5faa\u73af\u5148\u5c06128bit\u7684remainder\u5de6\u79fb\uff0c\u7136\u540e\u51cf\u53bbdivisor\u3002</p> <p>\u82e5\u7ed3\u679c\u5c0f\u4e8e0\uff0c\u52a0\u56de\u53bb\uff0cquotient\uff08remainder\u672b\u4f4d\uff09\u8bbe\u4e3a0\uff1b\u5927\u4e8e0\uff0cquotient\u672b\u5c3e\u8bbe\u4e3a1\u3002\u7136\u540equotient\u5de6\u79fb1\u4f4d\u3002\u5faa\u73af64+1\u8f6e\u4e4b\u540e\uff0c\u5c06quotient\u5f80\u53f3\u79fb\u56de1\u4f4d</p> <p>\u7531\u4e8e\u9664\u6cd5\u662f\u4ece\u9ad8\u4f4d\u5f00\u59cb\u51cf\u53bbdivisor\uff0c\u6240\u4ee5divisor\u6bcf\u6b21\u53f3\u79fb&lt;=&gt;dividend\u6bcf\u6b21\u5de6\u79fb\u300264\u6b21\u5faa\u73af\u540eremainder\u5de6\u534a\u4e3aremainder\uff0c\u53f3\u534a\u4e3aquotient</p> Example <p> </p> <p>\u5bf9\u4e8esigned division\uff0c\u4f59\u6570\u4e0e\u88ab\u9664\u6570\u4fdd\u6301\u540c\u53f7</p>"},{"location":"courses/CO/3_arithmatic/#floating-point-numbers","title":"Floating point numbers","text":"<ul> <li>single precision 1bit sign + 8bits exponent + 23bits significand</li> <li>double precision 1bit sign + 11bits exponent + 52bits significand</li> </ul> <p>Note</p> <p> </p>"},{"location":"courses/CO/3_arithmatic/#guard-round-sticky-bit","title":"guard, round, sticky bit","text":"<p>The guard, round and sticky bits are used to determine if you must round, i.e. if you must remove some trailing bits from a value. The first two of the bits to be removed are the \u300eguard\u300f and \u300eround\u300f bit, respectively. The \u300esticky\u300fbit is simply 1 if any of the other bits is 1. The combination of these three bits governs if the value of the bits that remain must be incremented by 1 or not. -- stackoverflow</p>"},{"location":"courses/DB/","title":"Index","text":"<p>\u8be5\u7b14\u8bb0\u5927\u90e8\u5206\u6765\u81eaHobbitqia\u5b66\u957f\u7684\u6570\u636e\u5e93\u7cfb\u7edf\u7b14\u8bb0</p>"},{"location":"courses/DB/DB/","title":"Database System\u7b14\u8bb0","text":""},{"location":"courses/DB/DB/#introduction","title":"Introduction","text":""},{"location":"courses/DB/DB/#database-system_1","title":"Database system","text":""},{"location":"courses/DB/DB/#dbmsdatabase-management-system","title":"DBMS(Database Management System)","text":"<p>\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u7684\u76ee\u7684\u662f\u8ba9\u5b58\u50a8\u548c\u8bbf\u95ee\u6570\u636e\u53d8\u5f97\u65b9\u4fbf\u9ad8\u6548\uff0c\u5b83\u5305\u62ec</p> <ul> <li>\u5b9a\u4e49\u5b58\u50a8\u7684data structure</li> <li>\u63d0\u4f9b\u64cd\u4f5c\u6570\u636e\u7684\u673a\u5236</li> <li>\u4fdd\u8bc1database safety\uff0c\u5f53\u53d1\u751f\u672a\u6388\u6743\u8bbf\u95ee\u6216\u7cfb\u7edf\u6545\u969c\u65f6</li> <li>\u63d0\u4f9b\u5e76\u53d1\u8bbf\u95ee\u63a7\u5236\u7684\u673a\u5236</li> </ul>"},{"location":"courses/DB/DB/#purpose-of-database-system","title":"Purpose of database system","text":"<ul> <li>\u907f\u514d\u6587\u4ef6\u7cfb\u7edf\u7684\u5f0a\u7aef<ul> <li>Data redundancy\uff08\u6570\u636e\u5197\u4f59\uff09 and inconsistency\uff08\u4e0d\u4e00\u81f4\uff09\uff0c\u5982\u683c\u5f0f\u4e0d\u540c\u3001duplicate\u73b0\u8c61</li> <li>Data isolation\uff08\u6570\u636e\u5b64\u7acb\uff09</li> <li>\u5b58\u53d6\u6570\u636e\u56f0\u96be</li> </ul> </li> <li>Integrity problem\uff0c\u8981\u6c42\u4fbf\u4e8e\u8c03\u6574data constraints</li> <li>Atomicity problems\uff08\u539f\u5b50\u6027\u95ee\u9898\uff09\uff0c\u8981\u6c42\u5728db fail\u65f6\u4e0d\u4f1a\u51fa\u73b0partial updates</li> <li>Concurrent access anomalies\uff08\u5e76\u53d1\u8bbf\u95ee\u5f02\u5e38\uff09\uff0c\u8981\u6c42\u652f\u6301\u5e76\u53d1\u8bbf\u95ee</li> <li> <p>Security problems\uff08\u5b89\u5168\u6027\u95ee\u9898\uff09 database system\u5177\u6709\u7684\u7279\u5f81\uff1a</p> </li> <li> <p>data persistence(\u6570\u636e\u6301\u4e45\u6027)</p> </li> <li>convenience in accessing data(\u6570\u636e\u8bbf\u95ee\u4fbf\u5229\u6027)</li> <li>data integrity \uff08\u6570\u636e\u5b8c\u6574\u6027\uff09</li> <li>concurrency control for multiple users(\u591a\u7528\u6237\u5e76\u53d1\u63a7\u5236)</li> <li>failure recovery\uff08\u6545\u969c\u6062\u590d\uff09 </li> <li>security  control\uff08\u5b89\u5168\u63a7\u5236\uff09</li> </ul>"},{"location":"courses/DB/DB/#data-models","title":"Data models","text":"<p>\u5b9a\u4e49\uff1aA collection of tools for describing </p> <ul> <li>Data (\u6570\u636e)</li> <li>Data relationships(\u8054\u7cfb)</li> <li>Data semantics(\u8bed\u4e49)</li> <li> <p>Data constraints(\u7ea6\u675f) \u7c7b\u578b\uff1a</p> </li> <li> <p>Relational model(\u5173\u7cfb\u6a21\u578b)</p> </li> <li>Object-based data models <ul> <li>Object-oriented  (\u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b)</li> <li>Object-relational(\u5bf9\u8c61-\u5173\u7cfb\u6a21\u578b\u6a21\u578b)</li> </ul> </li> <li>Semistructured data model  (XML)(\u534a\u7ed3\u6784\u5316\u6570\u636e\u6a21\u578b)</li> <li>Other older models:<ul> <li>Network model  (\u7f51\u72b6\u6a21\u578b)</li> <li>Hierarchical model(\u5c42\u6b21\u6a21\u578b)</li> </ul> </li> <li>Entity-Relationship model(\u5b9e\u4f53-\u8054\u7cfb\u6a21\u578b) ( mainly for database design )</li> </ul>"},{"location":"courses/DB/DB/#relational-model","title":"Relational model","text":"<p>\u5373\u8868\u683c\u65b9\u5f0f\u5b58\u50a8\u6570\u636e\uff0c\u5b83\u7684row\u53eb\u505atuples\uff0ccolumn\u53eb\u505aattributes</p>"},{"location":"courses/DB/DB/#view-of-data","title":"View of data","text":"<p>db\u7684\u4e09\u4e2a\u62bd\u8c61\u5c42\u6b21 </p>"},{"location":"courses/DB/DB/#data-independence","title":"data independence","text":"<ul> <li>Physical Data Independence\uff08\u7269\u7406\u6570\u636e\u72ec\u7acb\u6027\uff09\uff1a\u4fee\u6539physical schema\u800c\u4e0d\u9700\u8981\u4fee\u6539logical schema</li> <li>Logical Data Independence\uff08\u903b\u8f91\u6570\u636e\u72ec\u7acb\u6027\uff09\uff1a\u4fee\u6539logical schema\u800c\u4e0d\u9700\u8981\u4fee\u6539view schema</li> </ul>"},{"location":"courses/DB/DB/#database-language","title":"database language","text":"<ol> <li>Data Definition Language (DDL)  + \u5b9a\u4e49\u4e86db\u7684schema\uff0c\u5982</li> </ol> <pre><code>create table instructor (\n    ID char(5),\n    name varchar(5),\n    salary numeric(8,2)\n)\n</code></pre> <ul> <li>DDL compiler generates a set of table templates stored in a data dictionary\uff08\u6570\u636e\u5b57\u5178\uff09</li> <li>Data dictionary contains metadata (\u5143\u6570\u636e\uff0c i.e., data about data),\u6bd4\u5982<ul> <li>Database schema </li> <li>Integrity constraints\uff08\u5b8c\u6574\u6027\u7ea6\u675f\uff09<ul> <li>Primary key (ID uniquely identifies instructors)\uff08\u4e3b\u5065\uff09</li> <li>Referential integrity (references constraint in SQL)\uff08\u53c2\u7167\u5b8c\u6574\u6027\uff09 e.g. dept_name value in any instructor tuple must appear in department relation</li> </ul> </li> <li>Authorization\uff08\u6743\u9650\uff09 2. Data Manipulation Language (DML) </li> </ul> </li> <li>\u7528\u4e8e\u8bbf\u95ee\u548c\u64cd\u4f5cdata\uff0cknown as query language</li> <li>two classes: <ul> <li>Procedural\uff08\u8fc7\u7a0b\u5f0f\uff09 \u2013 user specifies what data is required and how to get those data </li> <li>Declarative (nonprocedural\uff0c\u9648\u8ff0\u5f0f\uff0c\u975e\u8fc7\u7a0b\u5f0f) \u2013 user specifies what data is required without specifying how to get those data</li> </ul> </li> <li>\u7528\u5f97\u6700\u591a\u7684DML\u662fSQL\u8bed\u8a00 3. SQL Query Language \u5e7f\u6cdb\u7528\u4e8enon-procedural language\uff0c\u5982</li> </ul> <pre><code>select name\nfrom instructor\nwhere instructor.ID = \u201822222\u2019\n</code></pre> <ol> <li>Application Program Interface \uff08API\uff09 + \u50cfSQL\u8fd9\u6837\u7684non-procedural language\u4e0d\u662funiversal Turing machine\u3002\u5b83\u4e0d\u652f\u6301\u8f93\u5165\u8f93\u51fa\u3001\u7f51\u7edc\u901a\u4fe1 + \u8fd9\u4e9b\u64cd\u4f5c\u5fc5\u987b\u7528host language\u6765\u5199\uff0c\u5982python, java, C + \u5e94\u7528\u7a0b\u5e8f\u901a\u5e38\u6709\u4e24\u79cd\u65b9\u5f0f\u8bbf\u95ee\u6570\u636e\u5e93<ol> <li>API\uff08Application program interface\uff09 (e.g., ODBC/JDBC) which allow SQL queries to be sent to a database</li> <li>Language extensions to allow embedded SQL</li> </ol> </li> </ol>"},{"location":"courses/DB/DB/#database-design","title":"Database Design(\u6570\u636e\u5e93\u8bbe\u8ba1)","text":"<ul> <li>Entity Relationship Model \uff08\u5b9e\u4f53-\u8054\u7cfb\u6a21\u578b\uff09  1. Models an enterprise as a collection of data entities and relationships 2. Represented diagrammatically by an entity-relationship diagram. </li> <li>Normalization Theory\uff08\u89c4\u8303\u5316\u7406\u8bba\uff09  \u6700\u4f18\u65b9\u5f0f\u8bbe\u8ba1db</li> </ul>"},{"location":"courses/DB/DB/#database-engine","title":"Database Engine(\u6570\u636e\u5e93\u5f15\u64ce)","text":"<p>db system\u88ab\u5212\u5206\u6210\u51e0\u4e2a\u6a21\u5757\uff0c\u6bcf\u4e2a\u6a21\u5757\u8d1f\u8d23\u4e00\u5b9a\u529f\u80fd</p> <ul> <li>The storage manager</li> <li>The  query processor  </li> <li>The transaction management component. </li> </ul>"},{"location":"courses/DB/DB/#database-users","title":"database users","text":"<ul> <li>Application programmers \u2013 interact with system through DML calls</li> <li>Na\u00efve users \u2013 invoke one of the permanent application programs that have been written previously Examples, people accessing database over the web, bank tellers, clerical staff</li> <li>Database Administrator - Coordinates all the activities of the database system; the database administrator has a good understanding of the enterprise\u2019s information resources and needs.</li> </ul>"},{"location":"courses/DB/DB/#history-of-database-systems","title":"History of Database Systems","text":"<ul> <li>1973 Turing Award: Charles W. Bachman, father of databases</li> <li>1981 Turing Award: Edgar F. Codd</li> <li>1998 Turing Award: Jim Gray</li> <li>2014 Turing Award: Michael Stonebraker</li> </ul>"},{"location":"courses/DB/db10/","title":"Indexing","text":""},{"location":"courses/DB/db10/#basic-concepts","title":"Basic Concepts","text":"<p>Indexing mechanisms used to speed up access to desired data. \u7d22\u5f15\u7528\u6765\u52a0\u901f\u67e5\u627e\u3002  </p> <p>Search Key - attribute to set of attributes used to look up records in a file. An index file consists of records (called index entries) of the form. \u7d22\u5f15\u6587\u4ef6\u901a\u5e38\u662f\u6709\u987a\u5e8f\u7684</p>"},{"location":"courses/DB/db10/#index-evaluation-metrics","title":"Index Evaluation Metrics","text":"<ul> <li>Access types supported efficiently<ul> <li>Point query: records with a specified value in the attribute. \u70b9\u67e5\u8be2</li> <li>Range query: records with an attribute value falling in a specified range of values. \u8303\u56f4\u67e5\u8be2</li> </ul> </li> <li>Access time</li> <li>Insertion time</li> <li>Deletion time</li> <li>Space overhead</li> </ul>"},{"location":"courses/DB/db10/#ordered-indices","title":"Ordered Indices","text":"<ul> <li>Primary index\uff08\u4e3b\u7d22\u5f15\uff09: in a sequentially ordered file, the index whose search key specifies the sequential order of the file.  <ul> <li>Also called clustering index\uff08\u805a\u96c6\u7d22\u5f15\uff09</li> <li>The search key of a primary index is usually but not necessarily the primary key.</li> </ul> </li> <li>Secondary index\uff08\u8f85\u52a9\u7d22\u5f15\uff09: an index whose search key specifies an order different from the sequential order of the file.  Also called non-clustering index.</li> </ul> Example <p>\u4e3b\u7d22\u5f15\u548c\u6570\u636e\u5185\u7684\u987a\u5e8f\u662f\u4e00\u6837\u7684\u3002\u70b9\u67e5\u548c\u8303\u56f4\u67e5\u90fd\u662f\u6bd4\u8f83\u9ad8\u6548\u7684\u3002  </p> <p>\u5982\u679c key \u4e0d\u662f\u4e00\u4e2a\u4e3b\u952e\uff0c\u90a3\u53ef\u80fd\u4f1a\u5bf9\u5e94\u591a\u4e2a\u8bb0\u5f55\u3002</p> <p>Primary index \u662f\u5f88\u5b9d\u8d35\u7684\uff0c\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u5176\u4ed6\u90fd\u662f\u8f85\u52a9\u7d22\u5f15\u3002    </p> <ul> <li>Dense index(\u7a20\u5bc6\u7d22\u5f15) \u2014 Index record appears for every search-key value in the file.  \u6240\u6709 search-key \u90fd\u8981\u51fa\u73b0\u5728\u7d22\u5f15\u6587\u4ef6\u91cc\u3002  </li> <li>Sparse Index\uff08\u7a00\u758f\u7d22\u5f15\uff09:  contains index records for only some search-key values.</li> </ul> Example <p> </p> <p>Good tradeoff: sparse index with an index entry for every block in file, corresponding to least search-key value in the block.</p>"},{"location":"courses/DB/db10/#multilevel-index","title":"Multilevel Index","text":"<p>If primary index does not fit in memory, access becomes expensive. \u53ef\u4ee5\u5bf9\u7d22\u5f15\u6587\u4ef6\u672c\u8eab\u518d\u5efa\u7acb\u4e00\u6b21\u7d22\u5f15\u3002</p>"},{"location":"courses/DB/db10/#b-tree-index","title":"B+-Tree Index","text":"<ul> <li>All paths from root to leaf are of the same length</li> <li>Inner node(not a root or a leaf): between \\(\\lceil n/2\\rceil\\) and \\(n\\) children.</li> <li>Leaf node: between \\(\\lceil (n\u20131)/2\\rceil\\) and \\(n\u20131\\) values</li> <li>Special cases: <ul> <li>If the root is not a leaf: at least 2 children.</li> <li>If the root is a leaf : between 0 and (n\u20131)values.</li> </ul> </li> </ul> <p>\u4e00\u822c\u4e00\u4e2a\u8282\u70b9\u5c31\u662f\u4e00\u4e2a\u5757\u7684\u5927\u5c0f, 4K. B+ \u6811\u7684\u53c9\u662f\u975e\u5e38\u5927\u7684\u3002</p>"},{"location":"courses/DB/db10/#observations-about-b-trees","title":"Observations about B+-trees","text":"<p>Since the inter-node connections are done by pointers, \u201clogically\u201d close blocks need not be \u201cphysically\u201d close. \u5982\u679c\u6709\u5f88\u591a\u6587\u4ef6\u4e00\u6b21\u6027\u5efa\u7acb B+ \u6811\uff0c\u6211\u4eec\u53ef\u4ee5\u4ece\u53f6\u5b50\u8282\u70b9\u5f00\u59cb\u5efa\u7acb\u3002</p> <p>\u5982\u679c\u6709 K \u4e2a\u7d22\u5f15\u9879\uff0c\u5219\u6811\u9ad8\u5ea6\u4e0d\u4f1a\u8d85\u8fc7 \\(\\lceil \\log_{\\lceil n/2 \\rceil}(K/2)\\rceil + 1\\). \u9ad8\u5ea6\u6700\u5c0f\u4e3a \\(\\log_n(K)\\)</p> <p>Examples of Insert on B+-Tree</p> <p> </p> <p>\u6ce8\u610f\u5185\u70b9\u7684 split \u548c\u53f6\u5b50\u7684\u4e0d\u4e00\u6837\u3002\u8981\u628a\u4e2d\u95f4\u7684\u8282\u70b9 move \u4e0a\u53bb\u3002</p> <p>Examples of Delete on B+-Tree</p> <p> </p> <p>\u4e2d\u95f4\u70b9\u5982\u679c\u4e0d\u591f\uff0c\u4ece\u53e6\u5916\u4e00\u8fb9\u501f\u4e00\u4e2a\u8fc7\u6765\u3002\u4f46\u662f\u4e0d\u80fd\u76f4\u63a5\u501f\uff0c\u9700\u8981\u628a\u5b83\u9876\u4e0a\u53bb\u3002  </p> <p>\u6ce8\u610f\u8003\u8651\u548c\u5144\u5f1f\u5408\u5e76\u3002</p>"},{"location":"courses/DB/db10/#b-tree-height-and-size-estimation","title":"B+- tree : height and size estimation","text":"<p>\u5168\u6ee1\u7684\u65f6\u5019\u8282\u70b9\u6700\u5c11 \u6ce8\u610f\u8fd9\u91cc\u7684\u5411\u4e0a/\u5411\u4e0b\u53d6\u6574\u95ee\u9898 \u6d45\u5c42\u8282\u70b9\u4e2a\u6570\u5c11\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u7b2c\u4e00\u5c42\u548c\u7b2c\u4e8c\u5c42\u7684\u8282\u70b9\u90fd\u653e\u5230\u5185\u5b58\u4e2d pin \u4f4f\u3002</p>"},{"location":"courses/DB/db10/#b-tree-file-organization","title":"B+-Tree File Organization","text":"<p>\u6587\u4ef6\u7ec4\u7ec7 B+-Tree File Organization:</p> <ul> <li>Leaf nodes in a B+-tree file organization store records, instead of pointers \u53f6\u5b50\u8282\u70b9\u4e0d\u518d\u653e\u7d22\u5f15\u9879\uff0c\u653e\u8bb0\u5f55\u672c\u8eab\u3002 </li> <li>Helps keep data records clustered even when there are insertions/deletions/updates  </li> </ul> <p>\u6211\u4eec\u53ef\u4ee5\u6539\u53d8\u534a\u6ee1\u7684\u8981\u6c42\u4ee5\u63d0\u9ad8\u7a7a\u95f4\u5229\u7528\u7387\u3002</p>"},{"location":"courses/DB/db10/#other-issues-in-indexing","title":"Other Issues in Indexing","text":"<ul> <li>Record relocation and secondary indices If a record moves, all secondary indices that store record pointers have to be updated  Node splits in B+-tree file organizations become very expensive Solution: use primary-index search key instead of record pointer in secondary index</li> <li>Variable length strings as keys Variable fanout</li> <li>Prefix compression \u7528\u53ef\u533a\u5206\u8def\u5f84\u7684\u524d\u7f00\u5b50\u4e32\u4ee3\u66ff\u6574\u4e2a\u5b57\u7b26\u4e32\u3002 Key values at internal nodes can be prefixes of full key Keep enough characters to distinguish entries in the subtrees separated by the key value</li> </ul>"},{"location":"courses/DB/db10/#multiple-key-access","title":"Multiple-Key Access","text":"<p>Composite search keys are search keys containing more than one attribute e.g. <code>(dept_name, salary)</code> </p> <p>Lexicographic ordering: \\((a_1, a_2) &lt; (b_1, b_2)\\) if either \\(a_1 &lt; b_1\\), or \\(a_1=b_1\\) and \\(a_2 &lt; b_2\\).  </p> <p>\u5355\u4e2a key, \u4e0d\u540c key \u4e4b\u95f4\u7ec4\u5408\u90fd\u53ef\u4ee5\u5efa\u7acb B+ \u6811\u3002\u8fd9\u6837\u4f1a\u6709\u5f88\u591a\u7ec4\u5408\uff0c\u53ef\u4ee5\u5728\u9891\u7e41\u51fa\u73b0\u7684\u67e5\u8be2\u5c5e\u6027\u4e0a\u5efa\u7acb B+ \u6811\u3002</p>"},{"location":"courses/DB/db10/#non-unique-search-keys","title":"Non-unique Search Keys","text":"<p>\u6211\u4eec\u53ef\u4ee5\u5728 B+ \u6811\u53f6\u5b50\u8282\u70b9\u4e0d\u76f4\u63a5\u6307\u5411\u78c1\u76d8\u91cc\u7684\u6570\u636e\uff0c\u800c\u662f\u6307\u5411\u4e00\u4e2a\u5757\u3002 \u4e5f\u53ef\u4ee5\u5728\u7d22\u5f15\u4e0a\u52a0\u4e0a\u53bb\u4e00\u4e2a\u7d22\u5f15\uff0c\u4f7f\u5b83\u5bf9\u5e94\u7684\u8bb0\u5f55\u552f\u4e00\u3002 \u53ef\u4ee5\u901a\u8fc7\u8303\u56f4\u67e5\u627e</p>"},{"location":"courses/DB/db10/#bulk-loading-and-bottom-up-build","title":"Bulk Loading and Bottom-Up Build","text":"<p>Inserting entries one-at-a-time into a B+-tree requires \\(\\geq 1\\) IO per entry   </p> <p>\u5982\u679c\u6211\u4eec\u4e00\u6b21\u6027\u63d2\u5165\u5f88\u591a\u7d22\u5f15\u9879</p> <ul> <li>Efficient alternative 1: Insert in sorted order \u5c40\u90e8\u6027\u8f83\u597d\uff0c\u51cf\u5c11 I/O. </li> <li>Efficient alternative 2: Bottom-up B+-tree construction<ul> <li>First sort index entries </li> <li>Then create B+-tree layer-by-layer, starting with leaf level</li> <li>The built B+-tree is written to disk using sequential I/O operations</li> </ul> </li> </ul> <p>Example</p> <p> </p> <p>\u5982\u679c\u8981\u6392\u5e8f\u7684\u5185\u5bb9\u8f83\u5927\uff0c\u65e0\u6cd5\u653e\u4e0b\u5185\u5b58\uff0c\u53ef\u4ee5\u4f7f\u7528\u5916\u90e8\u6392\u5e8f\u3002 fanout \u53ef\u4ee5\u8ba1\u7b97\u51fa\u6765\u3002 \u53ef\u4ee5\u7528 level-order \u5199\u5230\u78c1\u76d8\u91cc\uff0c\u4fbf\u4e8e\u987a\u5e8f\u8bbf\u95ee\u6240\u6709\u7d22\u5f15\uff0c\u6b64\u65f6\u5757\u662f\u8fde\u7eed\u7684\u3002\uff08\u4fbf\u4e8e\u987a\u5e8f\u8bbf\u95ee\u6240\u6709\u6570\u636e\u9879\uff09  \u8fd9\u91cc\u7684\u4ee3\u4ef7\u5c31\u662f\u5efa\u597d\u540e\uff0c\u4e00\u6b21 seek\uff08\u5b9a\u4f4d\uff09 \u540e\u5168\u90e8\u5199\u51fa\u53bb (9 blocks)  </p> <p>Bulk insert index entries   </p> <p>Example</p> <p> </p> <p>\u628a\u521a\u521a\u90a3\u68f5 B+ \u6811\u53f6\u5b50\u8282\u70b9\uff08\u5373\u904d\u5386\u6240\u6709\u6570\u636e\uff09\u9700\u8981 1seek+6blocks. \u968f\u540e\u548c\u4e0a\u9762\u7684\u6570\u636e\u5408\u5e76\u540e\uff0c\u5199\u56de\u78c1\u76d8\u65f6\u9700\u8981 1seek+13blocks. </p> <p>Merge two existing two B+-trees , to create a new B+-tree using the Bottom-UP Build algorithm, as in LSM-tree Index \u5047\u8bbe\u6709\u4e24\u68f5\u8fd9\u6837\u751f\u6210\u7684 B+ \u6811\uff0c\u5c06\u4ed6\u4eec\u5408\u5e76\u5728\u4e00\u8d77\u3002\u9996\u5148\u628a\u53f6\u5b50\u8282\u70b9\u62ff\u51fa\u6765\u6392\u5e8f\u3002  </p>"},{"location":"courses/DB/db10/#indexing-in-main-memory","title":"Indexing in Main Memory","text":"<p>cache \u6309 cache line \u4f20\u8f93, \u53ea\u6709 64B. </p> <ul> <li>Random access in memory  <ul> <li>Much cheaper than on disk/flash, but still expensive compared to cache read</li> <li>Binary search for a key value within a large B+-tree node results in many cache misses \u4e8c\u5206\u67e5\u627e\u53ef\u80fd\u5e26\u6765\u5f88\u591a cache miss.  </li> <li>Data structures that make best use of cache preferable \u2013 cache conscious </li> </ul> </li> </ul> <p>B+- trees with small nodes that fit in cache line are preferable to reduce cache misses search key \u548c pointer \u53ef\u4ee5\u5206\u5f00\u653e\u3002</p> <p>Key idea:  </p> <ul> <li>use large node size to optimize disk access, </li> <li>but structure data within a node using a tree with small node size, instead of using an array, to optimize cache access.</li> </ul>"},{"location":"courses/DB/db10/#indexing-on-flash","title":"Indexing on Flash","text":"<p>Flash \u91cc\u4e0d\u662f\u5373\u65f6\u4fee\u6539\uff0c\u800c\u662f\u5148\u64e6\u6389\u518d\u5199\u3002\u540c\u65f6\u64e6\u7684\u6b21\u6570\u662f\u6709\u9650\u5236\u7684\u3002\u56e0\u6b64\u6700\u597d\u7684\u65b9\u6cd5\u662f\u4ece\u5e95\u6784\u5efa\uff0c\u7136\u540e\u987a\u5e8f\u5199\u5165\u3002</p> <ul> <li>Random I/O cost much lower on flash 20 to 100 microseconds for read/write</li> <li>Writes are not in-place, and (eventually) require a more expensive erase Optimum page size therefore much smaller</li> <li>Bulk-loading still useful since it minimizes page erases</li> <li>Write-optimized tree structures (i.e., LSM-tree) have been adapted to minimize page writes for flash-optimized search trees \u5199\u4f18\u5316\u7d22\u5f15\u7ed3\u6784 </li> </ul>"},{"location":"courses/DB/db10/#log-structured-merge-lsm-tree","title":"Log Structured Merge (LSM) Tree","text":"<ul> <li>Records inserted first into in-memory tree (\\(L_0\\) tree)  </li> <li>When in-memory tree is full, records moved to disk (\\(L_1\\) tree) B+-tree constructed using bottom-up build by merging existing \\(L_1\\) tree with records from \\(L_0\\) tree \u5185\u5b58\u91cc\u7684 B+ \u6811\u5982\u679c\u6ee1\u4e86\uff0c\u5c31\u9a6c\u4e0a\u5199\u5230\u78c1\u76d8\u91cc\u53bb\uff08\u53ef\u4ee5\u8fde\u7eed\u5199\uff09  </li> <li>When \\(L_1\\) tree exceeds some threshold, merge into \\(L_2\\) tree And so on for more levels Size threshold for \\(L_{i+1}\\) tree is \\(k\\) times size threshold for \\(L_i\\) tree </li> </ul> <p>\u8fd9\u6837\u6211\u4eec\u628a\u968f\u673a\u5199\u53d8\u4e3a\u4e86\u987a\u5e8f\u5199\u3002\u4f46\u6b64\u65f6\u67e5\u627e\u4e00\u4e2a\u7d22\u5f15\uff0c\u5c31\u8981\u904d\u5386\u6240\u6709 B+ \u6811\u3002</p> <ul> <li>Benefits of LSM approach<ul> <li>Inserts are done using only sequential I/O operations</li> <li>Leaves are full, avoiding space wastage</li> <li>Reduced number of I/O operations per record inserted as compared to normal B+-tree (up to some size)</li> </ul> </li> <li>Drawback of LSM approach<ul> <li>Queries have to search multiple trees</li> <li>Entire content of each level copied multiple times</li> </ul> </li> </ul> <p>Stepped Merge Index \u539f\u5148\u7684\u7ed3\u6784\u4e2d\uff0cMerge \u64cd\u4f5c\u592a\u591a\uff0c\u6211\u4eec\u53ef\u4ee5\u4e00\u6b21\u6027\u5408\u5e76\u3002 \u78c1\u76d8\u4e0a\u6bcf\u5c42\u6709 k \u68f5\u6811\uff0c\u5f53 k \u4e2a\u7d22\u5f15\u5904\u4e8e\u540c\u4e00\u5c42\u65f6\uff0c\u5408\u5e76\u5b83\u4eec\u5e76\u5f97\u5230\u4e00\u68f5\u5c42\u6570 \\(+1\\) \u7684\u6811\uff0c\u5199\u56de\u3002   \\(L_1\\) \u6709\u5927\u5c0f\u9650\u5236\uff0c\u8fbe\u5230\u540e\u4f1a\u751f\u6210\u53e6\u4e00\u4e2a B+ \u6811\uff0c\u4f9d\u6b21\u4e3a k \u500d\u3002  \u5e03\u9686\u8fc7\u6ee4\u5668</p>"},{"location":"courses/DB/db11/","title":"\u67e5\u8be2\u7b97\u5b50\uff1a","text":""},{"location":"courses/DB/db11/#selection","title":"Selection:","text":""},{"location":"courses/DB/db11/#_2","title":"\u7b97\u6cd5\uff1a","text":"<ol> <li>file scan</li> <li>index scan</li> </ol>"},{"location":"courses/DB/db11/#join","title":"Join","text":""},{"location":"courses/DB/minisql/","title":"MINISQL\u5b9e\u9a8c\u62a5\u544a","text":"<p>\u8fdb\u5ea6</p> <ul> <li> #1 Disk and Buffer pool manager</li> <li> #2 Record manager<ul> <li> serialization and deserialization</li> <li> implement <code>TableHeap</code> and <code>TableIterator</code></li> </ul> </li> <li> #3 Index manager<ul> <li> Internal page</li> <li> leaf page</li> <li> B plus tree structure</li> <li> index iterator</li> </ul> </li> <li> #4 Catalog manager</li> <li> #5 Planner and Executor</li> </ul>"},{"location":"courses/DB/minisql/#2-record-manager","title":"#2 Record manager","text":""},{"location":"courses/DB/minisql/#tableheap","title":"<code>TableHeap</code>","text":"<p><code>TableHeap</code>\u662f\u4ee5\u65e0\u5e8f\u65b9\u5f0f\u5b58\u50a8\u4e00\u5f20\u8868\u4e2d\u7684\u8bb0\u5f55\u7684\u3002\u5b83\u7684\u6838\u5fc3\u5c31\u5728\u4e8e\u5bf9\u5806\u8868\u4e2d\u7684\u6bcf\u4e2a\u6570\u636e\u9875\u8fdb\u884c\u64cd\u4f5c\uff0c\u8fdb\u884c\u63d2\u5165\u3001\u5220\u9664\u3001\u66f4\u65b0\u8bb0\u5f55\u3002\u56e0\u6b64\u6709\u5fc5\u8981\u8bb0\u5f55\u4e00\u4e0b<code>TablePage</code>\u7684\u5404\u4e2a\u51fd\u6570\u529f\u80fd</p> <ul> <li> <p><code>bool TablePage::UpdateTuple(...)</code></p> <p>\u66f4\u65b0\u4e00\u6761\u8bb0\u5f55\u3002<code>old_row</code>\u4e2d\u5b58\u6709\u8be5\u8bb0\u5f55\u7684<code>RowId</code>\uff0c\u7531\u6b64\u53ef\u4ee5\u5b9a\u4f4d\u5230\u8be5\u8bb0\u5f55\u3002</p> <p>\u9996\u5148\u68c0\u67e5\u8fd9\u6761\u8bb0\u5f55\u662f\u5426\u88ab\u5220\u9664\uff1b\u7136\u540e\u68c0\u6d4b\u5269\u4f59\u7a7a\u95f2\u7a7a\u95f4+\u8be5\u8bb0\u5f55\u5927\u5c0f\u662f\u5426\u80fd\u5927\u4e8e\u65b0\u8bb0\u5f55\uff1b</p> <p>\u7136\u540e\u7528<code>memmove</code>\u51fd\u6570\uff0c\u5c06\u4ece<code>free_space_pointer</code>\u5230 \u8be5\u8bb0\u5f55\u4e4b\u524d \u7684\u6240\u6709\u6570\u636e\u8fdb\u884c\u79fb\u52a8\uff0c\u4e0d\u59a8\u7406\u89e3\u4e3a<code>tuple_size &lt; serialized_size</code>\uff0c\u90a3\u4e48\u5c31\u9700\u8981\u4e3a\u65b0\u8bb0\u5f55\u817e\u51fa\u7a7a\u95f4\uff0c\u6570\u636e\u5411\u524d\u79fb\u52a8<code>serialized_size - tuple_size</code>\u3002</p> <p>\u7136\u540e\u66f4\u65b0<code>free_space_pointer</code>\uff0c\u5c06\u65b0\u8bb0\u5f55\u5e8f\u5217\u5316\u5230\u817e\u51fa\u7684\u7a7a\u95f4\u4e2d\uff0c\u66f4\u65b0\u8bb0\u5f55\u7684\u5927\u5c0f\uff1b</p> <p>\u6700\u540e\u628a\u4fee\u6539\u4e4b\u524d\u6240\u6709offset\u5c0f\u4e8e\u7b49\u4e8e\u8be5\u8bb0\u5f55\u7684\u8bb0\u5f55\u7684offset\u90fd\u66f4\u65b0\uff08\u51cf\u53bb<code>serialized_size - tuple_size</code>\uff09</p> <p>\u4f46\u662f \uff0c\u8be5\u51fd\u6570\u9700\u8981\u4fee\u6539\uff0c\u56e0\u4e3a\u82e5\u8fd4\u56defalse\uff0c\u5e76\u4e0d\u77e5\u9053\u5177\u4f53\u7684\u66f4\u65b0\u5931\u8d25\u539f\u56e0\uff0c\u6211\u7684\u505a\u6cd5\u662f\u6539\u4e3aint\u8fd4\u56de\u503c</p> </li> </ul> <p>Warning</p> <p><code>TableHeap</code>\u4e2d\u7684\u6240\u6709\u51fd\u6570\u90fd\u8981\u7528\u5230\u67d0\u4e2apage\uff0c\u6ce8\u610f\u51fd\u6570\u7ed3\u675f\u65f6unpin\u8be5page</p>"},{"location":"courses/DB/minisql/#3-index-manager","title":"#3 Index manager","text":""},{"location":"courses/DB/minisql/#internal-page","title":"Internal Page","text":"<p>\u5bf9\u4e8e\u5404\u51fd\u6570\u4f5c\u7528\u7684\u89e3\u91ca</p>"},{"location":"courses/DB/minisql/#helper-function","title":"Helper function","text":"<ul> <li> <p><code>InternalPage::Init</code></p> <p>\u8bbe\u7f6e\u81ea\u5df1\u7684page_id, parent_page_id</p> </li> <li> <p><code>KeyAt(int index)</code>/<code>SetKeyAt(int index)</code></p> </li> <li> <p><code>ValueAt(int index)</code>/<code>SetValueAt(int index)</code></p> </li> <li> <p><code>int ValueIndex(const page_id_t &amp;value)</code></p> <p>\u6839\u636epageId\uff0c\u4e5f\u5c31\u662fvalue\u6765\u627e\u5bf9\u5e94\u7684index\uff1b\u627e\u4e0d\u5230\u8fd4\u56de-1</p> </li> <li> <p><code>void *PairPtrAt(int index)</code></p> <p>\u6839\u636eindex\uff0c\u8fd4\u56de\u5bf9\u5e94\u7684pair\uff08key\uff09\u7684\u5730\u5740</p> </li> <li> <p><code>void PairCopy(void *dest, void *src, int pair_num)</code></p> <p>\u590d\u5236<code>pair_num</code>\u4e2apair\u5230dest</p> </li> </ul>"},{"location":"courses/DB/minisql/#loopup","title":"LoopUp","text":"<ul> <li> <p><code>page_id_t Lookup(const GenericKey *key, const KeyManager &amp;KM)</code></p> <p>\u6839\u636e<code>key</code>\u4e8c\u5206\u67e5\u627e\u5305\u542bkey\u7684\u5b69\u5b50\u9875\uff0c\u5e76\u8fd4\u56de\u5bf9\u5e94\u7684\u9875\u7801\uff08value\uff09</p> </li> </ul>"},{"location":"courses/DB/minisql/#insertion","title":"Insertion","text":"<ul> <li> <p><code>void PopulateNewRoot(const page_id_t &amp;old_value, GenericKey *new_key, const page_id_t &amp;new_value)</code></p> <p>\u81ea\u8eab\u662f\u521a\u521a\u6784\u9020\u7684new root\uff0c\u9700\u8981\u6dfb\u52a0\u4e00\u4e2a<code>new_key</code>\uff0c\u5e76\u628a\u524d\u4e24\u4e2avalue(child page id)\u8bbe\u4e3a<code>old_value</code>\u548c<code>new_value</code></p> </li> <li> <p><code>int InsertNodeAfter(const page_id_t &amp;old_value, GenericKey *new_key, const page_id_t &amp;new_value)</code></p> <p>\u5728<code>old_value</code>\u5bf9\u5e94\u7684pair\u540e\u9762\u63d2\u5165\u4e00\u4e2a\u65b0pair\uff0c\u66f4\u65b0size</p> </li> </ul>"},{"location":"courses/DB/minisql/#split","title":"Split","text":"<ul> <li> <p><code>void MoveHalfTo(InternalPage *recipient, BufferPoolManager *buffer_pool_manager)</code></p> <p>\u5c06\u4e00\u534a\u7684pair\u79fb\u5230recipient\uff0c\u7136\u540e\u66f4\u6539\u8fd9\u4e9bpair\u7684\u7236\u4eb2\u9875\u7801</p> </li> </ul> <p>\u6b64\u5904\u7684recipient\u5e94\u8be5\u662f\u65b0\u6784\u9020\u7684\u7a7a\u9875\u3002\u4f46\u662f\u7b2c\u4e00\u4e2akey\u5e94\u8be5\u600e\u4e48\u8bbe\u7f6e\uff1f</p> <ul> <li><code>void CopyNFrom(void *src, int size, BufferPoolManager *buffer_pool_manager)</code>     \u5c06n\u4e2apair\u6dfb\u52a0\u5230\u81ea\u8eab\u7684\u672b\u5c3e\uff0c\u5e76\u5c06\u4ed6\u4eec\u7684\u7236\u4eb2\u8bbe\u7f6e\u4e3a\u81ea\u8eab</li> </ul>"},{"location":"courses/DB/minisql/#remove","title":"Remove","text":"<ul> <li> <p><code>void Remove(int index)</code></p> <p>\u5220\u9664index\u5904\u7684pair</p> </li> <li> <p><code>page_id_t RemoveAndReturnOnlyChild()</code></p> <p>\u5220\u9664\u552f\u4e00\u7684\u5b69\u5b50</p> </li> </ul>"},{"location":"courses/DB/minisql/#merge","title":"Merge","text":"<ul> <li> <p><code>void MoveAllTo(InternalPage *recipient, GenericKey *middle_key, BufferPoolManager *buffer_pool_manager)</code></p> <p>\u5c06\u81ea\u8eab\u6240\u6709\u7684pair\u79fb\u5230recipient\uff0c\u540c\u65f6\u66f4\u65b0\u5b83\u4eec\u7684\u7236\u4eb2\uff1b\u5728\u81ea\u5df1\u7684parent page\u4e2d\u5220\u9664\u81ea\u5df1\u5bf9\u5e94\u7684pair\u3002\u8c03\u6574size</p> </li> </ul> <p>Note</p> <p>\u8f6c\u79fb\u65f6\u522b\u5fd8\u4e86\u5c06\u81ea\u5df1parent\u4e2d\u5bf9\u5e94\u7684key\u4e5f\u8f6c\u79fb\u5230recipient\u4e2d\uff0c\u4f5c\u4e3a\u7b2c\u4e00\u4e2aappend\u7684key\uff0c\u4e5f\u5373<code>middle_key</code>\u5e94\u83b7\u53d6\u7684\u503c\u3002\u8fd9\u6837key\u548cvalue\u7684\u6570\u91cf\u624d\u914d\u5bf9\u3002</p>"},{"location":"courses/DB/minisql/#redistribute","title":"Redistribute","text":"<ul> <li> <p><code>void MoveFirstToEndOf(InternalPage *recipient, GenericKey *middle_key, BufferPoolManager *buffer_pool_manager)</code></p> <p>\u5c06\u81ea\u8eab\u7684\u7b2c\u4e00\u4e2apair\u79fb\u5230recipient\u672b\u5c3e\uff0c\u540c\u4e0a\uff0c\u4e0d\u80fd\u5fd8\u8bb0<code>middle_key</code>\u7684\u8f6c\u79fb\u3002\u540c\u65f6\uff0c\u66f4\u65b0pair\u7684\u7236\u4eb2\u3002\u540c\u65f6\uff0c\u66f4\u65b0\u81ea\u5df1\u7236\u4eb2\u5bf9\u5e94\u7684key\uff0c\u56e0\u4e3a\u81ea\u5df1\u6700\u5c0f\u7684key\u53d8\u5316\u4e86\u3002</p> </li> <li> <p><code>void CopyLastFrom(GenericKey *key, const page_id_t value, BufferPoolManager *buffer_pool_manager)</code></p> <p>\u5c06pair\u52a0\u5230\u672b\u5c3e\uff0c\u5c06\u5b83\u7684\u7236\u4eb2\u66f4\u65b0\u4e3a\u81ea\u5df1</p> </li> <li> <p><code>void MoveLastToFrontOf(InternalPage *recipient, GenericKey *middle_key, BufferPoolManager *buffer_pool_manager)</code></p> <p>recipient\u6240\u6709pair\u53f3\u79fb\uff0c\u817e\u51fa\u4f4d\u7f6e\u7528\u6765\u5b58\u653erecipient\u7684parent\u5bf9\u5e94\u7684key\uff08\u5373recipient\u6240\u5728\u5b50\u6811\u4e2d\u7684\u6700\u5c0fkey\uff09\uff0c\u4ee5\u53ca\u539f\u5148dummy head\u7684value\u3002\u7136\u540e\u5c06\u81ea\u8eab\u7684\u6700\u540e\u4e00\u4e2apair\u79fb\u5230recipient\u7684\u5f00\u5934\uff0c\u5373\u5c06\u8be5pair\u7684value\u8d4b\u7ed9dummy head\u7684value\u3002</p> </li> <li> <p><code>void CopyFirstFrom(const page_id_t value, BufferPoolManager *buffer_pool_manager)</code></p> </li> </ul>"},{"location":"courses/DB/minisql/#leaf-page","title":"Leaf Page","text":"<p>\u5bf9\u4e8e\u5404\u51fd\u6570\u4f5c\u7528\u7684\u89e3\u91ca</p>"},{"location":"courses/DB/minisql/#helper-function_1","title":"Helper function","text":"<ul> <li> <p><code>int KeyIndex(const GenericKey *key, const KeyManager &amp;KM)</code></p> <p>\u4e8c\u5206\u67e5\u627e\u5927\u4e8e\u7b49\u4e8e<code>key</code>\u7684pair\u7684index</p> </li> <li> <p><code>KeyAt(int index)</code>/<code>SetKeyAt(int index)</code></p> </li> <li> <p><code>ValueAt(int index)</code>/<code>SetValueAt(int index)</code></p> </li> <li> <p><code>void PairCopy(void *dest, void *src, int pair_num)</code></p> <p>\u4ecesrc\u590d\u5236n\u4e2apair\u5230dest</p> </li> <li> <p><code>std::pair&lt;GenericKey *, RowId&gt; GetItem(int index)</code></p> <p>\u8fd4\u56de\u4e00\u4e2apair\uff0c{key, value(rowid)}</p> </li> </ul>"},{"location":"courses/DB/minisql/#insert","title":"Insert","text":"<ul> <li> <p><code>int Insert(GenericKey *key, const RowId &amp;value, const KeyManager &amp;KM)</code></p> <p>\u5c06pair\u63d2\u5165\u8be5\u9875\u7684\u5bf9\u5e94\u4f4d\u7f6e\u4e2d</p> </li> </ul>"},{"location":"courses/DB/minisql/#split_1","title":"Split","text":"<ul> <li> <p><code>void MoveHalfTo(LeafPage *recipient)</code></p> <p>\u5c06\u540e\u4e00\u534a\u7684pair\u79fb\u5230<code>recipient</code>\u672b\u5c3e</p> </li> <li> <p><code>void CopyNFrom(void *src, int size)</code></p> <p>\u4ecesrc\u590d\u5236n\u4e2apair\u5230\u81ea\u8eab\u672b\u5c3e</p> </li> </ul>"},{"location":"courses/DB/minisql/#lookup","title":"Lookup","text":"<ul> <li> <p><code>bool Lookup(const GenericKey *key, RowId &amp;value, const KeyManager &amp;KM)</code></p> <p>\u67e5\u627ekey\uff0c\u5e76\u8fd4\u56de\u5b83\u5bf9\u5e94\u7684rowid (\u5b58\u5728value\u4e2d)\uff1b\u82e5\u627e\u4e0d\u5230\u5219\u8fd4\u56defalse</p> </li> </ul>"},{"location":"courses/DB/minisql/#remove_1","title":"Remove","text":"<ul> <li> <p><code>int RemoveAndDeleteRecord(const GenericKey *key, const KeyManager &amp;KM)</code></p> <p>\u79fb\u9664key\u5bf9\u5e94\u7684pair\uff0c\u8fd4\u56de\u79fb\u9664\u540e\u7684size</p> </li> </ul>"},{"location":"courses/DB/minisql/#merge_1","title":"Merge","text":"<ul> <li> <p><code>void MoveAllTo(LeafPage *recipient)</code></p> <p>\u5c06\u81ea\u8eab\u6240\u6709\u7684pair\u90fd\u79fb\u5230recipient\u4e2d\uff0c\u5e76\u66f4\u65b0recipient\u7684next page id\u4e3a\u81ea\u8eab\u7684next page id</p> </li> </ul>"},{"location":"courses/DB/minisql/#redistribute_1","title":"Redistribute","text":"<ul> <li> <p><code>void MoveFirstToEndOf(LeafPage *recipient)</code></p> <p>\u5c06\u81ea\u8eab\u7684\u7b2c\u4e00\u4e2apair\u79fb\u5230recipient\u7684\u672b\u5c3e</p> </li> <li> <p><code>void CopyLastFrom(GenericKey *key, const RowId value)</code></p> <p>\u5c06\u8be5pair\u52a0\u5230\u81ea\u8eab\u672b\u5c3e</p> </li> <li> <p><code>void MoveLastToFrontOf(LeafPage *recipient)</code></p> <p>\u5c06\u81ea\u8eab\u7684\u6700\u540e\u4e00\u4e2apair\u79fb\u5230recipient\u7684\u5f00\u5934</p> </li> <li> <p><code>void CopyFirstFrom(GenericKey *key, const RowId value)</code></p> <p>\u5c06\u8be5pair\u63d2\u5165\u5230\u81ea\u8eab\u5f00\u5934</p> </li> </ul>"},{"location":"courses/DB/minisql/#b_plus_tree","title":"B_Plus_Tree","text":""},{"location":"courses/DB/minisql/#search","title":"search","text":"<ul> <li> <p><code>bool BPlusTree::GetValue(const GenericKey *key, std::vector&lt;RowId&gt; &amp;result, Txn *transaction)</code> </p> <p>\u67e5\u627ekey\u5bf9\u5e94\u7684pair\uff0c\u5c06\u5176rowid\u653e\u5728<code>result</code>\u4e2d\uff1b\u82e5\u627e\u4e0d\u5230\u5219\u8fd4\u56defalse</p> </li> </ul>"},{"location":"courses/DB/minisql/#insert_1","title":"insert","text":"<ul> <li> <p><code>bool Insert(GenericKey *key, const RowId &amp;value, Txn *transaction)</code></p> <p>\u63d2\u5165pair\uff0c\u8981\u6c42\u4e0d\u4e0e\u5df2\u6709pair\u91cd\u590d\u3002</p> <p>\u82e5\u81ea\u8eab\u4e3a\u7a7a\u7684B+\u6811\uff0c\u5219<code>StartNewTree</code>\uff1b\u5426\u5219<code>InsertIntoLeaf</code></p> </li> <li> <p><code>void StartNewTree(GenericKey *key, const RowId &amp;value)</code></p> <p>\u6784\u9020root page\uff0c\u7136\u540e\u63d2\u5165pair</p> </li> <li> <p><code>bool InsertIntoLeaf(GenericKey *key, const RowId &amp;value, Txn *transaction)</code></p> <p>\u63d2\u5165pair\u5230\u5bf9\u5e94leaf\u4e2d\uff08\u91cd\u590dpair\u5219return false\uff09\uff0c\u8981\u8003\u8651split\uff08\u5e94\u8be5\u662f\u9012\u5f52\u7684split\u5427\uff1f\uff09</p> </li> <li> <p><code>BPlusTreeInternalPage* Split(InternalPage *node, Txn *transaction)</code></p> <p>\u5c06node\u5206\u88c2\uff0c\u8fd4\u56denew\u51fa\u6765\u7684page</p> </li> <li> <p><code>BPlusTreeLeafPage* Split(LeafPage *node, Txn *transaction)</code></p> <p>\u5c06node\u5206\u88c2\uff0c\u8fd4\u56denew\u51fa\u6765\u7684page</p> </li> <li> <p><code>void InsertIntoParent(BPlusTreePage *old_node, GenericKey *key, BPlusTreePage *new_node, Txn *transaction)</code></p> </li> </ul>"},{"location":"courses/DB/minisql/#remove_2","title":"remove","text":"<ul> <li> <p><code>void Remove(const GenericKey *key, Txn *transaction)</code></p> <p>\u5148\u7528<code>FindLeafPage</code>\u627e\u5230key\u6240\u5728leafpage\uff0c\u518d\u5220\u9664key</p> <p>Question</p> <p><code>FindLeafPage</code>\u7684\u7b2c\u4e8c\u4e2a\u53c2\u6570<code>page_id</code>\u5e72\u561b\u7528\u7684\uff1f</p> </li> </ul>"},{"location":"courses/DB/minisql/#redistribute_2","title":"Redistribute","text":"<pre><code>\u6b64\u5904\u6211\u5bf9\u53c2\u6570\u8868\u4e2d\u7684index\u91cd\u65b0\u89e3\u91ca\uff0c\u82e5index=0\uff0c\u5219neighbor_node\u5728node\u4e4b\u540e\uff1b\u5426\u5219neighbor_node\u5728node\u4e4b\u524d\uff0c\n</code></pre>"},{"location":"courses/FDS/FDS/","title":"\u6570\u636e\u7ed3\u6784\u57fa\u7840","text":""},{"location":"courses/FDS/FDS/#prelimiaries","title":"Prelimiaries","text":""},{"location":"courses/FDS/FDS/#4notation","title":"4\u4e2anotation","text":""},{"location":"courses/FDS/FDS/#algorithm-analysis","title":"Algorithm analysisADT","text":"<p>Divide and conquer\uff08\u5206\u6cbb\u6cd5\uff09: T(n)=2T(n/2)+c*n; reduce problem size\uff0c\u6700\u7ec8time complexity\u4e3a \\(O(n\\log n)\\)</p> <p>On-line Algorithm \uff08\u5728\u7ebf\u7b97\u6cd5\uff09: \u6765\u4e00\u4e2a\u6570\u636e\uff0c\u5904\u7406\u4e00\u4e2a\u6570\u636e\uff1b\u4e0d\u9700\u8981\u6240\u6709data\u90fd\u5b58\u597d\u518d\u5904\u7406\u3002\u8282\u7701\u5185\u5b58\u7a7a\u95f4\uff0c\u52a0\u5feb\u5904\u7406\u901f\u5ea6\u3002\u6700\u7ec8time complexity\u4e3a \\(O(n)\\)</p> <p>Data type = {Objects} + {Operations}</p> <p>Arrays: </p> <ul> <li>pros: sequential mapping</li> <li>cons: max size is fixed;Insertion and Deletion takes only O(n) times ,but involves extra data movement.</li> </ul> <p>List: </p> <ul> <li> <p>pros:  allocate flexibly; Insertion and Deletion is relatively convenient </p> </li> <li> <p>cons:</p> <p>not sequentially distributed, interrogate requires O(n) times; </p> <p>malloc(the system allocate memory for you) takes more time than directly sequentially mapping.</p> </li> </ul> <p>\u5224\u65adList\u662f\u5426\u6210\u73af\uff1a\u4e24\u4e2aptr\uff0c\u4e00\u4e2a\u6bcf\u6b21\u8d70\u4e00\u6b65\uff0c\u53e6\u4e00\u4e2a\u6bcf\u6b21\u8d70\u4e24\u6b65\uff0c\u6700\u540e\u662f\u5426\u4f1a\u76f8\u7b49\uff08\u78b0\u5230NULL\u4e4b\u524d\uff09</p>"},{"location":"courses/FDS/FDS/#the-list-adt","title":"The List ADT","text":"<p>List\u7684\u57fa\u672c\u64cd\u4f5c\uff1a</p> <ul> <li>Find the length of a list</li> <li>Print all the items in a list</li> <li>make an empty list</li> <li>find the k-th item of a list</li> <li>Insert a new item after the k-th item</li> <li>Delete an item from a list</li> <li>Next item/previous item</li> </ul> <p>\u67093\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> <ol> <li>Array implementation:</li> </ol> <ul> <li>\u9700\u8981\u5148\u4f30\u8ba1maxsize</li> <li>Find_Kth takes O(1) time</li> <li>Insertion and deletion\u9700\u8981\u82b1O(N)\u65f6\u95f4\uff0c\u4e14\u9700\u8981\u79fb\u52a8data</li> </ul> <ol> <li>Linked list implementation:</li> </ol> <ul> <li>\u4e00\u822c\u4f1a\u52a0\u4e00\u4e2adummy head\u4f5c\u4e3a\u54e8\u5175\ud83d\udc82</li> <li>\u4f18\u5316\u7248\uff1aDoubly linked list\uff0c\u89c1\u4e0b\u56fe</li> </ul> <p></p> <p></p> <ul> <li>\u9002\u7528\u4e8ePolynomial ADT\u7684\u8868\u793a\uff0c\u907f\u514d\u4e86\u8fc7\u591a\u5b58\u50a8\u7a7a\u95f4\u7684\u6d6a\u8d39</li> <li>\u53ef\u7528\u4e8e\u6784\u5efaMultilist\uff0c\u9002\u7528\u4e8e\u5546\u54c1\u548c\u6d88\u8d39\u8005\u3001\u8bfe\u7a0b\u548c\u9009\u8bfe\u5b66\u751f\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li>(self-study) The sparse matrix representation</li> </ul> <p></p> <ol> <li>Cursor implementation :</li> </ol> <p>\u9996\u5148\uff0c\u660e\u786e\u4e00\u4e0b linked list \u6240\u5fc5\u987b\u6709\u7684\u7279\u5f81\uff1a</p> <ul> <li>\u6570\u636e\u5b58\u50a8\u5728\u4e00\u4e9b\u7ed3\u6784\u4f53(structure)\u4e2d\uff0c\u6bcf\u4e00\u4e2a\u7ed3\u6784\u4f53\u90fd\u5305\u542b\u6240\u5b58\u6570\u636e\u548c\u6307\u5411\u4e0b\u4e00\u4e2a\u7ed3\u6784\u4f53\u7684\u6307\u9488</li> <li>\u53ef\u4ee5\u901a\u8fc7<code>malloc</code>\u548c<code>free</code>\u6765\u5728global memory\u4e2d\u521b\u5efa(obtain)\u548c\u56de\u6536(release)\u7ed3\u6784\u4f53</li> </ul> <p>Cursor\u7684\u60f3\u6cd5\u662f</p> <ul> <li>\u5f00\u4e00\u4e2astructure\u7c7b\u578b\u7684\u5168\u5c40\u6570\u7ec4\uff08\u79f0\u4e3aCURSOR_SPACE\uff09\uff0c\u7528\u6bcf\u4e2astructure\u7684index\u6765\u6a21\u62df\u5730\u5740\uff0c\u4e8e\u662f\u5b83\u7684<code>next</code>\u5c31\u8bbe\u4e3a<code>int</code>\u7c7b\u578b\uff0c\u8fd9\u6837\u5c31\u6a21\u62df\u4e86\u7279\u5f811</li> <li>\u4e3a\u4e86\u80fd\u591f<code>malloc</code>\u548c<code>free</code> CURSOR_SPACE \u4e2d\u7684\u5143\u7d20(cell)\uff0c\u4f1a\u6709\u4e00\u4e2afreelist \u6765\u5b58\u653e\u90a3\u4e9b\u6ca1\u6709\u88abmalloc\u5230list\u4e2d\u7684cell\uff0c\u5e76\u7528cell[0]\u4f5c\u4e3aheader</li> </ul> <p>\u4e3a\u4e86\u6807\u8bc6\u5df2\u88abmalloc\u7684list\uff0c\u901a\u5e38\u4f1a\u7528\u5934\u4e00\u4e2acell\u4f5c\u4e3adummy header</p> <p>Code as follows:</p> <p>```c    typedef unsigned int node_ptr;    struct node    {     element_type element;     node_ptr next;    };    typedef node_ptr LIST;    typedef node_ptr position;    struct node CURSOR_SPACE[ SPACE_SIZE ];    // CURSOR_SPACE array</p> <p>p = CURSOR_SPACE[0].next;    CURSOR_SPACE[0].next = CURSOR_SAPCE[p].next;    // malloc the cell after CURSOR_SPACE[0],     // CURSOR_SPACE[0] is the dummy header</p> <p>CURSOR_SPACE[p].next = CURSOR_SPACE[0].next;    CURSOR_SPCE[0].next = p;    // free the list with header cell[p]</p> <p>\u200b   \u7ed3\u6784\u4f53\u6570\u7ec4\u7684\u521d\u59cb\u5316\u5982\u4e0b\uff1a</p> <p></p> <p>\u200b   Example :</p> Slot Element Next 0 - 6 1 b 9 2 f 0 3 header 7 4 - 0 5 header 10 6 - 4 7 c 8 8 d 2 9 e 0 10 a 1 <p>\u5bf9\u5e94\uff1a</p> <p></p> <p></p> <p>\u5176\u4e2d\uff0cc0-&gt;c6-&gt;c4\u5f62\u6210\u7684\u73af\u662ffreelist</p>"},{"location":"courses/FDS/FDS/#adt-stack","title":"ADT stack","text":"<p>Two implementations :</p> <ol> <li>Linked list (with a dummy header)\uff1a</li> </ol> <p>\u57fa\u672c\u903b\u8f91\uff1astack\u662flist\u7684header\uff1bstack\u4e2d\u7684element\u662flist\u4e2d\u7684node</p> <ol> <li>Array\uff1a</li> </ol> <p>\u57fa\u672c\u903b\u8f91\uff1astack\u662f\u4e00\u4e2astructure\uff1bstack\u4e2d\u7684element\u662fstructure\u4e2d\u7684\u6570\u7ec4\u7684\u5143\u7d20</p> <p>Code as follows</p> <pre><code>struct stack_record\n{\n unsigned int stack_size;\n int top_of_stack;\n element_type *stack_array;\n};\ntypedef struct stack_record *STACK;\n#define EMPTY_TOS (-1) /* Signifies an empty stack */\n\nSTACK create_stack( unsigned int max_elements )\n{\nSTACK S;\n/*1*/ if( max_elements &lt; MIN_STACK_SIZE )\n/*2*/ error(\"Stack size is too small\");\n/*3*/ S = (STACK) malloc( sizeof( struct stack_record ) );\n/*4*/ if( S == NULL )\n/*5*/ fatal_error(\"Out of space!!!\");\n/*6*/ S-&gt;stack_array = (element_type *)\nmalloc( sizeof( element_type ) * max_elements );\n/*7*/ if( S-&gt;stack_array == NULL )\n/*8*/ fatal_error(\"Out of space!!!\");\n/*9*/ S-&gt;top_of_stack = EMPTY_TOS;\n/*10*/ S-&gt;stack_size = max_elements;\n/*11*/ return S;\n}\n\nvoid dispose_stack( STACK S )\n{\n  if( S != NULL )\n  {\n    free S-&gt;stack_array;\n    free S;\n  }\n}\n</code></pre> <p>Error type:</p> <ul> <li>ADT error : a <code>pop</code> on an empty stack</li> <li>Implementation error : a <code>push</code> on a full stack</li> </ul> <p>Applications :</p> <ol> <li>symbols balancing     Check if parenthesis ( ), brackets [ ], and braces { } are balanced.</li> </ol> <p>Code omitted...</p> <ol> <li>calculator : Infix to Postfix Conversion</li> </ol> <p>Infix expression: <code>a + b * c - d / e</code></p> <p>Prefix expression: <code>- + a * b c / d e</code></p> <p>Postfix expression: <code>a b c * + d e / -</code></p> <p>Example (Postfix expression) :</p> <p><code>6 2 / 3 - 4 2 * +  =  8</code></p> <p>Procedure : Time complexity = O(N)</p> Get token: 6 ( operand ) Get token: 2 ( operand ) Get token: / ( operator ) Pop 6,2; Push 6/2=3 ( operand ) Get token: - ( operator ) Get token: 3 ( operand ) Pop 3,3; Push 3-3=0 (operand) Get token: 4 ( operand ) Get token: 2 ( operand ) Get token: * ( operator ) Pop 4,2; Push 4*2=8 (operand) Get token: + ( operator ) Pop 0,8; Push 8 Pop 8 <p>\u53ef\u4ee5\u770b\u51fa\uff0cpostfix\u8868\u8fbe\u5f0f\u4e0d\u9700\u8981\u8003\u8651\u8fd0\u7b97\u4f18\u5148\u7ea7 (precedence rules)\uff0c\u4ec5\u4ec5\u9700\u8981\u904d\u5386\u8868\u8fbe\u5f0f\u5373\u53ef\u3002</p> <p>\u56e0\u6b64\u6211\u4eec\u5e38\u5e38\u9700\u8981infix\u5230postfix\u7684conversion\uff0c\u8fd9\u4f9d\u8d56\u4e8e\u4e00\u4e2a\u5b58\u653eoperator\u7684stack</p> <p>\u6b64\u5904\u7684conversion\u5e94\u8be5\u662f\u6307\u5b57\u7b26\u4e32\u7684conversion\uff0c\u6216\u8005char\u6570\u7ec4\u7684\u6620\u5c04</p> <ul> <li>Conversion example :</li> </ul> <p><code>a + b * c - d = a b c * + d -</code></p> <p>\u8f6c\u6362\u539f\u5219\uff1a\u904d\u5386\u65f6\uff0c\u9047\u5230operand\uff0c\u76f4\u63a5append\u5230result\uff1b\u9047\u5230operator\uff0c\u52062\u79cd\u60c5\u51b5\u3002\u82e5<code>top(stack)</code>\u7684\u4f18\u5148\u7ea7<code>&gt;=</code>\u8fd9\u4e2aoperator\uff0c\u5219<code>pop stack</code>\uff0c\u7136\u540e\u518d\u6bd4\u8f83\u6b64\u65f6\u7684\u6808\u9876\u4e0e\u8be5operator\uff0c\u76f4\u5230<code>&lt;=</code>\u6216<code>stack is empty</code>\uff1b\u5426\u5219<code>push op onto stack</code></p> <ul> <li>Example (with parenthesis) :</li> </ul> <p><code>a * ( b + c ) / d = a b c + * d /</code></p> <p>\u518d\u6dfb\u52a0\u4e00\u6761\u539f\u5219\u5373\u53ef\uff1a<code>(</code> \u5728\u538b\u5165<code>stack</code>\u524d\u4f18\u5148\u7ea7\u9ad8\u4e8e\u6240\u6709op\uff0c\u5728\u538b\u5165\u540e\u4f18\u5148\u7ea7\u4f4e\u4e8e\u6240\u6709op\uff1b\u9047\u5230<code>)</code>\u65f6\uff0c<code>pop stack</code>\u76f4\u5230\u6700\u8fd1\u7684<code>(</code>\u4e5f\u88ab<code>pop</code></p> <p>Note : \u4e58\u65b9<code>^</code>\u662f\u4ece\u53f3\u5411\u5de6\u7ed3\u5408\u7684\uff0c\u4e0e<code>+-*/</code>\u4e0d\u540c</p> <p>\u8f6c\u6362\u539f\u7406\uff1a\u6211\u7684\u603b\u7ed3\u662f\uff0c\u82e5\u6b63\u5728\u904d\u5386\u7684<code>op1</code>\u4f18\u5148\u7ea7\u4e25\u683c\u9ad8\uff0c\u5219\u653e\u5165\u6808\u4e2d\uff0c\u540e\u7eed\u64cd\u4f5c\u65f6\u4f18\u5148\u5f39\u51fa\uff1b\u5426\u5219\u4f18\u5148\u7ea7\u4f4e\uff0c\u5e94\u8be5\u5c06\u524d\u9762\u4f18\u5148\u7ea7\u9ad8\u7684\u90fd\u5f39\u51fa\u540e\u5728\u653e\u5165\u6808\u4e2d</p> <p>\u5173\u4e8erecursion\uff1arecursion\u5e94\u8be5\u5c3d\u53ef\u80fd\u907f\u514d\uff0c\u4e00\u6765\u5bb9\u6613\u7206\u7cfb\u7edf\u6808\uff0c\u4e8c\u6765\u8c03\u7528\u7cfb\u7edf\u6808\u66f4\u8d39\u65f6\u3002In general\uff0crecursion\u6bd4non-recursion\u8981\u6162<sub>~\uff08\u867d\u7136\u6211\u6ca1\u611f\u89c9\uff09</sub>~</p>"},{"location":"courses/FDS/FDS/#adt-queue","title":"ADT queue","text":"<p>Array implementation :</p> <pre><code>struct  QueueRecord {\n    int     Capacity ;   /* max size of queue */\n    int     Front;          /* the front pointer */\n    int     Rear;           /* the rear pointer */\n    int     Size;  /* Optional - the current size of queue */\n    ElementType  *Array;    /* array for queue elements */\n } ; \n</code></pre> <p><code>Front</code>\u4e00\u822c\u6307\u5411\u7b2c\u4e00\u4e2a\u5143\u7d20\uff1b<code>Rear</code>\u5219\u6307\u5411\u6700\u540e\u4e00\u4e2a\u5143\u7d20\uff1b\u521d\u59cb\u72b6\u6001\u548c\u7a7a\u72b6\u6001\u4e0b\uff0c<code>Rear</code>\u8bbe\u5728<code>Front</code>\u524d\u4e00\u4f4d</p> <p>\u4e3a\u4e86\u5145\u5206\u5229\u7528queue\u7684\u7a7a\u95f4\uff0c\u901a\u5e38\u4f7f\u7528circular queue\uff0c\u4f46\u6b64\u65f6\u7531\u4e8efull queue\u548cempty queue\u65f6\u5747\u4e3a<code>Rear = Front - 1</code>\uff0c\u65e0\u6cd5\u533a\u5206\uff0c\u6240\u4ee5\u53ea\u80fd</p> <ol> <li>\u53ea\u7528<code>Capacity - 1</code>\u4e2a\u5355\u5143\uff0c\u6216\u8005</li> <li>add <code>size</code> field\u6765\u533a\u5206full\u548cempty</li> </ol>"},{"location":"courses/FDS/FDS/#chapter4-tree","title":"Chapter4 Tree","text":"<p>def : a Tree consists of </p> <ul> <li>\u6839\u7ed3\u70b9root\uff0c\u8bb0\u4f5c<code>r</code></li> <li>0\u4e2a\u6216\u591a\u4e2a\u5b50\u6811\uff0c\u6bcf\u9897\u5b50\u6811\u90fd\u901a\u8fc7\u6709\u5411\u5f27(directed edge)\u4eceroot\u6307\u5411\u5b83\u81ea\u8eab</li> </ul> <p>Note: </p> <ul> <li>\u5b50\u6811\u4e0d\u80fd\u76f8\u4e92\u8fde\u63a5\uff0c\u56e0\u6b64\u6bcf\u9897\u5b50\u6811\u90fd\u662f\u67d0\u4e9b\u5b50\u6811\u7684\u6839\u8282\u70b9</li> <li>\u4e00\u68f5N\u8282\u70b9\u7684\u6811\u4e2d\u6709N-1\u6761\u8fb9(edge)\u3002\u9664\u6839\u8282\u70b9\u5916\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u6709\u4e00\u6761\u4ece\u5b83\u7684root\u6307\u5411\u5b83\u7684edge</li> </ul> <p>concept :</p> <ul> <li>degree of a node : \u6b64\u7ed3\u70b9\u7684\u5b50\u6811\u6570\u91cf</li> <li>degree of a tree : \\(max\\{degree(node):node\\in tree\\}\\)</li> <li>Parent : \u6b64\u7ed3\u70b9\u7684root</li> <li>Child : \u6b64\u7ed3\u70b9\u7684\u5b50\u6811</li> <li>Siblings : \u540cparent\u7684children</li> <li>Leaf : degree\u4e3a0\u7684\u7ed3\u70b9</li> <li>Path from n<sub>1</sub> to n<sub>k</sub> : the unique sequence n<sub>1</sub> , ... , n<sub>i</sub> , connected with edge </li> <li>Length of path \uff08\u8def\u5f84\u957f\u5ea6\uff09: number of edge in the path</li> <li>Depth \uff08\u6df1\u5ea6\uff09: \u7ed3\u70b9n<sub>i</sub>\u7684\u6df1\u5ea6\u4e3a\uff1a\u4ece<code>r</code>\u5230n<sub>i</sub>\u7684\u957f\u5ea6</li> <li>Height \uff08\u9ad8\u5ea6\uff09: \u7ed3\u70b9n<sub>i</sub>\u9ad8\u5ea6\u4e3a\uff1a\u4ecen<sub>i</sub>\u6cbfedge\u987a\u4e0b\u5230\u67d0\u53f6\u7ed3\u70b9\u6700\u957f\u7684\u8def\u5f84</li> <li>Height of a tree = depth of a tree = depth(the deepest node)</li> <li>Ancestor : nodes on the unique path before ni</li> <li>Descendant : all nodes in ni's subtree</li> </ul> <p>implementations :</p> <ul> <li> <p>linked list implementation is not good, \u53ef\u4ee5\u7528\u4e8c\u53c9\u6811\u6765\u5b9e\u73b0</p> </li> <li> <p>FirstChild-NextSibling Representation\u5219\u6709\u7edf\u4e00\u7684\u8868\u793a\u6cd5</p> </li> </ul> <p></p> <p>note : \u4e0a\u8ff0\u8868\u793a\u65b9\u6cd5\u4e0d\u552f\u4e00\uff0cchildren\u7684\u4f4d\u7f6e\u53ef\u4ee5\u4e92\u6362</p>"},{"location":"courses/FDS/FDS/#binary-tree","title":"Binary Tree\uff08\u4e8c\u53c9\u6811\uff09","text":"<ul> <li> <p>Def : \u6bcf\u4e2a\u8282\u70b9\u6700\u591a2\u4e2a\u5b69\u5b50\u7684tree</p> </li> <li> <p>binary tree\u53ef\u7528\u4e8e\u6784\u5efa\u8bed\u6cd5\u6811(expression/syntax tree)</p> </li> </ul> <p>\u7ed9\u51fa\u4e00\u4e2apostfix expression\uff0c\u6784\u5efa\u4e00\u4e2asyntax tree</p> <p>Ex : <code>(a + b)*(c * (d + e)) = a b + c d e + * *</code></p> <p></p>"},{"location":"courses/FDS/FDS/#tree-traversals","title":"Tree traversals","text":"<ul> <li>Preorder</li> </ul> <pre><code>void  preorder ( tree_ptr  tree )\n{  if  ( tree )   {\n        visit ( tree );\n        for (each child C of tree )\n            preorder ( C );\n    }\n}\n</code></pre> <ul> <li>Inorder</li> </ul> <pre><code>void  inorder ( tree_ptr  tree )\n{  if  ( tree )   {\n        inorder ( tree-&gt;Left );\n        visit ( tree-&gt;Element );\n        inorder ( tree-&gt;Right );\n   }\n}\n\n// iterative version using stack\nvoid  iter_inorder ( tree_ptr  tree )\n{ Stack  S = CreateStack( MAX_SIZE );\n  for ( ; ; )  {\n     for ( ; tree; tree = tree-&gt;Left )\n        Push ( tree, S ) ;\n     tree = Top ( S );  Pop( S );\n     if ( ! tree )  break;\n     visit ( tree-&gt;Element );\n     tree = tree-&gt;Right;   }\n}\n</code></pre> <ul> <li>Postorder</li> </ul> <pre><code>void  postorder ( tree_ptr  tree )\n{  if  ( tree )   {\n        for (each child C of tree )\n            postorder ( C );\n        visit ( tree );\n    }\n}\n</code></pre> <ul> <li>Levelorder (\u6309hierarchy\u6765visit), using queue</li> </ul> <pre><code>void  levelorder ( tree_ptr  tree )\n{   enqueue ( tree );\n    while (queue is not empty) {\n        visit ( T = dequeue ( ) );\n        for (each child C of T )\n            enqueue ( C );\n    }\n}\n</code></pre> <p>\u7ed9\u51fa\u4e00\u68f5syntax tree\uff0c\u5219preorder traversal\u3001inorder traversal\u3001postorder traversal\u7684\u7ed3\u679c\u6b63\u597d\u662fprefix\u3001infix\u3001postfix expression\uff01</p>"},{"location":"courses/FDS/FDS/#threaded-binary-tree","title":"Threaded binary tree","text":"<p>\u5728\u4e00\u68f5full binary tree\u4e2d\uff0c\u82e5\u6709n\u4e2anode\uff0c\u5219\u5171\u67092n\u4e2alink\uff0c\u5176\u4e2dn-1\u4e2alink\u6307\u5411\u975e\u7a7a\uff0cn+1\u4e2a\u6307\u5411<code>NULL</code>\uff0c\u9020\u6210\u6d6a\u8d39\uff0c\u6240\u4ee5\u4ea7\u751f\u4e86Threaded binary tree\u7684\u60f3\u6cd5\uff08\u6307\u5411<code>NULL</code>\u7684link\u79f0\u4e3a<code>Thread</code>\uff09</p> <ul> <li>Rule1:\u82e5<code>node-&gt;Left == NULL</code>\uff0c\u5219\u5c06<code>node-&gt;Left</code>\u6307\u5411\u8be5node\u7684inorder predecessor\uff08\u524d\u7ee7\uff09</li> <li>Rule2:\u82e5<code>node-&gt;Right == NULL</code>\uff0c\u5219\u5c06<code>node-&gt;Right</code>\u6307\u5411\u8be5node\u7684inorder successor\uff08\u540e\u7ee7\uff09</li> <li>Rule3:\u6ca1\u6709loose thread\uff0c\u4e3a\u6b64\uff0c\u8bbe\u7f6e\u4e86\u4e00\u4e2adummy header\uff0c\u4f7f\u5f97<code>leftmost_node-&gt;Left</code>\u3001<code>rightmost_node-&gt;Right</code>\u90fd\u6307\u5411header</li> </ul> <p><pre><code>typedef  struct  ThreadedTreeNode  *PtrTo  ThreadedNode;\ntypedef  struct  PtrToThreadedNode  ThreadedTree;\ntypedef  struct  ThreadedTreeNode {\n       int LeftThread;   /* if it is TRUE, then Left */\n       ThreadedTree Left;/* is a thread, not a child ptr.*/\n       ElementType  Element;\n       int RightThread;    /* if it is TRUE, then Right */\n       ThreadedTree Right; /* is a thread, not a child ptr.*/\n}\n</code></pre> Ex : </p>"},{"location":"courses/FDS/FDS/#search-tree-adt-binary-search-tree","title":"Search tree ADT : binary search tree\uff08\u4e8c\u5206\u641c\u7d22\u6811\uff09","text":""},{"location":"courses/FDS/FDS/#properties-of-binary-tree","title":"Properties of Binary tree","text":"<ul> <li> <p>\u8bbe<code>root</code>\u5728<code>level 1</code>\uff0c\u5219<code>level i</code>\u6700\u591a\u67092<sup>i-1</sup>\u4e2a\u7ed3\u70b9\uff1bdepth\u4e3ak\u7684\u6811\u6700\u591a\u67092<sup>k+1</sup>-1\u4e2a\u7ed3\u70b9</p> </li> <li> <p>\u8bbe<code>n,n0,n1,n2</code>\u5206\u522b\u4e3a\u7ed3\u70b9\u603b\u4e2a\u6570\uff0cdegree\u4e3a0\uff0c1\uff0c2\u7684\u7ed3\u70b9\u6570\uff0c\u5219   $$   n=n_0+n_1+n_2 \\   n-1=n_1+2n_2 \\   $$   \u53ef\u5f97   $$   n_0=n_2+1   $$</p> </li> </ul>"},{"location":"courses/FDS/FDS/#binary-search-tree-bst","title":"Binary Search Tree (BST)","text":"<p>\u529f\u80fd\uff1a\u67e5\u627e\u7279\u5b9a\u5143\u7d20\u3001\u6700\u5927\u3001\u6700\u5c0f\u3001\u63d2\u5165\u3001\u5220\u9664...</p> <p><code>Find</code>:</p> <pre><code>//Find:\nPosition  Find( ElementType X,  SearchTree T ) \n{ \n  if ( T == NULL ) \n    return  NULL;  /* not found in an empty tree */\n  if ( X &lt; T-&gt;Element )  /* if smaller than root */\n    return  Find( X, T-&gt;Left );  /* search left subtree */\n  else \n    if ( X &gt; T-&gt;Element )  /* if larger than root */\n        return  Find( X, T-&gt;Right );  /* search right subtree */\n    else   /* if X == root */\n        return  T;  /* found */\n} \n\n//iterative Find:\nPosition  Iter_Find( ElementType X,  SearchTree T ) \n{     \n  while  ( T ) {\n    if  ( X == T-&gt;Element )  \n            return T ;  /* found */\n    if  ( X &lt; T-&gt;Element )\n      T = T-&gt;Left ; /*move down along left path */\n    else\n            T = T-&gt;Right ; /* move down along right path */\n     }  /* end while-loop */\n   return  NULL ;   /* not found */\n} \n</code></pre> <p><code>FindMin / FindMax</code>:</p> <pre><code>Position  FindMin( SearchTree T ) \n{ \n      if ( T == NULL )   \n          return  NULL; /* not found in an empty tree */\n      else \n          if ( T-&gt;Left == NULL )   return  T;  /* found left most */\n          else   return  FindMin( T-&gt;Left );   /* keep moving to left */\n} \n\nPosition  FindMax( SearchTree T ) \n{ \n      if ( T != NULL ) \n         while ( T-&gt;Right != NULL )   \n                        T = T-&gt;Right;   /* keep moving to find right most */\n      return T;  /* return NULL or the right most */\n} \n</code></pre> <p><code>Insert</code>:</p> <pre><code>SearchTree  Insert( ElementType X, SearchTree T ) \n{ \n        if ( T == NULL ) { /* Create and return a one-node tree */ \n            T = malloc( sizeof( struct TreeNode ) ); \n            if ( T == NULL ) \n            FatalError( \"Out of space!!!\" ); \n            else { \n            T-&gt;Element = X; \n            T-&gt;Left = T-&gt;Right = NULL; } \n        }  /* End creating a one-node tree */\n    else  /* If there is a tree */\n            if ( X &lt; T-&gt;Element ) \n            T-&gt;Left = Insert( X, T-&gt;Left ); \n            else \n            if ( X &gt; T-&gt;Element ) \n            T-&gt;Right = Insert( X, T-&gt;Right ); \n       /* Else X is in the tree already; we'll do nothing */ \n    return  T;   /* Do not forget this line!! */ \n}\n</code></pre> <p><code>Delete</code>:\u5220\u9664\u5143\u7d20\u76f8\u5bf9\u590d\u6742\uff0c\u9700\u8981\u5206\u60c5\u51b5</p> <ul> <li>\u5220\u9664\u53f6\u7ed3\u70b9\uff1a\u76f4\u63a5\u5220\u9664\u5373\u53ef</li> <li>\u5220\u9664degree\u4e3a1\u7684\u7ed3\u70b9\uff1a\u7528\u5b83\u7684\u5b69\u5b50\u4ee3\u66ff\u5b83</li> <li>\u5220\u9664degree\u4e3a2\u7684\u7ed3\u70b9\uff1a\u5728n<sub>0</sub>\u7684\u5de6\u5b50\u6811\u4e2d\u627e\u5230\u6700\u53f3\uff08\u4e5f\u662f\u4e0d\u8d85\u8fc7n<sub>0</sub>\u7684\u6700\u5927\u7ed3\u70b9\uff09\u7684\u7ed3\u70b9\uff0c\u4ee3\u66ffn<sub>0</sub>\uff0c\u5e76\u5220\u9664\u8be5\u66ff\u4ee3\u7ed3\u70b9\uff1b\u6216\u5728n<sub>0</sub>\u7684\u53f3\u5b50\u6811\u4e2d\u627e\u5230\u6700\u5de6\u7684\u7ed3\u70b9\uff0c\u4ee3\u66ffn<sub>0</sub>\uff0c\u5e76\u5220\u9664\u8be5\u66ff\u4ee3\u7ed3\u70b9</li> </ul> <pre><code>SearchTree  Delete( ElementType X, SearchTree T ) \n{    \n  Position  TmpCell; \n  if ( T == NULL )   Error( \"Element not found\" ); \n  else  if ( X &lt; T-&gt;Element )  /* Go left */ \n    T-&gt;Left = Delete( X, T-&gt;Left ); \n  else  if ( X &gt; T-&gt;Element )  /* Go right */ \n        T-&gt;Right = Delete( X, T-&gt;Right ); \n    else  /* Found element to be deleted */ \n        if ( T-&gt;Left &amp;&amp; T-&gt;Right ) {  /* Two children */ \n      TmpCell = FindMin( T-&gt;Right ); \n      T-&gt;Element = TmpCell-&gt;Element; \n      T-&gt;Right = Delete( T-&gt;Element, T-&gt;Right );  \n    } \n      else {  /* One or zero child */ \n        TmpCell = T; \n        if ( T-&gt;Left == NULL )\n            T = T-&gt;Right; \n        else  if ( T-&gt;Right == NULL )  T = T-&gt;Left; \n            free( TmpCell );  \n    } \n        return  T; \n}\n</code></pre> <p>Note:\u82e5deletion\u6b21\u6570\u8fc7\u591a\uff0c\u53ef\u4ee5\u8003\u8651<code>LazyDeletion</code>\uff0c\u5e76\u4e0d\u76f4\u63a5\u5220\u9664\u5143\u7d20\uff0c\u800c\u662f\u6807\u8bb0\u5b83\u4e3a\u5df2\u88ab\u5220\u9664\u3002\u53ef\u4ee5\u51cf\u5c11\u7cfb\u7edf\u64cd\u4f5c\uff0c\u8282\u7701\u65f6\u95f4\u3002</p>"},{"location":"courses/FDS/FDS/#priority-queuesheap","title":"Priority Queues/Heap (\u5806)","text":"<p>\u7528\u4e8e\u5feb\u901f\u67e5\u627e\u6700\u5927/\u6700\u5c0f\u5143\u7d20</p> <p>ADT Model :</p> <ul> <li>Object : A finite ordered list with zero or more elements. </li> </ul> <p>\u6211\u7684\u611f\u89c9\u662f\uff1a\u5b58\u653e\u65f6\u662f\u65e0\u5e8f\u7684\uff0c\u5728\u7528heap\u7684\u65f6\u5019\u8868\u73b0\u51fa\u6709\u5e8f\u6027</p> <ul> <li>Operation : </li> </ul> <p>```C   Initialize( int MaxElements );    void  Insert( ElementType X, PriorityQueue H );    ElementType  DeleteMin( PriorityQueue H );    ElementType  FindMin( PriorityQueue H ); </p> <p>Implementations : </p> <ol> <li>Array</li> <li>Linked List</li> <li>Ordered array</li> <li>Ordered linked list</li> </ol>"},{"location":"courses/FDS/FDS/#binary-heap","title":"Binary Heap","text":""},{"location":"courses/FDS/FDS/#complete-binary-tree","title":"complete binary tree\uff08\u5b8c\u5168\u4e8c\u53c9\u6811\uff09","text":"<p>\u6309level order\u7684index\u662f\u8fde\u7eed\u7684\u4e8c\u53c9\u6811\uff1b</p> <p>\u6216\u8005A binary tree with n nodes and height h is complete  iff  its nodes correspond to the nodes numbered from 1 to n in the perfect binary tree of height h.</p> <p>\u4e8e\u662f\u4e00\u68f5\u9ad8\u5ea6\u4e3ah\u7684\u5b8c\u5168\u4e8c\u53c9\u6811\u7684\u7ed3\u70b9\u6570\u57282<sup>h</sup>\u52302<sup>h+1</sup>-1\u4e4b\u95f4\uff0c\u662f\u4e00\u68f5AVL tree\u3002\u5b83\u7684\u9ad8\u5ea6\u8868\u8fbe\u5f0f\u4e3a \\(h=[\\log n]\\) \u3002\u7531\u4e8e\u8fd9\u79cdtree\u7684parent\u548cchildren\u7684index\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u5b83\u53ef\u4ee5\u7528\u6570\u7ec4\u6765\u5b9e\u73b0\uff0c\u5373<code>BT[n+1] // BT[0] is not used</code></p> <p></p> <p>\u5b83\u7684\u6bcd\u5b50\u3001\u5144\u5f1f\u5173\u7cfb\u5982\u4e0b\uff0c\u5f88\u65b9\u4fbf\uff1a</p> <p></p> <p>\u6211\u4eec\u7684Heap\u5c31\u53ef\u4ee5\u7528complete tree\u6765\u5b9e\u73b0\uff0c\u5728\u5b83\u7684\u57fa\u7840\u4e0a\u8fd8\u9700\u8981\u5177\u6709Heap Order Property :</p> <p>Def : A min tree is a tree in which the key value in each node is no larger than the key values in its children (if any).  A min heap is a complete binary tree that is also a min tree. \u5373\uff0c\u4e00\u4e2anode\u7684key\u5c0f\u4e8e\u7b49\u4e8e\u5b83\u7684\u5b69\u5b50\u7684key\u3002\u540c\u7406\u53ef\u5b9a\u4e49 max tree</p> <p>Heap initialization: </p> <pre><code>PriorityQueue  Initialize( int  MaxElements ) \n{ \n  PriorityQueue  H; \n  if ( MaxElements &lt; MinPQSize ) \n        return  Error( \"Priority queue size is too small\" ); \n  H = malloc( sizeof ( struct HeapStruct ) ); \n  if ( H ==NULL ) \n        return  FatalError( \"Out of space!!!\" ); \n\n    /* Allocate the array plus one extra for sentinel */ \n    H-&gt;Elements = malloc(( MaxElements + 1 ) * sizeof( ElementType )); \n    if ( H-&gt;Elements == NULL ) \n        return  FatalError( \"Out of space!!!\" ); \n  H-&gt;Capacity = MaxElements; \n    H-&gt;Size = 0; \n    H-&gt;Elements[ 0 ] = MinData;  /* set the sentinel */\n  return  H; \n}\n</code></pre> <p>Basic Heap operation:</p> <ol> <li>Insertion : \u5148\u5b58\u653e\u5728<code>BT[H-&gt;size+1]</code>\uff0c\u5373complete tree\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u518d\u4e00\u8def\u5411\u4e0aswap</li> </ol> <p>\\(T(n) = O(\\log(n))\\)</p> <pre><code>/* H-&gt;Element[ 0 ] is a sentinel */ \nvoid  Insert( ElementType  X,  PriorityQueue  H ) \n{ \n    int  i; \n    if ( IsFull( H ) ) { \n      Error( \"Priority queue is full\" ); \n      return; \n    } \n        for ( i = ++H-&gt;Size; H-&gt;Elements[ i / 2 ] &gt; X; i / = 2 ) \n            H-&gt;Elements[ i ] = H-&gt;Elements[ i / 2 ]; \n\n    H-&gt;Elements[ i ] = X; \n}\n</code></pre> <ol> <li>DeleteMin : \u628aroot\u5220\u6389\uff0c\u518d\u628a<code>BT[H-&gt;size]</code>\u653e\u5728root\u5904\uff0c\u4e0d\u65ad\u5411\u4e0b\u4e0e\u8f83\u5c0f\u7684child\u8fdb\u884cswap</li> </ol> <p>\\(T(n) = O(\\log(n))\\)</p> <pre><code>ElementType  DeleteMin( PriorityQueue  H ) \n{ \n    int  i, Child; \n    ElementType  MinElement, LastElement; \n    if ( IsEmpty( H ) ) { \n         Error( \"Priority queue is empty\" ); \n         return  H-&gt;Elements[ 0 ];   \n    } \n    MinElement = H-&gt;Elements[ 1 ];  /* save the min element */\n    LastElement = H-&gt;Elements[ H-&gt;Size-- ];  /* take last and reset size */\n    for ( i = 1; i * 2 &lt;= H-&gt;Size; i = Child ) {  /* Find smaller child */ \n         Child = i * 2; \n         if (Child != H-&gt;Size &amp;&amp; H-&gt;Elements[Child+1] &lt; H-&gt;Elements[Child]) \n           Child++;     \n         if ( LastElement &gt; H-&gt;Elements[ Child ] )   /* Percolate one level */ \n           H-&gt;Elements[ i ] = H-&gt;Elements[ Child ]; \n         else break;   /* find the proper position */\n    } \n    H-&gt;Elements[ i ] = LastElement; \n    return  MinElement; \n}\n</code></pre> <ol> <li>Others</li> </ol> <ul> <li> <p>Percolate up : </p> <p><code>DecreaseKey ( P, amount, H )</code> : Lower the value of the key in the heap H at position P by a positive amount of <code>amount</code>so other programs can run with highest priority </p> </li> <li> <p>Percolate down : </p> <p><code>IncreaseKey ( P, amount, H )</code> : Increase the value of the key in the heap H at position P by a positive amount of <code>amount</code>, drop the priority of a process that is consuming excessive CPU time.</p> </li> <li> <p>Delete : </p> <p><code>DecreaseKey(P, amount, H); DeleteMin(H)</code></p> <p>Remove the node at position P from the heap H  \u2026\u2026 delete the process that is terminated (abnormally) by a user.</p> </li> <li> <p>BuildHeap : </p> <p>\u5148\u628a N \u4e2ainput keys\u5b58\u653e\u5230empty Heap\u4e2d\uff1b\u518d\u4ece\u5012\u6570\u7b2c\u4e8c\u5c42\u5f00\u59cb\u5411\u4e0bswap\uff0cheight\u4e3ah\u7684node\u81f3\u591aswap h\u6b21\uff08leaf\u7684height\u4e3a0\u7684\u60c5\u51b5\u4e0b\uff09</p> </li> </ul> <p>Theorem : For the perfect binary tree of height h containing 2<sup>h+1</sup>-1 nodes, the sum of the heights of the nodes is 2<sup>h+1</sup>-1-(h + 1).</p> <p>\u56e0\u6b64\uff0c<code>BuildHeap</code>\u7684time complexity\u662f\\(T(n) = O(n)\\)</p> <p>\u8fd9\u5c31\u662f\u5806\u6392\u5e8f(Heap sort)\u7684\u6838\u5fc3\u3002\u5806\u6392\u7684\u6d41\u7a0b\u662f\u5148\u5efa\u5806\uff0c\\(T(n)=O(n)\\)\uff0c\u518d\u8fdb\u884cn\u6b21DeletionMin \uff0c $T(n)=O(n\\log n) $\uff0c\u6574\u4f53\u662f $T(n)=O(n\\log n) $</p> <ul> <li>Application : \u5806\u6392\u548c\u5feb\u6392\u90fd\u662fO(n logn)\u65f6\u95f4\uff0c\u5f53\u6570\u636e\u91cf\u5f88\u5927\uff0c\u800c\u53ea\u9700\u8981\u627e\u51fatop 100\u7684\u503c\u65f6\uff0c\u5c31\u53ef\u4ee5\u7528\u5806\u6392\uff0c\u6bd4\u5feb\u6392\u8981\u9ad8\u6548</li> <li>D-Heaps\uff1a\u6bcf\u4e2a\u7ed3\u70b9\u6709D\u4e2a\u5b69\u5b50\u7684heap</li> </ul>"},{"location":"courses/FDS/FDS/#disjoint-set","title":"Disjoint set\uff08\u5e76\u67e5\u96c6\uff09","text":"<p>\u57fa\u672c\u64cd\u4f5c : <code>union</code> <code>find</code></p> <p>Implementation : \u94fe\u8868\u3001\u6570\u7ec4\uff08\u4e0b\u8ff05\u79cd\u7b97\u6cd5\u4ee5\u6570\u7ec4\u5b9e\u73b0\u4e3a\u57fa\u7840\uff09</p> <p>5\u79cd\u7b97\u6cd5\uff1a</p> <ol> <li> <p>Arbitrary union</p> </li> <li> <p>Smart union    + Union by size\uff0c\u6bcf\u6b21\u5c06\u5c0f\u6811\u5e76\u5165\u5927\u6811</p> <p><code>S[root] = -size</code></p> </li> </ol> <ul> <li> <p>Union by height\uff0c\u6bcf\u6b21\u5c06\u77ee\u6811\u5e76\u5165\u9ad8\u6811</p> <p><code>S[root] = -height</code></p> </li> </ul> <ol> <li> <p>Smart union with Path compression    + Union by size with path compression (compatible)    + Union by rank (incompatible, so the rank is an estimated height)</p> </li> <li> <p>Union by rank implementation</p> </li> </ol> <pre><code>SetType  Find ( ElementType  X, DisjSet  S )\n{   ElementType  root,  trail,  lead;\n    for ( root = X; S[ root ] &gt; 0; root = S[ root ] )\n        ;  /* find the root */\n    for ( trail = X; trail != root; trail = lead ) {\n       lead = S[ trail ] ;   \n       S[ trail ] = root ;   \n    }  /* collapsing */\n    return  root ;\n}\n</code></pre> <ol> <li>Union by rank\u7684\u65f6\u95f4\u590d\u6742\u5ea6</li> </ol> <p>Tarjan Lemma: \u8bbe\u6709M (&gt;=N) \u6b21<code>find</code>\u548cN-1\u6b21<code>Union</code>\uff0c\u5219\u5b58\u5728\u5e38\u6570k<sub>1</sub>, k<sub>2</sub>&gt;0</p> <p>\\(k_1M\\alpha(M,N)\\leq T(M,N)\\leq k_2M\\alpha(M,N)\\)</p> <p>\u5176\u4e2d\\(\\alpha\\)\u51fd\u6570\u548cAckermann\u2019s\u51fd\u6570\u6709\u5173\uff0c\u7ed3\u8bba\u662f\\(\\alpha(M,N)\\leq O(\\log*N)\\leq4\\)</p> <p>\u56e0\u6b64\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e0eM\u6210\u7ebf\u6027\u5173\u7cfb</p> <p></p>"},{"location":"courses/FDS/FDS/#chapter9-graph","title":"Chapter9 Graph","text":""},{"location":"courses/FDS/FDS/#definition","title":"Definition","text":"<p>\u4e00\u4e2a\u56fe\u7528<code>G(V,E)</code>\u8868\u793a\uff0c\u5176\u4e2d<code>V</code>(vertex)\u4e3agraph\u7684\u9876\u70b9\u6784\u6210\u7684\u96c6\u5408\uff0c<code>E</code>(edge)\u4e3a\u8fde\u63a5graph\u9876\u70b9\u7684\u8fb9\u6784\u6210\u7684\u96c6\u5408</p> <p>\u89c4\u5b9a\uff1a\u4e00\u4e2a\u9876\u70b9\u4e0d\u53ef\u4e0e\u81ea\u5df1\u8fde\u63a5\uff08\u4e0d\u80fd\u6709self-loop\uff09</p> <p>\u6709\u5411\u56fe\uff1a\\(&lt;v_i,v_j&gt;\\neq&lt;v_j,v_i&gt;\\)</p> <p>\u65e0\u5411\u56fe\uff1a\\(&lt;v_i,v_j&gt;=&lt;v_j,v_i&gt;\\)</p> <p>\u5b8c\u5168\u56fe\uff1a\u6709\u6700\u5927\u6570\u91cfedge\u7684\u56fe</p> <ul> <li>\u82e5\u4e3a\u65e0\u5411\u56fe\uff0c\u5219\\(V=n,E=n(n-1)/2\\)</li> <li>\u82e5\u4e3a\u6709\u5411\u56fe\uff0c\u5219\\(V=n,E=n(n-1)\\)</li> </ul> <p>\u5176\u4ed6\u6982\u5ff5\uff1a\uff08\u91cd\u70b9\u662fsimple path\u3001connected\u3001DAG\uff09</p> <p></p> <p></p> <p>Connected\uff08\u8fde\u901a\uff09\uff1a\u5c5e\u4e8e\u65e0\u5411\u56fe\u7684\u6982\u5ff5\uff0c\u6307\u4e24vertex\u95f4\u6709path\u76f8\u8fde</p> <p>Strongly connected\uff08\u5f3a\u8fde\u901a\uff09\uff1a\u5c5e\u4e8e\u6709\u5411\u56fe\u7684\u6982\u5ff5\uff0c\u6307\u4e24vertex\u95f4\u6709path\u53ef\u4ee5\u76f8\u4e92\u62b5\u8fbe\u3002\u82e5\u4e00\u4e2a\u6709\u5411\u56fe\u7684edge\u65e0\u5411\u65f6\uff08\u5f53\u4f5c\u65e0\u5411\u56fe\u6765\u770b\uff09\u662f\u8fde\u901a\u7684\uff0c\u4f46\u5e76\u975e\u5f3a\u8fde\u901a\u56fe\uff0c\u5219\u79f0\u4e3aWeakly connected\uff08\u5f31\u8fde\u901a\uff09</p> <p>\u56fe\u7684\u8868\u793a\uff1a</p> <ol> <li>Adjacency Matrix\uff08\u90bb\u63a5\u77e9\u9635\uff09</li> </ol> <p>\u521b\u5efa\u4e8c\u7ef4\u6570\u7ec4<code>adj_mat[n][n]</code>\uff0c\u82e5\\(&lt;v_i,v_j&gt;\\in E\\)\uff0c\u5219<code>adj_mat[i][j]</code>=1\uff0c\u5426\u5219=0\uff1b\u5728\u65e0\u5411\u56fe\u4e2d\u53ef\u4f18\u5316\u4e3a\u4e00\u7ef4\u6570\u7ec4\uff0c\u53ea\u5b58n(n+1)/2\u4e2a\u7a7a\u95f4\uff0c<code>adj_mat[n*(n+1)/2]={a_11,a_21,a_22,...,a_n1,...,a_nn}</code>\uff0c\u5176\u4e2d<code>a_ij</code>\u7684\u7d22\u5f15\u4e3a<code>i*(i-1)/2+j</code></p> <ol> <li>Adjacency Lists\uff08\u90bb\u63a5\u8868\uff09</li> </ol> <p>\u6bcf\u4e2avertex\u4f5c\u4e3a\u4e00\u4e2a\u94fe\u8868header\uff0c\u5b58\u653e\u6b64vertex\u6307\u5411\u7684\u6240\u6709\u76f8\u90bbvertex\uff1b\u82e5\u4e3a\u6709\u5411\u56fe\uff0c\u5219\u8fd8\u9700\u8981\u7ed9\u6bcf\u4e2avertex\u5f00\u4e00\u4e2ainv\u94fe\u8868\uff0c\u7528\u6765\u5b58\u653e\u6240\u6709\u6307\u5411\u6b64vertex\u7684\u76f8\u90bbvertex</p> <p>\u68c0\u9a8cE(G)\u6240\u9700\u7684\u65f6\u95f4\u590d\u6742\u5ea6\\(T(N,E)=O(N+E)\\)</p> <ol> <li>Adjacency multilists\uff08\u90bb\u63a5\u591a\u91cd\u8868\uff09</li> </ol> <p></p> <ol> <li>\u6709\u6743\u91cd\u7684\u56fe\u8868\u793a</li> </ol> <ul> <li>\u90bb\u63a5\u77e9\u9635\u91cc\u5b58weight\u800c\u975e1,0</li> <li>\u90bb\u63a5\u8868\u589e\u52a0<code>weight</code>\u5206\u91cf</li> </ul>"},{"location":"courses/FDS/FDS/#topological-sort","title":"Topological sort","text":"<p>\u5b9e\u9645\u573a\u666f\uff1a\u67d0\u8bfe\u7a0b\u7684\u5148\u4fee\u8bfe\u7a0b\u8981\u6c42\uff0c\u67d0\u4e9b\u8bfe\u7684\u4fee\u8bfb\u8981\u6c42\u5fc5\u987b\u5148\u4fee\u8bfb\u53e6\u5916\u4e00\u4e9b\u57fa\u7840\u8bfe\u7a0b</p>"},{"location":"courses/FDS/FDS/#aov-network","title":"AOV network","text":"<p>\u4e00\u4e2a\u6709\u5411\u56fe<code>G</code>\uff0c<code>V(G)</code>\u5176\u4e2d\u8868\u793aactivities\uff0c<code>E(G)</code>\u8868\u793aprecedence relations</p> <p>Predecessor: \u82e5\u6709<code>i</code>\u901a\u5f80<code>j</code>\u7684path\uff0c\u5219<code>i</code>\u662f<code>j</code>\u7684predecessor\uff08\u5148\u4fee\u8bfe\u7a0b\uff09</p> <p>immediate Predecessor: <code>i</code>\u76f4\u63a5\u6307\u5411<code>j</code>\uff0c\u5219<code>i</code>\u662f<code>j</code>\u7684immediate predecessor</p> <p>Partial order\uff08\u504f\u5e8f\u5173\u7cfb\uff09\uff1a\u4e00\u79cdrelation <code>R</code>\uff0c\u6ee1\u8db3\u4f20\u9012\u6027\uff0c\u4e0d\u6ee1\u8db3\u81ea\u53cd\u6027\uff0c\u5373</p> <pre><code>A-&gt;B, B-&gt;C =&gt; A-&gt;C ;\nA-&gt;A is impossible!\n</code></pre> <p>AOV network\u5fc5\u987b\u662f\u4e00\u4e2aDAG</p> <p>Topological order\u662fAOV network\u7684vertices\u7684\u7ebf\u6027\u6392\u5e8f\uff0c\u6ee1\u8db3\u82e5<code>i</code>\u4e3a<code>j</code>\u7684predecessor\uff0c\u5219<code>i</code>\u6392\u5728<code>j</code>\u4e4b\u524d\uff08\u8bfe\u7a0b\u4fee\u8bfb\u8ba1\u5212\uff09</p> <p>\u4e0d\u61c2\u7684\u8bdd\u5c31\u7528\u5148\u4fee\u8bfe\u7a0b\u7684\u4f8b\u5b50\u6765\u7406\u89e3 (x)</p> <p>Topological implementation code\uff08\u5c06\u5165\u5ea6\u4e3a0\u7684vertex\u653e\u5728queue\u4e2d\uff09</p> <pre><code>void Topsort( Graph G )\n{   \n  Queue  Q;\n  int  Counter = 0;\n  Vertex  V, W;\n  Q = CreateQueue( NumVertex );  MakeEmpty( Q );\n\n  for ( each vertex V )\n        if ( Indegree[ V ] == 0 )   Enqueue( V, Q );\n\n  while ( !IsEmpty( Q ) ) \n  {\n        V = Dequeue( Q );\n        TopNum[ V ] = ++ Counter; /* assign next */\n        for ( each W adjacent to V )\n        if ( \u2013 \u2013 Indegree[ W ] == 0 )  \n        Enqueue( W, Q );\n  } \n\n  if ( Counter != NumVertex ) Error( \u201cGraph has a cycle\u201d );\n\n  DisposeQueue( Q ); /* free memory */\n}\n</code></pre> <p>\u82e5<code>G</code>\u4e3aDAG\uff0c\u5219\u8be5\u7b97\u6cd5\u4e0d\u4f1a\u91cd\u590d\u904d\u5386\u540c\u4e00\u4e2avertex\uff0c\u56e0\u4e3a\u6240\u6709vertex\u53ea\u4f1a\u964d\u4f4e\u5176\u540e\u7ee7\u7684<code>indegree</code>\uff0c\u4e5f\u5c31\u53ea\u53ef\u80fd<code>Enqueue</code>\u5176\u540e\u7ee7</p>"},{"location":"courses/FDS/FDS/#shortest-path-algorithm","title":"Shortest path algorithm\uff08\u6700\u77ed\u8def\u5f84\uff09","text":"<p>\u95ee\u9898\u63cf\u8ff0\uff1a\u7ed9\u5b9a\u4e00\u4e2a\u56fe<code>G=(V,E)</code>\uff0c\u8d77\u59cb\u9876\u70b9<code>S</code>\uff0c\u627e\u5230\u8fd9\u4e2a\u56fe\u4e2d\u6240\u6709\u70b9\u5230<code>S</code>\u7684\u6700\u77ed\u8def\u5f84\u548c\u8def\u5f84\u957f\u5ea6<code>path</code>,<code>length of path</code></p>"},{"location":"courses/FDS/FDS/#unweighted","title":"Unweighted\uff08\u4e0d\u5e26\u6743\u6700\u77ed\u8def\uff09","text":"<p>Note: \u5728\u65e0negetive-cost cycle\u7684\u60c5\u51b5\u4e0b\uff0cs\u5230s\u81ea\u8eab\u7684path\u957f\u5ea6\u8bbe\u4e3a0</p> <p>\u7b97\u6cd5\uff1aBFS\uff08Breadth-first search\uff0c\u5e7f\u5ea6\u4f18\u5148\u7b97\u6cd5\uff09\uff0c\u5c06\u904d\u5386\u8fc7\u7684\u672a\u77e5vertex\u653e\u5728queue\u4e2d</p> <pre><code>void Unweighted( Table T )\n{   /* T is initialized with the source vertex S given */\n    Queue  Q;\n    Vertex  V, W;\n    Q = CreateQueue (NumVertex );  MakeEmpty( Q );\n\n    Enqueue( S, Q ); /* Enqueue the source vertex */\n    while ( !IsEmpty( Q ) ) \n    {\n        V = Dequeue( Q );\n      T[ V ].Known = true; /* not really necessary */\n      for ( each W adjacent to V )\n                if ( T[ W ].Dist == Infinity ) {\n                T[ W ].Dist = T[ V ].Dist + 1;\n                T[ W ].Path = V;\n                Enqueue( W, Q );\n                } \n    } /* end-while */\n    DisposeQueue( Q ); /* free memory */\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T=O(N+E)\\)</p>"},{"location":"courses/FDS/FDS/#dijkstra","title":"Dijkstra\uff08\u5e26\u6743\u6700\u77ed\u8def\uff09","text":"<p>Dijkstra\u2018s algorithm\uff1a\u7528\u5230\u4e86\u8d2a\u5fc3\u7b97\u6cd5\uff08greedy method\uff09\uff0c\u6bcf\u6b21\u9009\u51fa\u5f53\u524d\u72b6\u6001\u4e0b\u8ddd\u79bb\u6700\u5c0f\u7684vertex\u8bbe\u4e3a\u5df2\u77e5\uff0c\u6700\u7ec8\u5f97\u5230\u6240\u6709vertex\u7684\u8ddd\u79bb\u3002</p> <p>\u539f\u5219\uff1a\u4ee4S={\u8d77\u70b9s, \u5df2\u77e5\u6700\u77ed\u8def\u5f84\u7684vertices}</p> <ul> <li> <p>\u521d\u59cb\u65f6\uff0c\u6240\u6709vertex\u90fd\u672a\u77e5\uff0c\u8d77\u70b9s\u7684\u8ddd\u79bb\u8bbe\u4e3a0\uff0c<code>dist[s]=0</code></p> </li> <li> <p>\u6bcf\u6b21\u9009\u51fa\u7684\u6700\u77ed\u8def\u5f84\u70b9\uff0c\u5176\u6700\u77ed\u8def\u5f84\u53ea\u80fd\u7ecf\u8fc7S\u4e2d\u7684\u70b9</p> </li> <li>\u4f9d\u636e\u4e0a\u9762\u8fd9\u6761\u89c4\u5219\uff0c\u9009\u51fau\u4f7f\u5f97\\(dist[u]=min\\{dist[x]: x\\notin S\\}\\)</li> <li>\u5c06u\u8bbe\u4e3a\u5df2\u77e5\uff08\u52a0\u5165S\uff09\uff0c\u5e76\u66f4\u65b0\u5176\u6240\u6709\u51fa\u5ea6\u70b9\u7684\u8ddd\u79bb</li> </ul> <pre><code>void Dijkstra( Table T )\n{   \n    Vertex  V, W;\n    for ( ; ; ) {\n        V = smallest unknown distance vertex;\n      if ( V == NotAVertex ) break; \n      T[ V ].Known = true;\n\n      for ( each W adjacent to V )\n                if ( !T[ W ].Known ) \n                if ( T[ V ].Dist + Cvw &lt; T[ W ].Dist ) \n          {\n                    Decrease( T[ W ].Dist to T[ V ].Dist + Cvw );\n                        T[ W ].Path = V;\n                }\n    }\n}\n</code></pre> <p>\u5177\u4f53\u5b9e\u73b0\u65b9\u6cd5\uff1a</p> <ol> <li><code>V = smallest unknown distance vertex;</code>\u6bcf\u6b21\u626b\u63cf\u6574\u4e2a\u56fe</li> </ol> <p>\\(T=O(V^2+E)\\)</p> <ol> <li><code>V = smallest unknown distance vertex;</code>\u7528heap\u6765\u5b58\u8ddd\u79bb\uff0c\u6bcf\u6b21<code>DeleteMin</code>\uff0c\u7136\u540e<code>DecreaseKey(each w adjacent to v)</code></li> </ol> <p>\\(T=O(V\\log V+E\\log V)=O(E\\log V)\\)</p> <p>\u6bcf\u6b21<code>DecreaseKey</code>\u9700\u8981\\(T=O(\\log V)\\)</p>"},{"location":"courses/FDS/FDS/#negative-edge","title":"Negative edge\uff08\u5e26\u8d1f\u6743\u6700\u77ed\u8def\uff09","text":"<pre><code>void  WeightedNegative( Table T )\n{   \n    Queue  Q;\n    Vertex  V, W;\n    Q = CreateQueue (NumVertex );  MakeEmpty( Q );\n    Enqueue( S, Q ); /* Enqueue the source vertex */\n    while ( !IsEmpty( Q ) ) {\n        V = Dequeue( Q );\n        for ( each W adjacent to V )\n                    if ( T[ V ].Dist + Cvw &lt; T[ W ].Dist ) {\n                    T[ W ].Dist = T[ V ].Dist + Cvw;\n            T[ W ].Path = V;\n            if ( W is not already in Q )\n                Enqueue( W, Q );\n                    } \n    } \n    DisposeQueue( Q ); /* free memory */\n}\n</code></pre> <p>\u200b   \\(T=O(VE)\\)</p>"},{"location":"courses/FDS/FDS/#acyclic-graphs","title":"acyclic graphs\uff08\u65e0\u73af\u6700\u77ed\u8def\uff09","text":"<p>vertex\u53ef\u4ee5\u6309\u7167topological order\u6765\u9009\u53d6\uff0c\u6240\u4ee5\u5f53\u67d0vertex\u88ab\u9009\u53d6\u65f6\uff0c\u5b83\u7684\u5165\u5ea6vertex\u90fd\u5df2\u7ecf\u88ab\u9009\u53d6\u8fc7\u4e86\uff0c\u56e0\u6b64\u5b83\u7684\u8ddd\u79bb\u4e0d\u4f1a\u4e8c\u6b21\u66f4\u65b0</p> <p>\u6b64\u65f6\\(T=O(V+E)\\)\u4e14\u4e0d\u9700\u8981heap</p>"},{"location":"courses/FDS/FDS/#aoe-network","title":"AOE network","text":"<p>\u4e00\u4e2a\u6709\u5411\u56fe<code>G</code>\uff0c<code>V(G)</code>\u5176\u4e2d\u8868\u793a\u67d0activities\u7684\u5b8c\u6210\uff0c<code>E(G)</code>\u8868\u793a\u6709\u8fc7\u7a0b\u7684activities\u7684\u6301\u7eed\u65f6\u95f4</p> <p>\u5b9e\u9645\u573a\u666f\uff1aproject scheduling\u3002\u4e00\u4e2aproject\u6709\u591a\u4e2a\u6709\u5148\u540e\u5b8c\u6210\u987a\u5e8f\u7684activities\uff0c\u6bcf\u4e2aactivities\u90fd\u9700\u8981\u82e5\u5e72\u65f6\u95f4</p> <p><code>EC[j]</code>\u8868\u793a\u6700\u65e9\u5b8c\u6210\u65f6\u523b\uff0c<code>LC[j]</code>\u8868\u793a\u6700\u665a\u5b8c\u6210\u65f6\u523b\uff0c<code>slack time</code>\u8868\u793a\u677e\u5f1b\u65f6\u95f4\uff08\u6478\u9c7c\u65f6\u95f4x\uff09</p> <p>CPM (critical path method\uff0c\u5173\u952e\u8def\u5f84)</p> <p><code>EC[w]</code>\u7684\u8ba1\u7b97\uff1a\u4ece\\(v_0\\)\u5f00\u59cb\uff0c\\(EC[w]=max\\{EC[v]+C_{v,w}:(v,w)\\in E(G)\\}\\)</p> <p><code>LC[w]</code>\u7684\u8ba1\u7b97\uff1a\u4eceDAG\u7684\u6700\u540e\u4e00\u4e2avertex\u5f00\u59cb\\(v_{end}\\)\u5f00\u59cb\u5f80\u524d\uff0c\\(LC[v]=min\\{LC[w]-C_{v,w}:(v,w)\\in E(G)\\}\\)</p> <p><code>slack time of &lt;v,w&gt;</code>\u7684\u8ba1\u7b97\uff1a\\(LC[w]-EC[v]-C_{v,w}\\)</p> <p>Critical Path:\u4e00\u6761\u5386\u7ecfproject\u9996\u4e2a\u6d3b\u52a8\u5230\u6700\u540e\u4e00\u4e2a\u6d3b\u52a8\u7684\uff0c\u5168\u7a0bslack time\u5168\u4e3a0\u7684path\u3002\u800c\u4e14\u5b83\u5fc5\u5b9a\u5b58\u5728</p> <p>AOV network\u5230AOE network\u7684\u8f6c\u6362</p> <p>\u8f6c\u6362\u540e\u66f4\u5bb9\u6613\u8ba1\u7b97\u67d0\u6d3b\u52a8\u76843\u4e2a\u65f6\u95f4\u3002\u505a\u6cd5\uff1a\u5c06vertex\u53d8\u4e3a<code>v1-&gt;edge-&gt;v2</code></p> <p></p> <p></p>"},{"location":"courses/FDS/FDS/#all-pairs-shortest-path-problem","title":"All-Pairs Shortest Path Problem","text":"<p>\u627e\u5230\u6240\u6709\\(&lt;v_i,v_j&gt;\\)\u00a0\u95f4\u7684\u6700\u77ed\u8def\u5f84\uff0c\u5219\u5c06\u6bcf\u4e2avertex\u4f5c\u4e3a\u8d77\u70b9\u8fdb\u884c\u8ba1\u7b97</p> <p>\\(T(V)=O(V^3)\\)</p>"},{"location":"courses/FDS/FDS/#network-flow-problem","title":"Network flow problem\uff08\u7f51\u7edc\u6d41\u95ee\u9898\uff09","text":"<p>\u95ee\u9898\u63cf\u8ff0\uff1a\u4e00\u4e2a\u6709\u5411\u56fe<code>G</code>\uff0c<code>V(G)</code>\u5176\u4e2d\u8868\u793a\u5730\u70b9\uff0c<code>E(G)</code>\u8868\u793a\u8be5\u7ba1\u9053\u7684\u6700\u5927\u6d41\u91cf\u3002\u7ed9\u5b9a\u8d77\u70b9<code>source</code>\uff0c\u7ec8\u70b9<code>sink</code>\uff0c\u627e\u51fa<code>source</code> \u5230 <code>sink</code>\u7684\u6700\u5927\u6d41\u91cf</p> <p>\u7b97\u6cd5\uff1a\u5efa\u7acb\u6d41\u91cf\u56feG<sub>f</sub>, \u6b8b\u5dee\u56feG<sub>r</sub>\u3002\u6bcf\u6b21\u9009\u62e9\u4e00\u6761augmenting path\uff0c\u5c06\u5176\u8def\u5f84\u548c\u6d41\u91cf\u6807\u8bb0\u5728G<sub>f</sub>\u7684edge\u4e0a\uff0c\u5e76\u76f8\u5e94\u589e\u51cfG<sub>r</sub>\u4e2d\u7684edge\u7684\u65b9\u5411\u6743\u91cd</p> <p>\u82e5augmenting path\u4efb\u610f\u53bb\uff0c\u5219\u5728worst case\u4e0b\uff0c\\(T=O(fE)\\)\uff0c\u5176\u4e2df\u4e3a\u6700\u5927\u5bb9\u91cf</p> <p>\u4f18\u5316\uff1a</p> <ul> <li>\u6bcf\u6b21\u9009\u53d6\u6700\u5927\u6d41\u91cf\u7684augmenting path\uff08\u7528modified Dijkstra\u7b97\u6cd5\uff09\uff0c\u6b64\u65f6\\(T=O(E\\log cap_{max})*O(E\\log V)\\approx O(E^2\\log V)\\)</li> <li>\u6bcf\u6b21\u9009\u53d6\u5177\u6709\u6700\u5c11edge\u7684augmenting path\uff08\u7528\u65e0\u6743\u91cd\u6700\u77ed\u8def\u5f84\u7b97\u6cd5\uff09\uff0c\u6b64\u65f6\\(T=O(E)*O(EV)=O(E^2V)\\)</li> </ul>"},{"location":"courses/FDS/FDS/#minimum-spanning-tree","title":"Minimum Spanning Tree\uff08\u6700\u5c0f\u751f\u6210\u6811\uff09","text":"<p>Definition : \u4e00\u68f5\u6811\uff0c\u5305\u542b\u4e86<code>E(G)</code>\u7684\u5b50\u96c6\u548c\u6574\u4e2a<code>V(G)</code></p> <p>\u7531\u4e8e\u662ftree\uff0c\u6240\u4ee5MST\u6ee1\u8db3<code>V=E+1</code></p> <p>\u4e24\u79cd\u7b97\u6cd5\uff1a</p> <ul> <li> <p>Prim algorithm:\u6bcf\u6b21\u627e\u79bb\u5df2\u77e5\u70b9\u8ddd\u79bb\u6700\u5c0f\u4e14\u4e0d\u6784\u6210\u73af\u7684\u70b9\uff0c\u8bbe\u4e3a\u5df2\u77e5\u70b9\uff0c\u7b97\u6cd5\u7c7b\u4f3c\u4e8eDijkstra</p> </li> <li> <p>Kruskal algorithm:\u6bcf\u6b21\u627e\u8ddd\u79bb\u6700\u5c0f\u7684\u8fb9\uff0c\u82e5\u52a0\u4e0a\u6b64\u8fb9\u540e\u4e0d\u6784\u6210\u8fde\u901a\u5b50\u56fe\u5219\u6dfb\u52a0\u6b64\u8fb9</p> </li> </ul> <p>\u7b97\u6cd5\uff1a\\(T=O(E\\log E)\\)</p> <pre><code>void Kruskal ( Graph G )\n{   \n      T = { } ;\n    while  ( T contains less than V-1 edges \n                   &amp;&amp; E is not empty ) {\n        choose a least cost edge (v, w) from E ;\n        delete (v, w) from E ;\n        if  ( (v, w) does not create a cycle in T )     \n                  add (v, w) to T ;\n        else     \n                  discard (v, w) ;\n    }\n    if  ( T contains fewer than V-1 edges )\n        Error ( \u201cNo spanning tree\u201d ) ;\n}\n</code></pre>"},{"location":"courses/FDS/FDS/#connected-component-and-articulat-point-in-undirected-graph","title":"Connected component and Articulat point in Undirected Graph\uff08\u65e0\u5411\u56fe\u4e2d\u7684\u8fde\u63a5\u5206\u91cf\u548c\u5173\u8282\u70b9\uff09","text":"<p>DFS\uff08\u6df1\u5ea6\u4f18\u5148\u7b97\u6cd5\uff09\uff1a</p> <pre><code>void DFS ( Vertex V )  /* this is only a template */\n{   visited[ V ] = true;  /* mark this vertex to avoid cycles */\n    for ( each W adjacent to V )\n        if ( !visited[ W ] )\n    DFS( W );\n} /* T = O( |E| + |V| ) as long as adjacency lists are used */\n</code></pre> <p>articulation point\uff1a\u53bb\u6389\u540e\u4f1a\u5f71\u54cd\u8fde\u901a\u56fe\u7684\u8fde\u901a\u6027\u7684vertex</p> <p>\u7b49\u4ef7\u547d\u9898\uff1a\u79fb\u53bb\u8be5\u70b9\u540e\uff0c\u56feG\u81f3\u5c11\u67092\u4e2aconnected components</p> <p>Biconnectivity\uff1a\u56fe\u7684\u5c5e\u6027\uff0c\u82e5\u79fb\u53bb\u56fe\u4e2d\u4efb\u4e00\u70b9\u90fd\u4e0d\u4f1a\u5f71\u54cd\u56fe\u7684\u8fde\u63a5\u6027\uff0c\u5219\u8be5\u56fe\u662fbiconnected</p> <p>biconnected component\uff1a\u6700\u5927\u7684biconnected\u5b50\u56fe</p> <p>\u5bf9\u4efb\u610f\u4e00\u6761\u8fb9e\uff0ce\u4e0d\u53ef\u80fd\u88ab\u4e24\u4e2abiconnected component\u5171\u4eab\uff0c\u56e0\u6b64E(G)\u88abbiconnected component\u5206\u6210\u82e5\u5e72\u4efd</p> <p>\u7b49\u4ef7\u547d\u9898\uff1a\u65e0\u5411\u56feG\u662f\u8054\u901a\u7684\u4e14\u6ca1\u6709articulation point\u7684</p> <p>Tarjan\u7b97\u6cd5\uff1a\u5bfb\u627e\u6240\u6709\u7684articulate points\u3002\u9996\u5148\u9009\u53d6\u4e00\u4e2a\u70b9\uff0c\u7528DFS\u904d\u5386\uff08\u4e0d\u7b97backedge\uff09\uff0c\u5e76\u6309preorder\u6765\u6807\u53f7<code>num</code>\uff0c\u5e76\u751f\u6210depth first spannig tree\u3002\u5bf9\u4e8e\u6b64spannign tree\uff0c\u82e5u\u662fv\u7684\u7956\u5148\uff0c\u5219<code>num(u) &lt; num(v)</code></p> <p>\u5b9a\u4e49<code>Low( vertex u )</code></p> <pre><code>Low(u) = min{\n  Num(u),\n  min{Low(w), w is a child of u},\n  min{w, (u,w) is a backedge}\n}\n</code></pre> <p></p> <p></p> <p></p> <p>Euler circle</p> <p></p>"},{"location":"courses/FDS/FDS/#find-strongly-connected-component","title":"Find Strongly connected component\uff08\u627e\u5f3a\u8fde\u901a\u5206\u91cf\uff09","text":"<p>\u56de\u987e\u4e00\u4e0bstrongly connected component\u7684\u5b9a\u4e49\uff1a\u5728digraph\u4e2d\u7684\u4e00\u4e2a\u5b50\u56fe\uff0c\u4f7f\u5f97\u5b50\u56fe\u4e2d\u7684\u4efb\u4e24\u70b9\u4e4b\u95f4\u90fd\u6709\u8def\u5f84\u4e92\u8fbe\u3002</p> <p>\u7b97\u6cd5\uff1a\u6267\u884c\u4e24\u6b21DFS\uff08\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\uff09\uff0c</p> <p>\uff081\uff09\u7b2c\u4e00\u6b21\u6309postorder traversal\u7684\u987a\u5e8f\u6807\u53f7</p> <p>\uff082\uff09\u7b2c\u4e8c\u6b21\u5c06\u539f\u56feG\u6240\u6709edge\u8fdb\u884creverse\uff0c\u5f97\u5230G<sub>r</sub>\uff0c\u518d\u5bf9\u6309\u7167\uff081\uff09\u4e2d\u7684traversal order\u4ece\u5927\u5230\u5c0f\u5bf9G<sub>r</sub>\u8fdb\u884cDFS\uff0c\u5f62\u6210\u7684spanning forrest\u4e2d\uff0c\u6bcf\u4e00\u68f5spanning tree\u90fd\u662f\u4e00\u4e2astrongly connected component\uff0c\u4e5f\u5373\u6bcf\u6b21DFS recursion\u540e\uff0c\u6b64\u6b21\u904d\u5386\u8fc7\u7684\u70b9\u90fd\u5f62\u6210\u4e00\u4e2a\u5f3a\u8fde\u63a5\u56fe</p> <p>\u7b97\u6cd5\u53ef\u884c\u6027\u8bc1\u660e\uff1a</p> <p>\u9996\u5148\uff0c\u82e5\u8282\u70b9v,w\u4e92\u901a\uff0c\u5219v,w\u5fc5\u5728G<sub>r</sub>\u540c\u4e00spanning tree\u4e2d\uff1b</p> <p>\u5176\u6b21\uff0c\u82e5v\u5728G<sub>r</sub>\u7684\u540c\u4e00spanning tree\u4e2d\uff0cx\u4e3a\u8be5\u6811\u7684root\uff0c\u5219\u7531\u4e8e\u5728G<sub>r</sub>\u4e2d\u6709<code>x-&gt;v</code>\u7684\u8def\u5f84\uff0c\u6240\u4ee5\u5728\u539f\u56feG\u4e2d\u6709<code>v-&gt;x</code>\u7684\u8def\u5f84\uff1b\u53c8\u7531\u4e8ex\u7684postoder traversal\u6807\u53f7\u5927\u4e8ev\uff0c\u8bf4\u660e\u5728\uff081\uff09DFS\u65f6\u5148visit\u70b9v\uff0c\u518dvisit\u70b9x\uff0c\u5219x\u5728\uff081\uff09\u4e2d\u5fc5\u5b9a\u662fv\u7684ancestor\uff08\u7956\u5148\uff09\uff0c\u5426\u5219\u5e94\u8be5\u662f\u5148visit\u70b9x\uff0c\u540evisit\u70b9v\uff0c\u56e0\u6b64\u5fc5\u7136\u6709<code>x-&gt;v</code>\u7684\u8def\uff1b\u65e2\u7136\u5bf9G<sub>r</sub>\u4e2d\u7684\u4efb\u4e00\u68f5\u751f\u6210\u6811\uff0c\u5176\u4e2d\u7684\u4efb\u610f\u4e24\u70b9\u4e0eroot\u4e92\u901a\uff0c\u90a3\u4e48\u8fd9\u4e24\u70b9\u4e5f\u4e92\u901a\u3002</p> <p>\u7efc\u4e0a\uff0cG<sub>r</sub>\u4e2d\u7684\u4e00\u68f5DFS\u751f\u6210\u6811\u5c31\u662f\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf</p> <p>Ex:</p> <p></p> <p></p> <p></p>"},{"location":"courses/FDS/FDS/#_2","title":"\u6392\u5e8f\u7b97\u6cd5","text":""},{"location":"courses/FDS/FDS/#insertion-sort","title":"Insertion sort\uff08\u63d2\u5165\u6392\u5e8f\uff09","text":"<p>\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\u6d88\u9664\u4e00\u5bf9\u9006\u5e8f\u5bf9\uff0c\u5047\u8bbe\u539f\u6570\u7ec4\u6709i\u5bf9\u9006\u5e8f\u5bf9\uff0c\u5219\\(T(n)=O(n+i)\\)</p> <p>best case\u5373\u5df2\u7ecf\u6709\u5e8f\u7684\u60c5\u51b5\uff0cworst case\u5373\u5012\u5e8f\u60c5\u51b5\uff0caverage time\u5373\u4e24\u8005\u65f6\u95f4\u7684\u5e73\u5747\\(T(n)=O(n^2)\\)\uff0c\u4e5f\u5c31\u662fqudratic time</p>"},{"location":"courses/FDS/FDS/#shell-sort","title":"Shell sort\uff08\u5e0c\u5c14\u6392\u5e8f\uff09","text":"<p>\u4ea4\u6362\u975e\u76f8\u90bb\u7684\u5143\u7d20\uff0c\u76f8\u8f83\u4e8e\u4ea4\u6362\u76f8\u90bb\u5143\u7d20\u6765\u8bf4\uff0c\u4ea4\u6362\u4e00\u6b21\u53ef\u4ee5\u6d88\u9664\u591a\u5bf9\u9006\u5e8f\u5bf9\u3002</p> <p>\u57fa\u672c\u601d\u8def\uff1a\u7528\u4e00\u7ec4\u9012\u589e\u7684\u589e\u91cf\u5e8f\u5217\\(1=h_1&lt;h_2&lt;...&lt;h_t\\)\uff0c\u7b2c\u4e00\u6b21\u6bd4\u8f83\\(a[i]\\leq a[i+h_t]\\)\u7684\u5b50\u6570\u7ec4\uff0c\u5f62\u6210\\(h_t\\)-sorted file\uff0c\u76f8\u9694\\(h_t\\)\u4f4d\u7f6e\u7684\u5143\u7d20\u5f62\u6210\u6709\u5e8f\uff1b\u7b2c\u4e8c\u6b21\u6bd4\u8f83\\(a[i]\\leq a[i+h_{t-1}]\\)\u7684\u5b50\u6570\u7ec4......\u6700\u540e\u4e00\u904d\u6bd4\u8f83\u76f8\u90bb\u5143\u7d20\uff0c\u5373\u63d2\u6392\uff0c\u4fdd\u8bc1\u6700\u7ec8\u7ed3\u679c\u6b63\u786e\u3002</p> <p>\u4e00\u4e2a\u6027\u8d28\uff1a\\(h_t\\)-sorted file\u5728\u7ecf\u8fc7\\(h_{t-1}\\)-sort\u540e\u4f9d\u7136\u4fdd\u6301\\(h_t\\)-sorted</p> <p>Shell sort\u5982\u4f55\u9009\u62e9increment sequence\u662f\u4e00\u4e2a\u503c\u5f97\u63a2\u8ba8\u7684\u7b56\u7565\uff0c\u597d\u7684sequence\u53ef\u4ee5\u5927\u5927\u63d0\u9ad8\u6548\u7387\uff0c\u6700\u4e00\u822c\u7684\u60f3\u6cd5\u662f N/2, N/4, N/8, ... , 1\u6765\u9009\u53d6</p> <pre><code>void Shellsort( ElementType A[ ], int N ) \n{ \n      int  i, j, Increment; \n      ElementType  Tmp; \n      for ( Increment = N / 2; Increment &gt; 0; Increment /= 2 )  \n        /*h sequence */\n        for ( i = Increment; i &lt; N; i++ ) { /* insertion sort */\n          Tmp = A[ i ]; \n          for ( j = i; j &gt;= Increment; j - = Increment ) \n        if( Tmp &lt; A[ j - Increment ] ) \n              A[ j ] = A[ j - Increment ]; \n        else \n              break; \n        A[ j ] = Tmp; \n    } /* end for-I and for-Increment loops */\n}\n</code></pre> <p>\u4f46\u8fd9\u4e2a\u5e8f\u5217\u5e76\u4e0d\u4e92\u8d28\uff0c\u6240\u4ee5\u8f83\u5c0f\u7684\u589e\u91cf\u6709\u53ef\u80fd\u6ca1\u6709\u7528\uff0c\u5728\u6700\u574f\u7684\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u6700\u540e\u4e00\u904d\u63d2\u6392\u7684\u65f6\u5019\u624d\u771f\u6b63\u6709\u6548\u7684\u6392\u5e8f\uff0c\u5bfc\u81f4\u548c\u63d2\u6392\u6ca1\u6709\u533a\u522b\u3002\u5982\uff1a</p> <p></p> <p>\u7528Hibbard's Increment Sequence\uff0c\u53ef\u4ee5\u663e\u8457\u4f18\u5316\uff0c\u5373\\(h_k=2^k-1\\)\uff0c\u7ecf\u8fc7\u7406\u8bba\u8bc1\u660e\uff0c\u6b64\u65f6Shellsort\u5728\u6700\u574f\u60c5\u51b5\u4e0b\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(T(n)=O(n^{3/2})\\)\uff1b\u800c\u6700\u597d\u7684\u60c5\u51b5\u4e0b\uff0c\u8fd8\u662f\\(O(n)\\)\uff0c\u6240\u4ee5\u5e73\u5747\u590d\u6742\u5ea6\u4e3a\\(O(n^{5/4})\\)</p> <p>\u7528Sedgewick's best Sequence\uff0c<code>{1, 5, 19, 41, 109, ...}</code>\uff0c\u516c\u5f0f\u4e3a\uff1a\\(9\\times4^i-9\\times2^i+1\\)   or    \\(4^i-3\\times2^i+1\\)\uff0c\u6b64\u65f6\u7684Shellsort\u6700\u574f\u60c5\u51b5\\(T(n)=O(n^{4/3})\\)\uff0c\u800c\u5e73\u5747\u5219\u662f\\(O(n^{7/6})\\)</p> <p>\u603b\u7ed3\uff1a\u5e0c\u5c14\u6392\u5e8f\u7b97\u6cd5\u7b80\u5355\uff0c\u4f46\u5206\u6790\u5f88\u590d\u6742\u3002\u9002\u7528\u4e8e\u8f83\u5927\u89c4\u6a21\u7684\u6570\u636e\u6392\u5e8f\u3002</p>"},{"location":"courses/FDS/FDS/#heap-sort","title":"Heap sort\uff08\u5806\u6392\u56de\u987e\uff09","text":"<p>\u5806\u6392\u7684\u5efa\u5806\\(T(n)=O(n)\\)\uff0cn\u6b21<code>deletemin</code>\u9700\u8981\\(T(n)=O(n\\log n)\\)\uff0c\u6240\u4ee5\u603b\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n\\log n)\\)</p> <p>\u5982\u679c\u7528Heap ADT\u7684\u8bdd\uff0c\u7a7a\u95f4\u590d\u6742\u5ea6\\(S(n)=O(n)\\)\uff0c\u6240\u4ee5\u4e3a\u4e86\u8282\u7701\u7a7a\u95f4\uff0c\u76f4\u63a5\u5728\u539f\u6570\u7ec4\u4e0a\u8fdb\u884c\u5806\u6392\u64cd\u4f5c\u3002\u4e0e\u4e4b\u524d\u8bb2\u7684<code>DeleteMin</code>\u4e0d\u540c\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u6bcf\u6b21<code>DeleteMax</code>\uff0c\u7136\u540e\u653e\u5230\u672b\u5c3e\uff1b\u6b64\u5916\u7531\u4e8e\u8fd9\u91cc\u7684index\u4ece0\u5230n-1\u7684\uff0c\u6240\u4ee5<code>percolateDown</code>\u4e5f\u4f1a\u6709\u6240\u4e0d\u540c</p> <pre><code>void Heapsort( ElementType A[ ], int N ) \n{  int i; \n    for ( i = N / 2; i &gt;= 0; i - - ) /* BuildHeap */ \n        PercDown( A, i, N ); \n    for ( i = N - 1; i &gt; 0; i - - ) { \n        Swap( &amp;A[ 0 ], &amp;A[ i ] ); /* DeleteMax */ \n        PercDown( A, 0, i ); \n    } \n}\n</code></pre>"},{"location":"courses/FDS/FDS/#mergesort","title":"Mergesort\uff08\u5f52\u5e76\u6392\u5e8f\uff09","text":"<p>divide and conquer\uff0c\u5206\u800c\u6cbb\u4e4b\u3002mergesort\u5206\u4e3a2\u4e2a\u9636\u6bb5\uff1a\u5c06\u539f\u5f85\u6392\u5e8f\u5217\u7b49\u5206\uff0c\u5206\u522b\u6392\u5e8f\uff0c\u518d\u5f52\u5e76\u3002</p> <p>\u5176\u4e2d\uff0c\u5f52\u5e76\u64cd\u4f5c\u9700\u8981\u989d\u5916\u5f00\u4e00\u4e2atemp\u6570\u7ec4\uff0c\u75283\u4e2a\u6307\u9488\u5206\u522b\u6307\u5411\u8fd93\u4e2a\u6570\u7ec4\uff0c\u904d\u5386\u5b8c\u540etemp\u6570\u7ec4\u5373\u4e3a\u6709\u5e8f\u5e8f\u5217\uff0c\u518d\u4ecetemp\u6570\u7ec4copy\u56de\u539f\u6570\u7ec4\uff0c\u6b64\u6b65\u9aa4\\(T(n)=O(n)\\)</p> <p>\u603b\u65f6\u95f4\u590d\u6742\u5ea6\uff1a $$ T(n)=2T(n/2)+O(n)\\ =&gt;\\frac{T(n)}{n}=\\frac{T(n/2)}{n/2}+O(1)\\ =&gt;T(n)=O(n\\log n) $$ \u7b97\u6cd5\u4e2d\u6709\u4e09\u4e2a\u51fd\u6570: <code>MSort</code> <code>Mergesort</code> <code>Merge</code></p> <pre><code>void MSort( ElementType A[ ], ElementType TmpArray[ ], \n        int Left, int Right ) \n{   int  Center; \n    if ( Left &lt; Right ) {  /* if there are elements to be sorted */\n      Center = ( Left + Right ) / 2; \n      MSort( A, TmpArray, Left, Center );   /* T( N / 2 ) */\n      MSort( A, TmpArray, Center + 1, Right );  /* T( N / 2 ) */\n            Merge( A, TmpArray, Left, Center + 1, Right );  /* O( N ) */\n    } \n} \n\nvoid Mergesort( ElementType A[ ], int N ) \n{   ElementType  *TmpArray;  /* need O(N) extra space */\n    TmpArray = malloc( N * sizeof( ElementType ) ); \n    if ( TmpArray != NULL ) { \n            MSort( A, TmpArray, 0, N - 1 ); \n            free( TmpArray ); \n    } \n    else  FatalError( \"No space for tmp array!!!\" ); \n}\n\n/* Lpos = start of left half, Rpos = start of right half */ \nvoid Merge( ElementType A[ ], ElementType TmpArray[ ], \n           int Lpos, int Rpos, int RightEnd ) \n{   int  i, LeftEnd, NumElements, TmpPos; \n    LeftEnd = Rpos - 1; \n    TmpPos = Lpos; \n    NumElements = RightEnd - Lpos + 1; \n    while( Lpos &lt;= LeftEnd &amp;&amp; Rpos &lt;= RightEnd ) /* main loop */ \n        if ( A[ Lpos ] &lt;= A[ Rpos ] ) \n                    TmpArray[ TmpPos++ ] = A[ Lpos++ ]; \n        else \n                    TmpArray[ TmpPos++ ] = A[ Rpos++ ]; \n\n    while( Lpos &lt;= LeftEnd ) /* Copy rest of first half */ \n        TmpArray[ TmpPos++ ] = A[ Lpos++ ]; \n    while( Rpos &lt;= RightEnd ) /* Copy rest of second half */ \n        TmpArray[ TmpPos++ ] = A[ Rpos++ ]; \n    for( i = 0; i &lt; NumElements; i++, RightEnd - - ) \n         /* Copy TmpArray back */ \n        A[ RightEnd ] = TmpArray[ RightEnd ]; \n}\n</code></pre> <p>\u6ce8\u610f\u5728Msort\u4e2d\uff0c\u5982\u679c<code>TmpArray</code>\u5f00\u6210\u672c\u5730\u6570\u7ec4\uff0c\u90a3\u4e48\u4efb\u4f55\u65f6\u523b\u90fd\u6709\\(\\log n\\)\u4e2a\u672c\u5730\u6570\u7ec4\u662factive\u7684\uff0c\u7a7a\u95f4\u9700\u6c42\u5927\uff1b\u52a8\u6001\u5206\u914d<code>malloc</code> <code>free</code>\u4f1a\u66f4\u597d</p> <p>mergesort\u4e5f\u53ef\u4ee5\u5199\u6210iterative version</p> <p>\u603b\u7ed3\uff1amergesort\u7531\u4e8e\u9700\u8981\u5f00\u989d\u5916\u6570\u7ec4\uff0c\u4e0d\u9002\u7528\u4e8e\u6570\u636e\u89c4\u6a21\u5f88\u5927\u7684\u60c5\u51b5\u3002\u4e00\u822c\u5728internal sorting\u65f6\u4e0d\u4f1a\u91c7\u7528\uff0c\u800c\u5728extrnal sorting\u65f6\u4f1a\u7528\u5230\u3002</p>"},{"location":"courses/FDS/FDS/#_3","title":"\u6392\u5e8f\u7b97\u6cd5\u7a33\u5b9a\u6027","text":"<p>\u6307\u4e00\u79cd\u6392\u5e8f\u7b97\u6cd5\u5b8c\u6210\u540e\uff0c\u5f85\u6392\u6570\u7ec4\u4e2d\u76f8\u7b49\u5143\u7d20\u7684\u76f8\u5bf9\u4f4d\u7f6e\u662f\u5426\u6539\u53d8\u3002</p> <p>\u7a33\u5b9a\u7b97\u6cd5\uff1a\u76f8\u5bf9\u4f4d\u7f6e\u4e0d\u53d8</p> <p>\u4e0d\u7a33\u5b9a\u7b97\u6cd5\uff1a\u76f8\u5bf9\u4f4d\u7f6e\u4f1a\u53d8</p>"},{"location":"courses/final_review/","title":"Index","text":"<ul> <li> <p>\u64cd\u4f5c\u7cfb\u7edf</p> </li> <li> <p>\u8ba1\u7b97\u673a\u7f51\u7edc</p> </li> <li> <p>\u4f53\u7cfb\u7ed3\u6784</p> </li> <li> <p>\u8ba1\u7b97\u7406\u8bba</p> </li> </ul>"},{"location":"courses/final_review/arch/","title":"\u4f53\u7cfb\u7ed3\u6784","text":"<p>\u8003\u8bd5\u65f6\u95f4\uff1a01\u670802\u65e5(08:00-10:00)</p> <p>\u8d44\u6e90</p> <ul> <li> <p>\u5386\u5e74\u537723-24</p> </li> <li> <p>\u5386\u5e74\u537722-23</p> </li> </ul> \u51ef\u54e5\u7684\u89e3\u91ca <p>differences among dynamic scheduling algorithms: 1. Scoreboarding: IF Issue Read-Operands Ex MEM WB in comparison with traditional pipeline, still in-order issue, support dynamic scheduling (both out-of-order execution and out-of-order completion); does NOT support register renaming, therefore, [lec07-P114] even if an instruction has been issued to a function unit (without structural hazard in Issue), the instruction should wait there; UNTIL NO DATA HAZARD (including all kinds of data hazards: RAW, WAE, WAR) can the function unit read operands for the instruction;</p> <ol> <li> <p>Tomasulo's Algorithm in-order issue, still support out-of-order execution and out-of-order completion; in comparison with Scoreboarding, [lec07-P146] ELIMINATE STALLS for WAW and WAR hazards through Register Renaming; however, still cannot deal with branch instructions with prediction: [lec07-P186] no instr is allowed to execute until a branch that preceds the instruction in program order has completed;</p> </li> <li> <p>Tomasulo's Algorithm with Hardware Speculation speculate on branch outcome; issue and execute instructions according to the prediction result if possible; commit results till prediction is determined; flush/undo results/effects if prediction is incorrect; in orther words, even if an instruction is executed and generated results, its results still cannot take effect immediately, in case any of its depedent branch instruction turns out to follow another execution path; with sufficient status and hardware logic, this can be determined in advance; however, the presented version on textbook does not track such status, so does not quite know about whether an instruction relates to a pending branch instruction or not, then the simple design policy is to treat all instructions after a branch instruction (in terms of program order) as ones depending on the branch outcome; reorder-buffer exactly follows this policy, and flushes all instructions' info next to a branch instruction once the branch is determined to have followed an incorrect prediction; this further implies that regardless when an instruction has executed and generated results, they need to strictly follow the program order to commit their results. therefore: IN-ORDER issue, out-of-order execution, IN-ORDER COMMIT</p> </li> </ol> <p>further discussions: out-of-order instruction issue? same as many of our discussions, if sufficient hardware resources (and related design policies) are provided, it is also possible to achieve out-of-order instruction issue; for example: besides the traditional single FIFO instruction queue, functional units, reservation stations, etc, if datapath introduces extra components to temporarily hold instructions that cannot be issued/executed in pipelines we discussed, scheduler can simply put such instruction to this extra component, then the next instruction becomes instruction-queue head and might be issued to a function-unit/reservation-station; apparently, this extra component acts like another instruction queue, please do not confuse this simply with hardware with multiple instruction queues; the latter design uses multiple instruction queues, OS (likely with the help of compiler) decides which set of instructions of a program are put to which queue, but inside a specific queue, may still follow in-order issue.</p> <ol> <li> <p>Issue\u2014If a functional unit for the instruction is free and no other active instruction has the same destination register, the scoreboard issues the instruction to the functional unit and updates its internal data structure. This step replaces a portion of the ID step in the RISC V pipeline. By ensuring that no other active functional unit wants to write its result into the destination register, we guaran- tee that WAW hazards cannot be present. If a structural or WAW hazard exists, then the instruction issue stalls, and no further instructions will issue until these hazards are cleared. When the issue stage stalls, it causes the buffer between instruction fetch and issue to fill; if the buffer is a single entry, instruction fetch stalls immediately. If the buffer is a queue with multiple instructions, it stalls when the queue fills.</p> </li> <li> <p>Read operands\u2014The scoreboard monitors the availability of the source oper- ands. A source operand is available if no earlier issued active instruction is going to write it. When the source operands are available, the scoreboard tells the functional unit to proceed to read the operands from the registers and begin execution. The scoreboard resolves RAW hazards dynamically in this step, and instructions may be sent into execution out of order. This step, together with issue, completes the function of the ID step in the simple RISC V pipeline.</p> </li> <li> <p>Execution\u2014The functional unit begins execution upon receiving operands. When the result is ready, it notifies the scoreboard that it has completed execu- tion. This step replaces the EX step in the RISC V pipeline and takes multiple cycles in the RISC V FP pipeline.</p> </li> <li> <p>Write result\u2014Once the scoreboard is aware that the functional unit has completed execution, the scoreboard checks for WAR hazards and stalls the completing instruction, if necessary.</p> </li> </ol>"},{"location":"courses/final_review/network/","title":"\u8ba1\u7b97\u673a\u7f51\u7edc","text":"<p>\u8003\u8bd5\u65f6\u95f4\uff1a01\u670811\u65e5(10:30-12:30)</p> <p>\u52a9\u6559\u7684\u5efa\u8bae</p> <p>\u8ddd\u79bb\u8003\u8bd5\u8fd8\u67091\u4e2a\u6708\u65f6\u95f4\u4e86\uff0c\u5efa\u8bae\u540c\u5b66\u4eec\u63d0\u65e9\u5f00\u59cb\u51c6\u5907\uff0c\u4e5f\u7ed9\u5176\u4ed6\u8bfe\u7a0b\u7684\u590d\u4e60\u7559\u51fa\u5145\u5206\u65f6\u95f4\u56e0\u4e3a\u6211\u4eec\u7684\u8bfe\u7a0b\u5185\u5bb9\u91cf\u6bd4\u8f83\u5927+\u95ed\u5377\uff0c\u8bb0\u5fc6\u91cf\u4f1a\u6709\u4e00\u70b9\u5927\uff0c\u540c\u5b66\u4eec\u6700\u597d\u8fd8\u662f\u8981\u5bf9\u8bfe\u7a0b\u5185\u5bb9\u5145\u5206\u7406\u89e3\uff0c\u5bf9\u5404\u79cd\u534f\u8bae\u7684\u529f\u80fd/\u76ee\u7684\u4e86\u89e3\u6e05\u695a\u540e\u4e5f\u4f1a\u66f4\u5bb9\u6613\u5feb\u901f\u8bb0\u4f4f\u76f8\u5e94\u7684\u77e5\u8bc6\u70b9\u8fd9\u91cc\u6574\u7406\u4e86\u4e00\u4e9b\u5b66\u957f/\u540c\u5b66\u5206\u4eab\u7684\u8d44\u6e90\uff0c\u5e0c\u671b\u5bf9\u5927\u5bb6\u5b66\u4e60\u548c\u590d\u4e60\u80fd\u6709\u4e00\u5b9a\u7684\u5e2e\u52a9\ua537 25\u5e74\u738b\u9053\u8ba1\u7b97\u673a\u7f51\u7edc\uff1a\u548c\u6211\u4eec\u7684\u8bfe\u7a0b/\u9898\u578b\u6bd4\u8f83\u63a5\u8fd1\uff0c\u540c\u5b66\u4eec\u53ef\u4ee5\u505a\u505a\u738b\u9053\u7684\u9898\u76ee\u6d4b\u8bd5\u77e5\u8bc6\u70b9\u638c\u63e1\u60c5\u51b5\u9700\u8981\u6ce8\u610f\u7684\u662f\u738b\u9053\u6ca1\u6709\u7f51\u7edc\u5b89\u5168\u7684\u90e8\u5206\uff0c\u800c\u8fd9\u90e8\u5206\u5728\u671f\u672b\u8003\u8bd5\u5360\u4e00\u5b9a\u7684\u6bd4\u91cd\uff0c\u4e00\u5b9a\u4e0d\u8981\u53ea\u62b1\u7740\u738b\u9053\u590d\u4e60\u800c\u5ffd\u7565\u4e86\u8fd9\u4e9b\u5185\u5bb9\u6211\u4e2a\u4eba\u7ecf\u9a8c\u662f\u5feb\u901f\u5237\u5b8c\u9700\u89814-5\u5929\uff0c\u5982\u679c\u611f\u89c9\u81ea\u5df1\u638c\u63e1\u4e0d\u592a\u597d\u53ef\u80fd\u9700\u8981\u591a\u7559\u4e00\u70b9\u65f6\u95f4\uff0c\u8fd9\u6bb5\u65f6\u95f4\u6211\u4e5f\u4f1a\u518d\u5237\u4e00\u4e0b25\u5e74\u7684\u738b\u9053[\u5fd9\u75af\u4e86]\ua537 \u7b14\u8bb0</p> <p>\u4e00\u4f4d\u5f88\u5389\u5bb3\u7684\u5b66\u957f\u6574\u7406\u7684\u8bfe\u7a0b\u7b14\u8bb0\u54b8\u9c7c\u6684\u5b66\u957f\u7684\u8ba1\u7b97\u673a\u7f51\u7edc\u601d\u7ef4\u5bfc\u56fe\u5f88\u6e05\u6670\u5730\u68b3\u7406\u4e86\u8bfe\u7a0b\u76f8\u5173\u7684\u77e5\u8bc6\u70b9\uff0c\u6587\u6863\u4e2d\u8fd8\u6709\u5386\u6b21\u8f85\u5b66\u7684\u56de\u653e</p> <p>\u6c42\u662f\u6f6e-\u8bfe\u7a0b\u8d44\u6e90\u5171\u4eab\u8ba1\u5212</p> <p>100\u9898\u6bd4\u8f83\u6709\u7528\ua537 \u5fae\u4fe1\u7fa4\uff1a\u8ba1\u7f51&amp;\u64cd\u4f5c\u7cfb\u7edf\u6025\u6025\u6025\u5b66\u9662\u5185\u540c\u5b66\u4eec\u81ea\u53d1\u7ec4\u7ec7\u7684\u7b54\u7591\u4e92\u52a9\u7fa4\uff0c\u671f\u672b\u590d\u4e60\u65f6\u5019\u8ba8\u8bba\u4f1a\u6bd4\u8f83\u65b9\u4fbf\uff0c\u56e0\u4e3a\u76ee\u524d\u8d85\u8fc7200\u4eba\u52a0\u5165\u4e86\uff0c\u5982\u679c\u6709\u540c\u5b66\u60f3\u8981\u52a0\u7fa4\u9700\u8981\u627e\u5df2\u7ecf\u52a0\u7fa4\u7684\u540c\u5b66\u9080\u8bf7/\u627e\u6211\u62c9\u4f60\u5165\u7fa4\u540c\u5b66\u4eec\u590d\u4e60\u4e2d\u5bf9\u77e5\u8bc6\u70b9/\u9898\u76ee\u6709\u7591\u95ee\u53ef\u4ee5\u968f\u65f6\u9489\u9489\u63d0\u95ee/\u7b54\u7591\u7fa4\u63d0\u95ee\uff08\u6211\u4e5f\u5728\u7fa4\u91cc[\u6d41\u9f3b\u8840]\uff09\uff0c\u6211\u4e5f\u4f1a\u628a\u5927\u5bb6\u9047\u5230\u6bd4\u8f83\u591a\u7684\u5171\u6027\u95ee\u9898\u68b3\u7406\u51fa\u6765\uff0c\u5927\u5bb6\u63d0\u95ee\u65f6\u63a8\u8350\u5e26\u4e0a\u6765\u6e90\uff08\u6bd4\u5982\u67d0\u4efd\u8d44\u6599\u7684\u67d0\u9875\u67d0\u9898\uff09\uff0c\u8fd9\u6837\u6548\u7387\u4f1a\u9ad8\u4e00\u70b9\u795d\u5927\u5bb6\u671f\u672b\u590d\u4e60\u987a\u5229~</p> <p>MAC layer requires each frame at least 64bytes</p> <p>root bridge: mac\u5730\u5740\u6700\u5c0f\u7684\u4ea4\u6362\u673a</p> <pre><code>vlan 2 # create vlan 2\nswitchport mode access\nswitchport access vlan 2 # switch to vlan 2\n\n# create sub interface\ninterface f0/0.1\nip add ... ...\nencapsulation dot1q 1 # config subnet to vlan 1\ninterface f0/0.2\nip add ... ...\nencapsulation dot1q 1 # config subnet to vlan 1\n\ninterface f0/0\nswitchport mode trunk # trunk mode for 2 subnets in different subnets \nno shutdown\n</code></pre> <pre><code>conf t\nip routing # upgrade 3-layer switch to router\n</code></pre>"},{"location":"courses/final_review/network/#rsa","title":"RSA","text":"<p>\u6b27\u62c9\u51fd\u6570 \\(\\Phi(N)\\) \uff1a\u5c0f\u4e8e \\(N\\) \u4e14\u4e0e \\(N\\) \u4e92\u8d28\u7684\u6570\u7684\u4e2a\u6570</p> <p>\u6027\u8d28\uff1a 1. \\(\\Phi(a\\times b)=\\Phi(a)\\times\\Phi(b)\\) 2. \\(m^{\\Phi(n)}\\equiv 1 \\pmod{n}, \\ if\\ (m,n)=1\\)</p> <p>The \\(\\Phi\\) of any prime \\(p\\) is \\(p-1\\)</p> <p>\\(\\Phi(N)=\\Phi(P_1)\\times\\Phi(P_2)=(P_1-1)\\times(P_2-1)\\)</p> <p>public key: n,e private key: d</p>"},{"location":"courses/final_review/network/#digital-signature","title":"Digital Signature","text":"<ol> <li>\u692d\u5706\u66f2\u7ebf\u53c2\u6570\u65b9\u7a0b\uff1a\\(y^2=x^3+ax+b\\)</li> </ol>"},{"location":"courses/final_review/network/#challenge-response","title":"Challenge response","text":""},{"location":"courses/final_review/network/#authentication-based-on-a-shared-secret-key","title":"Authentication based on a shared secret key","text":""},{"location":"courses/final_review/network/#dns-spoofing","title":"DNS Spoofing","text":"<p>\u5728DNS server\u63d2\u5165\u865a\u5047\u7684IP\u5730\u5740\uff0c\u8ba9\u5ba2\u6237\u7aef\u8bbf\u95ee\u865a\u5047\u7684IP\u5730\u5740\uff0c\u4ece\u800c\u83b7\u53d6\u5230\u4fe1\u606f</p>"},{"location":"courses/final_review/network/#transport-layer","title":"transport layer","text":"<ul> <li>congestion(sending) window size:      \u80fd\u53d1\u9001\u7684\u6700\u5927\u6570\u636e\u5305\uff0c\u4e0d\u88ab\u5305\u542b\u5728tcp header\u4e2d</li> <li>flow control(receving) window size:     \u80fd\u63a5\u6536\u7684\u6700\u5927\u6570\u636e\u5305\uff0c\u88ab\u5305\u542b\u5728tcp header\u4e2d</li> </ul>"},{"location":"courses/final_review/network/#tcp-reno","title":"TCP Reno","text":"<ol> <li>slow start\u6761\u4ef6: <ul> <li>\u521d\u59cb\u5316</li> <li>timeout occurs</li> <li>\u4e0d\u5305\u62ecpacket loss</li> </ul> </li> <li>slow start\u63aa\u65bd:  <ul> <li>\u5c06slow start threshold\u8bbe\u4e3a\u5f53\u524d\u7684\u4e00\u534a\uff0ccongestion window size\u8bbe\u4e3a1</li> <li>slow start threshold\u4e4b\u524d\uff0c\u6307\u6570\u589e\u957f(exponential increase)</li> <li>slow start threshold\u4e4b\u540e\uff0c\u7ebf\u6027\u589e\u957f(additive increase)</li> </ul> </li> </ol>"},{"location":"courses/final_review/network/#tcp-tahoe","title":"TCP Tahoe","text":""},{"location":"courses/final_review/network/#network-layer","title":"network layer","text":""},{"location":"courses/final_review/network/#ospf-protocol","title":"OSPF protocol","text":"<p>virtual link: \u65e0\u6cd5\u4e0e\u4e3b\u5e72\u7f51area0\u76f4\u8fde\u7684\u533a\u57df\uff0c\u4f46\u53ef\u4ee5\u4e0earea0\u76f4\u8fde\u7684\u533a\u57df\u901a\u8fc7\u865a\u62df\u94fe\u8def\u8fde\u63a5</p> <p>command:  <pre><code>(config)# router ospf 1 # enable ospf [process id]\n(config-router)# network x.x.x.x 0.0.0.255 area 0 # \u76f4\u8fde\u7f51\u7edc\u914d\u7f6e\n</code></pre></p> <p>\u7f3a\u7701\u7f51\u5173\u90fd\u6309\u6700\u9ad8\u6216\u6700\u4f4e\u4f4d\u6765\u9009\u62e9</p>"},{"location":"courses/final_review/network/#rid-router-id","title":"RID (router ID)","text":"<p>\u4e00\u53f0\u8def\u7531\u5668\u5728\u81ea\u6cbb\u7cfb\u7edf\u4e2d\u7684\u552f\u4e00\u6807\u8bc6 \u4e00\u822c\u5c06\u56de\u73af\u63a5\u53e3\u4f5c\u4e3aRID</p>"},{"location":"courses/final_review/network/#virtual-link","title":"virtual link","text":"<p>\u865a\u94fe\u63a5\u8bbe\u7f6e\u5728\u4e24\u4e2a\u8def\u7531\u5668\u4e4b\u95f4\uff0c\u8fd9\u4e24\u4e2a\u8def\u7531\u5668\u5747\u6709\u4e00\u4e2a\u7aef\u53e3\u4e0e\u540c\u4e00\u4e2a\u975e\u4e3b\u5e72\u533a\u57df\u8fde\u63a5\u3002\u865a\u94fe\u63a5\u88ab\u8ba4\u4e3a\u662f\u5c5e\u4e8e\u4e3b\u5e72\u533a\u57df command:  <pre><code>router ospf 1\narea 0 virtual-link RID\n</code></pre></p>"},{"location":"courses/final_review/network/#ospf-metric","title":"OSPF metric","text":"<p>\u6309\u7167cost\u6765\u8ba1\u7b97\uff0c\u800c\u975e\u8df3\u6570 Serial cost: 48 Ethernet cost: 10  FastEthernet cost: 1 GigaEthernet cost: 1</p>"},{"location":"courses/final_review/network/#hardware","title":"Hardware","text":"<ul> <li>twisted pair (telephone)<ul> <li></li> <li></li> </ul> </li> <li>coaxial cable (TV)</li> <li>fiber optic cable (the backbone the PSTN, public switched telephone network)</li> <li>radio spectrum (cellphone)</li> </ul>"},{"location":"courses/final_review/network/#software","title":"Software","text":"<p>protocol Hierarchy: layer1 ------ layer1</p> <p>------interface-----</p> <p>layer2 ------ layer2</p> <p>------interface-----</p> <p>layer3 ------ layer3</p> <p>------interface-----</p> <p>layer4 ------ layer4</p> <p>------interface-----</p> <p>layer5 ------ layer5</p> <p>------interface-----</p> <p>physical medium</p>"},{"location":"courses/final_review/network/#osi-model","title":"OSI model","text":"<p>application layer   :  presentation layer  : session layer       : transport layer     : segment ---&gt; end-to-end network layer       : packet data link layer     : frame physical layer      : bit</p>"},{"location":"courses/final_review/network/#tcpip-model","title":"TCP/IP model","text":"<p>application layer transport layer network layer link layer</p> <p>DNS: UDP based</p>"},{"location":"courses/final_review/network/#performance-metrics","title":"performance metrics","text":"<p>delay loss throughput</p>"},{"location":"courses/final_review/network/#physical-layer","title":"physical layer","text":"<p>Nyquist bandwidth:  \\(C=2B\\log_2V\\) (V: number of levels)</p> <p>Shannon Capacity: \\(C=B\\log_2(1+{\\rm{SNR}})\\)</p>"},{"location":"courses/final_review/network/#digital-modulation-for-baseband-signal","title":"digital modulation (for baseband signal)","text":"<ul> <li>bit stream</li> <li>NRZ</li> <li>NRZI</li> <li>Manchester (clock XORed with signal)</li> <li>Bipolar encoding (average tends to 0)</li> </ul>"},{"location":"courses/final_review/network/#digital-modulation-for-passband-signal","title":"digital modulation (for passband signal)","text":"<p>ASK FSK PSK</p>"},{"location":"courses/final_review/network/#multiplexing","title":"Multiplexing","text":"<p>FDM(frequency division Multiplexing)</p> <p>TDM(time division Multiplexing)</p> <p>CDM(code division Multiplexing)     chip sequence</p> <p>PSTN Cellular network - frequency reuse</p>"},{"location":"courses/final_review/network/#data-link-layer","title":"Data link layer","text":""},{"location":"courses/final_review/network/#framing","title":"framing","text":"<ul> <li>byte count</li> <li>flag bytes with byte stuffing     ESC+flag (PPP protocol)</li> <li>flag bits with bit stuffing     5 consecutive \"1\" followed by 1 \"0\"</li> </ul>"},{"location":"courses/final_review/network/#error-detectioncorrection","title":"error detection/correction","text":"<p>Hamming distance vs. Hanmming distance of a complete code + To reliably detect d errors, need a distance d+1 code + To correct d errors, need a distance 2d+1 code</p> <p>Hamming codes $$ (m+r+1) \\leq 2^r $$</p> <ul> <li>wireless: use correction</li> <li>wired: use detection and retransmission</li> </ul>"},{"location":"courses/final_review/network/#error-detection","title":"error detection","text":"<p>parity checksum CRC (cyclic redundancy check) pattern P is 1 bit longer than desired FCS</p>"},{"location":"courses/final_review/network/#flow-control","title":"flow control","text":"<p>sliding window protocol + one-bit sliding window + go-back-N      receive window size : 1</p> <ul> <li>selective repeat</li> </ul>"},{"location":"courses/final_review/network/#mac-sublayer","title":"MAC sublayer","text":""},{"location":"courses/final_review/network/#aloha","title":"ALOHA","text":"<p>pure ALOHA slotted ALOHA</p>"},{"location":"courses/final_review/network/#csma","title":"CSMA","text":"<p>1-persistent Nonpersistent p-persistent' CSMA/CD</p>"},{"location":"courses/final_review/network/#collision-free-protocol","title":"Collision free protocol","text":"<p>Bit-Map protocol token passing ... ...</p>"},{"location":"courses/final_review/network/#ethernet","title":"Ethernet","text":"<ul> <li>classical Ethernet: 3-10Mbps</li> <li></li> </ul>"},{"location":"courses/final_review/network/#ethernet-frame-structure","title":"Ethernet frame structure","text":"<p>preamble field: for synchronization </p> <p>minimum frame size: 64 bytes</p> <p>transmission time &gt;= RTT</p>"},{"location":"courses/final_review/network/#random-interval","title":"random interval","text":"<p>Collision --&gt; slot --&gt; after i-th Collision --&gt; randomly choose from 1~2^i-1 --&gt; after 10-th Collision --&gt; frozen 1023 slots</p>"},{"location":"courses/final_review/network/#maca","title":"MACA","text":"<p>RTS/CTS 802.11 WIFI frame structure</p>"},{"location":"courses/final_review/network/#bridge","title":"Bridge","text":"<p>connecting 2 multidrop LANs All of the stations attached to the same port belongs to the same collision domain</p>"},{"location":"courses/final_review/network/#repeaters-hubs-bridges-switches-routers-gateways","title":"repeaters, hubs, bridges, switches, routers, gateways","text":""},{"location":"courses/final_review/network/#network-layer_1","title":"Network layer","text":""},{"location":"courses/final_review/network/#spanning-tree","title":"Spanning tree","text":"<p>\u9009\u62e9MAC\u5730\u5740\u6700\u5c0f\u7684\u4f5c\u4e3a\u6839\u8282\u70b9</p>"},{"location":"courses/final_review/network/#virtual-vlan","title":"Virtual vlan","text":"<p>ports in each vlan form a broadcast domain vlan trunk: a special port on each switch configured to interconnect ...</p>"},{"location":"courses/final_review/network/#routing-algorithm","title":"Routing algorithm","text":""},{"location":"courses/final_review/network/#link-state","title":"Link-state","text":"<p>Global routing Dijkstra  may have oscillation</p>"},{"location":"courses/final_review/network/#distance-vector","title":"Distance vector","text":"<p>local count to inifinty problem</p>"},{"location":"courses/final_review/network/#metrics","title":"metrics","text":"<ul> <li>message complexity</li> <li>speed of convergence</li> <li>robustness when 1 router malfunctions</li> </ul>"},{"location":"courses/final_review/network/#ip-protocol","title":"IP protocol","text":"<p>RIP OSPF BGP</p>"},{"location":"courses/final_review/network/#ipv4-datagram","title":"IPv4 Datagram","text":"<p>20-bytes fixed part  addr length: 32bits</p>"},{"location":"courses/final_review/network/#cidr","title":"CIDR","text":"<p>Classless Inter-Domain Routing</p>"},{"location":"courses/final_review/network/#ipv6","title":"IPv6","text":"<p>::182.31.20.46 effective IPv6 addr</p>"},{"location":"courses/final_review/network/#ip-addr-distribution","title":"IP addr distribution","text":"<ul> <li> <p>NAT</p> </li> <li> <p>DHCP</p> </li> </ul>"},{"location":"courses/final_review/network/#icmp","title":"ICMP","text":"<p>ping trace ICMP message type</p>"},{"location":"courses/final_review/network/#arp","title":"ARP","text":"<p>map IP addr to MAC addr only for nodes on the same subnet</p>"},{"location":"courses/final_review/network/#dns","title":"DNS","text":"<p>map host name to IP addr anywhere in the world</p>"},{"location":"courses/final_review/network/#rip","title":"RIP","text":"<p>Intra-AS routing DV algo metric: hop count</p>"},{"location":"courses/final_review/network/#ospf","title":"OSPF","text":"<p>LS algo metric: bandwidth</p>"},{"location":"courses/final_review/network/#bgp","title":"BGP","text":""},{"location":"courses/final_review/network/#transport-layer_1","title":"Transport layer","text":"<p>segment/TPDU UDP don't do: + flow control</p>"},{"location":"courses/final_review/network/#rtp","title":"RTP","text":""},{"location":"courses/final_review/network/#tcp","title":"TCP","text":"<p>multiplex, point-To-point</p> <p>three-way handshakes + SYN: send by client to initiate a connection + SYN-ACK: send by server to accept the connection + ACK: send by client to confirm the connection</p> <ul> <li>FIN: send by client to close the connection</li> <li>RST: send by either side to abort the connection</li> <li>ACK: send by server to confirm the FIN</li> <li>ACK: send by client to confirm the FIN</li> <li>ACK: send by server to confirm the RST</li> <li>ACK: send by client to confirm the RST</li> </ul>"},{"location":"courses/final_review/network/#tcp-time-management","title":"TCP time management","text":"<p>RTO (retransmission timeout)</p>"},{"location":"courses/final_review/network/#congestion-control","title":"Congestion control","text":"<p>... slow start  fast recovery</p>"},{"location":"courses/final_review/network/#application-layer","title":"application layer","text":"<p>DNS, email(SMTP), </p>"},{"location":"courses/final_review/network/#dns_1","title":"DNS","text":"<p>type field ...</p>"},{"location":"courses/final_review/network/#dns-resolution","title":"DNS resolution","text":"<p>Iterative/recursive query</p>"},{"location":"courses/final_review/network/#ftp","title":"FTP","text":"<p>use 2 parallel connections</p>"},{"location":"courses/final_review/network/#email","title":"email","text":"<p>use SMTP</p>"},{"location":"courses/final_review/network/#web","title":"Web","text":"<p>http protocol(stateless) + cookie TCP port: 80; HTTPs port: 443 Web caching HTML</p>"},{"location":"courses/final_review/os/","title":"\u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u8003\u8bd5\u65f6\u95f4\uff1a01\u670807\u65e5(10:30-12:30)</p>"},{"location":"courses/final_review/os/#chap-1","title":"chap 1","text":""},{"location":"courses/final_review/os/#chap-6","title":"chap 6","text":""},{"location":"courses/final_review/os/#chap-7-deadlock","title":"chap 7 deadlock","text":""},{"location":"courses/final_review/os/#resource-allocation-graph","title":"Resource allocation graph","text":"<p>If graph contains a cycle </p> <ul> <li> <p>if only one instance per resource type, then deadlock.</p> </li> <li> <p>if several instances per resource type, possibility of deadlock.</p> </li> </ul>"},{"location":"courses/final_review/os/#deadlock-handling","title":"deadlock handling","text":"<ul> <li> <p>Ensure that the system will never enter a deadlock state</p> <ul> <li> <p>Prevention</p> </li> <li> <p>Avoidance</p> </li> </ul> </li> <li> <p>Allow the system to enter a deadlock state and then recover - database</p> <ul> <li>Deadlock detection and recovery</li> </ul> </li> <li> <p>UNIX: Ignore the problem and pretend that deadlocks never occur in the system;</p> </li> </ul>"},{"location":"courses/final_review/os/#deadlock-prevention","title":"deadlock prevention","text":"<p>\u6253\u7834\u6b7b\u9501\u7684\u4efb\u4e00\u6761\u4ef6</p> <ol> <li> <p>How to prevent mutual exclusion</p> <p>sharable \u7684\u53ef\u4ee5\uff0cnon-sharable \u7684\u6ca1\u529e\u6cd5\u3002</p> </li> <li> <p>How to prevent hold and wait</p> <p>whenever a process requests a resource, it doesn\u2019t hold any other resources</p> <p>require process to request all its resources before it begins execution</p> <p>allow process to request resources only when the process has none</p> <p>\u7533\u8bf7\u8d44\u6e90\u65f6\u4e0d\u80fd\u6709\u5176\u4ed6\u8d44\u6e90\uff0c\u8981\u4e00\u6b21\u6027\u7533\u8bf7\u6240\u6709\u9700\u8981\u7684\u8d44\u6e90\u3002</p> <p>low resource utilization; starvation possible</p> <p>\u5229\u7528\u7387\u4f4e\uff0c\u800c\u4e14\u53ef\u80fd\u6709\u8fdb\u7a0b\u6c38\u8fdc\u62ff\u4e0d\u5230\u6240\u6709\u9700\u8981\u7684\u8d44\u6e90\uff0c\u56e0\u6b64\u65e0\u6cd5\u6267\u884c\u3002</p> </li> <li> <p>How to prevent no preemption</p> <p>\u5982\u679c\u5f97\u4e0d\u5230\u60f3\u8981\u7684\u8d44\u6e90\u3002\u5c31\u628a\u81ea\u5df1\u6240\u6709\u7684\u8d44\u6e90\u91ca\u653e\u3002</p> </li> <li> <p>How to handle circular wait</p> <p>impose a total ordering of all resource types</p> <p>\u7ed9\u9501\u4e00\u4e2a\u4f18\u5148\u7ea7\u6392\u5e8f\uff0c\u53d6\u9501\u7684\u65f6\u5019\u8981\u6c42\u4ece\u9ad8\u5f80\u4f4e\u53d6\u9501\u3002</p> <p>require that each process requests resources in an increasing order.</p> <p>Many operating systems adopt this strategy for some locks.</p> </li> </ol> ppt <p> </p>"},{"location":"courses/final_review/os/#deadlock-avoidance","title":"Deadlock Avoidance","text":""},{"location":"courses/final_review/os/#safe-state","title":"safe state","text":"<p> If a system is in safe state -&gt; no deadlocks.</p> <p>If a system is in unsafe state -&gt; possibility of deadlock.</p> <p>Avoidance is to ensure that a system will never enter an unsafe state. </p>"},{"location":"courses/final_review/os/#avoidance-algorithms","title":"Avoidance algorithms","text":"<ul> <li> <p>Single instance of a resource type     Use a resource allocation graph</p> </li> <li> <p>Multiple instances of a resource type     Use the banker\u2019s algorithm</p> </li> </ul>"},{"location":"courses/final_review/os/#single-instance-deadlock-avoidance","title":"Single-instance Deadlock Avoidance","text":"<p>Resource-allocation graph can be used for single instance resource deadlock avoidance</p> <ul> <li> <p>one new type of edge: claim edge</p> <ul> <li> <p>indicates that process may request resource</p> <p>\u60f3\u8981\uff0c\u4f46\u8fd8\u6ca1\u6709 request\u3002</p> </li> <li> <p>claim edge is represented by a dashed line</p> </li> <li>resources must be claimed a priori in the system.</li> </ul> </li> <li> <p>Transitions in between edges</p> <ul> <li>claim edge converts to request edge when a process requests a resource.</li> <li>request edge converts to an assignment edge when the resource is allocated to the process.</li> <li>assignment edge reconverts to a claim edge when a resource is released by a process.</li> </ul> </li> <li> <p>Algorithm</p> <ul> <li> <p>Suppose that process Pi requests a resource Rj</p> </li> <li> <p>The request can be granted only if:</p> <ul> <li> <p>converting the request edge to an assignment edge does not result in the formation of a cycle.</p> </li> <li> <p>no cycle  -&gt; safe state</p> </li> </ul> </li> </ul> </li> </ul>"},{"location":"courses/final_review/os/#multi-instances-deadlock-avoidance","title":"Multi-instances deadlock avoidance","text":"<p>Banker\u2019s Algorithm</p> <p>\u6bcf\u4e2a\u8fdb\u7a0b\u4e8b\u5148\u58f0\u660e\u5404\u4e2a\u8d44\u6e90\u7684\u6700\u5927\u9700\u6c42\u3002</p> <p>\u901a\u8fc7 available\uff08\u5f53\u524d\u8fd8\u6ca1\u6709\u88ab\u5206\u914d\u7684\u7a7a\u95f2\u8d44\u6e90\uff09, max\uff08\u8fdb\u7a0b\u603b\u5171\u6240\u9700\u8981\u7684\u8d44\u6e90\uff09, allocation\uff08\u5df2\u7ecf\u5206\u914d\u7684\u8d44\u6e90\uff09, need\uff08\u8fd8\u9700\u8981\u5206\u914d\u591a\u5c11\u8d44\u6e90\uff09 \u8fd9\u56db\u4e2a\u77e9\u9635\u523b\u753b\u4e00\u4e2a\u65f6\u95f4\u5185\u5404\u4e2a\u8fdb\u7a0b\u5bf9\u5404\u79cd\u8d44\u6e90\u7684\u6301\u6709\u548c\u9700\u6c42\u60c5\u51b5\u3002</p> <p>\u9009\u53d6\u4e00\u4e2a need\uff08\u7684\u6bcf\u4e00\u9879\u90fd\u5bf9\u5e94\u5730\uff09\u5c0f\u4e8e available\uff08\u7684\u5bf9\u5e94\u9879\uff09\u7684\u8fdb\u7a0b\uff0c\u5176\u8fd0\u884c\u5b8c\u540e\u4f1a\u5c06 allocation \u91ca\u653e\u56de work\uff08\u524d\u9762\u7684\u8fdb\u7a0b\u6267\u884c\u5b8c\u6bd5\u540e\uff0c\u7a7a\u95f2\u7684\u8d44\u6e90\uff09\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u82e5\u4e0d\u5b58\u5728\uff0c\u8bf4\u660e\u4e0d\u5b89\u5168\u3002</p>"},{"location":"courses/final_review/os/#deadlock-detection","title":"Deadlock detection","text":""},{"location":"courses/final_review/os/#single-instance-resources","title":"Single Instance Resources","text":"<p>\u4f7f\u7528 wait-for graph</p> <p>Pi-&gt;Pj means Pi waiting for Pj \u5468\u671f\u6027\u7684\u68c0\u67e5\u662f\u5426\u6210\u73af\uff0c\u6210\u73af\u8868\u660e\u6b7b\u9501</p> <p>\u7136\u800c\u68c0\u6d4b\u7b97\u6cd5\u9700\u8981 \\(O(n^2)\\) \u590d\u6742\u5ea6\uff0c\\(n\\) \u4e3a\u8fdb\u7a0b\u6570</p>"},{"location":"courses/final_review/os/#multi-instance-resources","title":"Multi-Instance Resources","text":"<p>\u7c7b\u4f3c\u4e8ebanker's algorithm\uff0c\u5982\u679c\u627e\u4e0d\u5230\u4efb\u4f55\u5b89\u5168\u5e8f\u5217\uff0c\u5219\u8bf4\u660e\u7cfb\u7edf\u5904\u4e8e\u6b7b\u9501\u72b6\u6001\u3002</p>"},{"location":"courses/final_review/os/#deadlock-recovery","title":"deadlock Recovery","text":""},{"location":"courses/final_review/os/#terminate-deadlocked-processes","title":"Terminate deadlocked processes.","text":"<ul> <li> <p>options:</p> <p>abort all deadlocked processes.</p> <p>abort one process at a time until the deadlock cycle is eliminated.</p> </li> <li> <p>In which order should we choose to abort?</p> <p>priority of the process</p> <p>how long process has computed, and how much longer to completion</p> <p>resources the process has used</p> <p>resources process needs to complete</p> <p>how many processes will need to be terminated</p> <p>is process interactive or batch?</p> </li> <li> <p>Resource preemption</p> <p>Select a victim</p> <p>Rollback</p> <p>Starvation: How could you ensure that the resources do not preempt from the same process?</p> </li> </ul>"},{"location":"courses/final_review/os/#chapter-10-basic-of-file","title":"Chapter 10: basic of file","text":"<p>\u987a\u5e8f\u8bfb\u5199\uff08\u66f4\u5feb\uff09 \u968f\u673a\u8bfb\u5199</p>"},{"location":"courses/final_review/os/#directory-structure","title":"Directory structure","text":"<p>A collection of nodes containing (management)  information about all files</p> <ul> <li>Single-Level Directory     A single directory for all users</li> <li>Two-Level Directory     Separate directory for each user</li> <li>Tree-Structured Directories</li> <li>Acyclic-Graph Directories</li> </ul>"},{"location":"courses/final_review/os/#mount","title":"Mount","text":"<p>\u5c06disk\u4e0a\u7684\u5176\u4ed6\u6587\u4ef6\u7cfb\u7edf\u6302\u8f7d\u5230\u5f53\u524d\u6587\u4ef6\u7cfb\u7edf\u4e0a <pre><code>$ mount /dev/dsk /users\n</code></pre></p>"},{"location":"courses/final_review/os/#access-lists-and-groups","title":"Access Lists and Groups","text":"<p>Three classes of users + owner + group + public</p> <p>\u5bf9\u4e8eelf\u6587\u4ef6\uff0c\u5fc5\u987b\u5177\u6709x\u6743\u9650\uff0c\u624d\u80fd\u6267\u884c\uff1b \u5bf9\u4e8e\u76ee\u5f55\uff0c\u5fc5\u987b\u5177\u6709\u8bfb\u5199\u6743\u9650\uff0c\u624d\u80fd\u641c\u7d22\uff1b</p>"},{"location":"courses/final_review/os/#chapter-11-file-system-implementation","title":"Chapter 11: File System Implementation","text":""},{"location":"courses/final_review/os/#data-structure","title":"Data structure","text":""},{"location":"courses/final_review/os/#disk-structure","title":"Disk structure","text":""},{"location":"courses/final_review/os/#in-memory-structure","title":"In-memory structure","text":"<p>\u4e24\u4e2a\u8fdb\u7a0b\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\uff0c\u6709\u51e0\u4e2a\u8fdb\u7a0b\u6587\u4ef6\u6253\u5f00\u8868\uff0c\u51e0\u4e2a\u5168\u5c40\u6587\u4ef6\u6253\u5f00\u8868 \u4e00\u4e2a\u8fdb\u7a0b\u6253\u5f00\u4e00\u4e2a\u6587\u4ef6\u4e24\u6b21\uff0c\u6709\u51e0\u4e2a\u8fdb\u7a0b\u6587\u4ef6\u6253\u5f00\u8868\uff0c\u51e0\u4e2a\u5168\u5c40\u6587\u4ef6\u6253\u5f00\u8868</p>"},{"location":"courses/final_review/os/#virtual-file-system","title":"Virtual File System","text":"<p>\u865a\u62df\u6587\u4ef6\u7cfb\u7edf\u662f\u4e0d\u662f\u4e00\u4e2a\u6587\u4ef6\u7cfb\u7edf\uff1f\u662f\u3002</p>"},{"location":"courses/final_review/os/#allocation-method","title":"Allocation method","text":""},{"location":"courses/final_review/os/#contiguous-allocation","title":"Contiguous allocation","text":"<pre><code>Extent-based Allocation\n</code></pre>"},{"location":"courses/final_review/os/#linked-allocation","title":"Linked allocation","text":"<p>Simple-need only starting address Free-space management system  no waste of space  No random access, poor reliability Mapping</p>"},{"location":"courses/final_review/os/#indexed-allocation","title":"Indexed allocation","text":""},{"location":"courses/final_review/os/#dentry-and-inode","title":"Dentry and Inode","text":""},{"location":"courses/final_review/os/#free-space-management","title":"Free-Space Management","text":""},{"location":"courses/final_review/os/#chapter-12-mass-storage-system","title":"Chapter 12: Mass Storage System","text":"<p>seek time (moving arms to position disk head on track) rotational delay (waiting for block to rotate under head) transfer time (actually moving data to/from disk surface)</p>"},{"location":"courses/final_review/os/#disk-scheduling","title":"Disk scheduling","text":""},{"location":"courses/final_review/os/#scan-elevator-algorithm","title":"SCAN (elevator) Algorithm","text":""},{"location":"courses/final_review/os/#c-scan-with-look","title":"C-SCAN (with look)","text":""},{"location":"courses/final_review/os/#raid-redundant-arrays-of-inexpensive-disks","title":"RAID (redundant arrays of inexpensive disks)","text":""},{"location":"courses/final_review/os/#disk-striping","title":"Disk striping","text":"<p>Bit-level Striping Block-level Striping: different blocks of a file are striped + RAID-0     1. No redundancy + RAID-1     1. Mirroring     2. 50% utilization + RAID-2     ecc + RAID-3     1. bit-interleaved parity + RAID-4     1. block-interleaved parity + RAID-5 + RAID-6</p>"},{"location":"courses/final_review/os/#chapter-13-io-systems","title":"Chapter 13: I/O Systems","text":""},{"location":"courses/final_review/os/#signal-and-interrupt","title":"Signal and Interrupt","text":""},{"location":"courses/final_review/os/#direct-memory-access","title":"Direct Memory Access","text":""},{"location":"courses/final_review/os/#_1","title":"\u4f8b\u9898","text":"<ol> <li> <p>Which of the following functionalities in an operating system does not need specialhardware support?</p> <p>A. process scheduling</p> <p>B. clock management</p> <p>C. address mapping</p> <p>D. interrupt system</p> <p>\u6b63\u786e\u7b54\u6848: A</p> </li> </ol>"},{"location":"courses/final_review/toc/","title":"\u8ba1\u7b97\u7406\u8bba","text":"<p>\u8003\u8bd5\u65f6\u95f4\uff1a01\u670806\u65e5(08:00-10:00)</p>"},{"location":"courses/logic/logic/","title":"\u6570\u5b57\u903b\u8f91\u8bbe\u8ba1","text":"Chapter 1 Digital System <p>digital system\u5b9a\u4e49\uff1a\u8f93\u5165discrete inputs\u3001discrete internal information (system state)\uff0c\u4ea7\u751fdiscrete ouputs</p> <p></p> <p>Block diagram: </p> <p>ADC (Analog Digital Converter)\u5c06\u8fde\u7eed\u7684\u6a21\u62df\u4fe1\u53f7\u8f6c\u6362\u4e3a\u79bb\u6563\u7684\u6570\u5b57\u4fe1\u53f7</p> information representation <p>01\u4fe1\u53f7\u901a\u8fc7\u7535\u538b\u9ad8\u4f4e\u6765\u5b9e\u73b0</p> <p></p> <p></p> <p>\u4e2d\u95f4\u975eHIGH\u975eLOW\u90e8\u5206\u53ebthreshold region\uff0c\u5c5e\u4e8e\u672a\u5b9a\u4e49\u533a\u57df\uff0c\u5f53V\u843d\u5728\u6b64\u533a\u57df\u65f6\u79f0\u4e3afloat\uff0cfloat\u72b6\u6001\u4e0b\u8f93\u51fa\u4e0d\u5b9a</p> <p>\u5bbd\u8fdb\u4e25\u51fa\uff1ainput\u7684\u4fe1\u53f7\u53ef\u80fd\u4f1a\u6709\u566a\u97f3\u3001\u6c61\u67d3\uff0c\u964d\u4f4e==output tolerance==\uff0c\u5373\u964d\u4f4eoutput\u7684\u5bb9\u9519\u7387\uff0c\u589e\u52a0\u4e86\u6297\u5e72\u6270\u80fd\u529b\uff0c\u53ef\u4ee5\u4e3a\u4e0b\u4e2adevice\u63d0\u4f9b\u66f4\u5927\u7684\u5bb9\u9519\u7a7a\u95f4</p>"},{"location":"courses/logic/logic/#number-system-representation","title":"number system - representation","text":"<p>special power of 2:</p> <ul> <li>2<sup>10</sup>=1024 is Kilo, \"K\"</li> <li>2<sup>20</sup> is Mega, \"M\"</li> <li>2<sup>30</sup> is Giga, \"G\"</li> <li>2<sup>40</sup> is Tera, \"T\"</li> </ul>"},{"location":"courses/logic/logic/#binary-arithmetic","title":"binary arithmetic","text":"<ol> <li>\u51cf\u6cd5\uff1a\u7c7b\u4f3c\u4e8e\u52a0\u6cd5\u4f1a\u4ea7\u751fcarry\uff0c\u51cf\u6cd5\u4f1a\u4ea7\u751fborrow in\uff0c\u7ed9\u51fa\u4e24\u4e2a\u6570\u76842\u4e2abinary digits (X, Y)\uff0c\u52a0\u4e0a\u4e24\u4e2a\u6570\u4e0a\u4e00\u4f4d\u7684borrow in\uff0c\u53ef\u5f97\u5982\u4e0b\u771f\u503c\u8868</li> </ol> <ol> <li>\u4e58\u6cd5\uff1a\u4e58\u6cd5\u53ef\u4ee5\u7528\u7ad6\u5f0f\u8ba1\u7b97</li> </ol>"},{"location":"courses/logic/logic/#_1","title":"\u8fdb\u5236\u8f6c\u6362","text":"<ol> <li>\u8f6c\u6362integer part\uff0c\u7565</li> <li>\u8f6c\u6362factional part\u3002\u4e0d\u65ad\u7ed9\u5c0f\u6570\u90e8\u5206\u4e58\u4e0anew radix\uff0c\u65b0\u4ea7\u751f\u7684\u6574\u6570\u90e8\u5206digits\u5373\u4e3a\u76f8\u5e94bit\uff0c\u518d\u53d6\u5269\u4e0b\u7684\u5c0f\u6570\u90e8\u5206\u7ee7\u7eed......</li> </ol> <p>LSB: least significant bit</p>"},{"location":"courses/logic/logic/#binary-coding","title":"binary coding","text":"<p>\u76ee\u7684\uff1a\u7528\u4e8c\u8fdb\u5236\u7f16\u7801\u6765\u8868\u793a\u6570\u636e\u7c7b\u578b</p> <p>data type\u6709numeric\u7c7b\u578b\u7684\u548cnon-numeric\u7c7b\u578b\u7684\uff0c\u90fd\u53ef\u4ee5\u7528\u4e8c\u8fdb\u5236\u7f16\u7801\u8868\u793a</p> <p>\u4f8b\u5b501\uff1aBinary Coded Decimal (BCD)</p> Decimal 8,4,2,1 Excess3 8,4,-2,-1 Gray 0 0000 0011 0000 0000 1 0001 0100 0111 0001 2 0010 0101 0110 0011 3 0011 0110 0101 0010 4 0100 0111 0100 0110 5 0101 1000 1011 0111 6 0110 1001 1010 0101 7 0111 1010 1001 0100 8 1000 1011 1000 1100 9 1001 1100 1111 1101 <ul> <li> <p>Excess3\u5c31\u662f\u57288421\u57fa\u7840\u4e0a\u52a03\u3002\u8fd9\u6837\u7f16\u7801\u8303\u56f4\u662f3-12\uff0c\u524d\u540e\u5404\u67093\u79cd\u7ec4\u5408\u6ca1\u7528\uff0c\u4f18\u70b9\u662f09,18,27,36,45\u7684\u8868\u793a\u4e92\u8865\uff0ccomplement code\uff1b</p> </li> <li> <p>8,4,-2,-1\u7684\u4f18\u70b9\u4e5f\u662fcomplement code\uff1b</p> </li> <li>\u683c\u96f7\u7801(Gray)\u7684\u7279\u5f81\uff0cTwo successive values differ in only one bit\uff0c\u76f8\u90bb\u4e24\u6570\u7684\u7f16\u7801\u53ea\u67091bit\u4e0d\u540c\uff0c\u53ef\u4ee5\u5e94\u7528\u4e8eoptical shaft encoder\uff0c\u4e00\u79cd\u6d4b\u91cf\u89d2\u5ea6\u7684\u4eea\u5668</li> </ul> <p></p> <p>\u5982\u5de6\u56fe\uff0c\u5728\u8f6c\u5230\u5206\u754c\u7ebf\u65f6\uff0c\u7531\u4e8e\u6709\u591a\u4e2a\u73af\u7684\u989c\u8272\u4f1a\u53d8\uff0c\u800c\u8fb9\u7f18\u8bbe\u8ba1\u5728\u5b9e\u9645\u4e2d\u4e0d\u53ef\u63a7\uff0c\u6240\u4ee5\u6bcf\u4e2a\u73af\u7684\u53d8\u8272\u987a\u5e8f\u662f\u4e0d\u5b9a\u7684\uff0c\u4e8e\u662f\u53d8\u6362\u7684\u77ac\u95f4output\u662f\u4e0d\u5b9a\u7684\uff1b\u800cGray\u7801\u5c31\u5f88\u597d\u5730\u907f\u514d\u4e86\u8fd9\u4e2a\u95ee\u9898\u3002</p> <p>binary code\u5230Gray code\u7684conversion\u89c4\u5219\uff1a\u9ad8\u4e00\u4f4d+\u672c\u4f4d\uff08\u820d\u5f03\u8fdb\u4f4d\uff09\u5f97\u5230Gray\u672c\u4f4d</p> <p></p> <p>\u4f8b\u5b502\uff1anumber of elements represented\u3002\u4f8b\u5982\uff0c\u8868\u793a4\u4e2aelem\u6211\u4eec\u53ef\u4ee5\u75282bit\uff1b\u4e5f\u53ef\u4ee5\u75284bit (0001, 0010, 0100, 1000)\uff0c\u6bcf\u4e2aelem\u53ea\u67091 bit\u4e3a1\uff0c\u8fd9\u53eb\u505a==one-hot code==</p> <p>BCD\u7801\u7684\u8fd0\u7b97\uff08\u52a0\u6cd5\uff09</p> <p></p> <p>\u52a0\u5bc6</p> <p>\u6821\u9a8c(Error detection) Techniques:</p> <ul> <li>Parity\u662f\u989d\u5916append\u5230code\u5c3e\u90e8\u7684bit\uff0c\u4e3a\u4e86\u8ba9code\u4e2d\u7f6e1\u7684bit\u6570\u4e3aeven\u6216odd\u3002\u53ef\u4ee5\u76d1\u6d4b\u5230single bit error\u3002</li> <li>\u5206\u4e3aOdd Parity\u548cEven Parity\uff0c\u52a0\u5728\u6700\u524d/\u540e\u9762 (most/least significant bit)\u3002\u82e5\u4e3aOdd\uff0c\u5219code\u4e2d\u5171\u6709\u5947\u6570\u4f4d1\uff1b\u4e3aEven\u5219\u6709\u5076\u6570\u4f4d1\u3002</li> </ul>"},{"location":"courses/logic/logic/#chapter2","title":"Chapter2","text":""},{"location":"courses/logic/logic/#implementation-of-andornot-with-bjt","title":"implementation of AND/OR/NOT with BJT","text":""},{"location":"courses/logic/logic/#basic-logic-gate","title":"basic logic gate","text":"<p>basic gate : <code>AND</code>\u3001<code>OR</code>\u3001<code>NOT</code></p> <p>universal gate : <code>NAND</code>\u3001<code>NOR</code></p> <p>other gate : <code>EX-OR</code>\u3001<code>EX-NOR</code></p>"},{"location":"courses/logic/logic/#gate-delay","title":"Gate delay","text":"<p>\u5728\u5b9e\u9645\u7684\u95e8\u7535\u8def\u4e2d\uff0cinput\u7684\u6539\u53d8\u5e76\u4e0d\u4f1a\u5bfc\u81f4output\u7acb\u523b\u6539\u53d8\uff0c\u4f1a\u6709\u4e00\u5b9a\u7684\u5ef6\u8fdf\uff0c\u8fd9\u4e2a\u5ef6\u8fdf\u5c31\u662fgate delay</p> <p></p>"},{"location":"courses/logic/logic/#logic-diagram-and-expression","title":"logic diagram and expression","text":"<p>\u903b\u8f91\u8868\u8fbe\u76844\u79cd\u65b9\u5f0f</p> <ol> <li>\u5916\u56f4\u89c2\u6d4b\uff0c\u7531\u7535\u8def\u529f\u80fd\u552f\u4e00\u786e\u5b9a\u3002\u6709truth table\u3001waveform</li> <li>\u903b\u8f91\u5b9e\u73b0\uff0c\u6709\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff0c\u4e0d\u552f\u4e00\uff0c\u56e0\u800c\u5728\u5b9e\u9645\u5b9e\u73b0\u529f\u80fd\u65f6\u66f4\u52a0\u7075\u6d3b\uff0c\u6709\u4f18\u5316\u7a7a\u95f4\u3002\u6709Equation\u3001Logic diagram</li> </ol>"},{"location":"courses/logic/logic/#bool-algebra","title":"Bool Algebra","text":"<p>\u5e03\u5c14\u4ee3\u6570\u662f\u4e00\u79cd\u4ee3\u6570\u7ed3\u6784\uff0c\u5b83\u5b9a\u4e49\u5728\u4e00\u4e2a\u4e8c\u5143\u96c6\u5408{0, 1}\u4e0a\uff0c\u6709\u4e09\u79cd\u8fd0\u7b97 +, \u00b7 ,overbar</p> <p>some basic laws</p> <p></p> <p>bool algebra\u7684\u5bf9\u5076\u6027(duality rule)</p> <p>Review: 1. Proof of equality of expression 2. Simplification</p>"},{"location":"courses/logic/logic/#canonical-forms-for-comparison-of-equality-som-pom","title":"Canonical forms for comparison of equality: SOM/ POM","text":"<p>SOM &lt;-&gt; POM\u4e4b\u95f4\u7684conversion\uff1aPOM\u7684product\u7531\u4f7f\u5f97F\u53d60\u7684code\u7ec4\u5408\uff08\u76f8\u4e58\uff09\u800c\u6210\uff1bSOM\u7684sum\u7531\u4f7f\u5f97F\u53d61\u7684code\u7ec4\u5408\uff08\u76f8\u52a0\uff09\u800c\u6210\u3002\u6240\u4ee5\u82e5SOM\u53d6\u4e86m0,m2,m3,m6\uff0c\u5219POM\u53d6M1,M4,M5,M7 $$ F=SOM=\\sum_{i\\in{A}}m_i\\ \\bar{F}=\\prod_{i\\in A}\\bar{m_i}=\\prod_{i\\in A}{M_i}\\ F=POM=\\prod_{j\\notin A}M_j $$</p> <p>Two-level logic with canonical form</p> <p>\u4e00\u5c42AND\uff0c\u4e00\u5c42OR\uff1b\u8fd9\u79cdlogic\u4e0d\u662f\u6700\u7b80\u5f62\u5f0f\uff0c\u6240\u4ee5\u6709Standard form :</p> <p>SOP :AB'C + B\uff0c\u6bcf\u4e2aproduct\u5fc5\u987b\u4e3a\u5355\u9879\u4e58\u79ef\uff0c\u4e5f\u5373\u6bcf\u4e2aMinterm\u4e2d\u53ef\u4ee5\u7f3a\u9879</p> <p>POS : (A+B)(A+C)\uff0c\u6bcf\u4e2asumt\u5fc5\u987b\u4e3a\u5355\u9879\u4e4b\u548c\uff0c\u4e5f\u5373\u6bcf\u4e2aMaxterm\u4e2d\u53ef\u4ee5\u7f3a\u9879</p> <p>Distinct cost criteria</p> <ol> <li>Literal cost\uff1aliteral (variable)\u7684\u6570\u91cf\uff0c\u4e5f\u5373\u7b2c\u4e00\u5c42\u7684\u5f15\u811a\u6570</li> <li>gate input cost\uff1a    + L (literal count)    + G (gate input count)\uff1a\u7ec4\u5408\u9879\u4e2a\u6570\uff08\u5355\u9879literal\u9664\u5916\uff09    + GN (gate input count with NOTs)\uff1aG+\u542b\u975eliteral\u7684\u4e2a\u6570\uff0c\u7531\u4e8e\u975e\u95e8\u4e00\u822c\u53ef\u5171\u4eab\uff0c\u6240\u4ee5\u6bcf\u79cd\u975eliteral\u7b97\u4e00\u6b21\u5373\u53ef</li> </ol> <p>\u5bf9\u4e8eSOP\u548cPOS\u8868\u8fbe\u5f0f\uff0c\u603b\u7684cost\uff08\u6216\u8005\u8bf4\u590d\u6742\u5ea6\uff09\u662f\u4e0b\u9762\u4e09\u8005\u4e4b\u548c\uff1a</p> <ol> <li>all literal appearances (L)</li> <li>the number of terms excluding single literal terms (G)</li> <li>optionally, the number of distinct complemented single literals (GN)</li> </ol> <p>Note: \u6700\u540e\u7ec4\u5408\u6210\u8868\u8fbe\u5f0fF\u4e0d\u7b97\u5728G\u4e2d</p> <p>\u200b   Example : $$ F=(\\bar{A}\\bar{C}+AC)(B+\\bar{D}) $$ \u200b   L\u5171\u67096\u4e2a\uff0cG=\u7b2c\u4e00\u4e2a\u62ec\u53f7\u4e2d\u76842\u4e2aterm+\u7b2c\u4e00\u4e2a\u62ec\u53f71\u4e2a\u6574\u4f53term+\u7b2c\u4e8c\u4e2a\u62ec\u53f71\u4e2a\u6574\u4f53term+L=10 $$ F=\\bar{A}\\bar{C}(B+\\bar{D})+AC(B+{D}) $$ \u200b   L\u5171\u67098\u4e2a\uff0cG=\u7b2c\u4e00\u4e2a\u62ec\u53f71\u4e2a\u6574\u4f53term+\u7b2c\u4e00\u98791\u4e2a\u6574\u4f53term+\u7b2c\u4e8c\u4e2a\u62ec\u53f71\u4e2a\u6574\u4f53term+\u7b2c\u4e8c\u98791\u4e2a\u6574\u4f53term+L=12</p>"},{"location":"courses/logic/logic/#optimization","title":"\u5e03\u5c14\u51fd\u6570\u7684\u6574\u4f53optimization\u6b65\u9aa4","text":"<ol> <li>\u5316\u4e3a==Canonical form==\uff0c\u5373SOM/POM</li> <li>\u753b\u51fa\u5361\u8bfa\u56fe (K-map)</li> <li>\u5229\u7528minimization theorem\u5f97\u5230==standard form== (SOP/POS)</li> <li>Optional\uff0cmultiple-level optimization\uff0c\u5408\u5e76\u540c\u7c7b\u9879</li> </ol> <p>\u5982\u4e0b\u56fe\uff1a</p> <p></p> <p>Minimization theorem: </p> <p>\\(XY+\\bar{X}Y=Y\\), and dual form \\((X+Y)(\\bar{X}+Y)=Y\\)</p> <p>\u5373\uff0c\u6d88\u6389 2<sup>n</sup> \u9879term\uff0c\u5f97\u5230 1 \u9879\u51cf\u5c11\u4e86n\u4f4dliteral\u7684term</p>"},{"location":"courses/logic/logic/#k-maps-and-truth-tables","title":"K-maps and truth tables","text":"<p>\u5361\u8bfa\u56fe(K-maps)\u662ftruth table\u7684\u4e00\u79cd\u4e8c\u7ef4\u6392\u5217\uff0c\u76f8\u90bb\u65b9\u5757\u5bf9\u5e94\u7684code\u53ea\u67091bit\u4e0d\u540c\u3002\u5361\u8bfa\u56fe\u7684\u884c\u548c\u5217\u90fd\u662f\u6309Gray code\u6765\u7f16\u6392\u7684\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u4e0a\u8ff0\u6761\u4ef6\u3002</p> <p>\u4e8c\u7ef4\u5361\u8bfa\u56fe</p> <p></p> <p>\u4e09\u7ef4\u5361\u8bfa\u56fe</p> <p></p> <p>\u66f4\u6e05\u695a\u7684\u8868\u8fbe\u65b9\u5f0f</p> <p></p> <p>\u5bf9\u4e8e3\u53d8\u91cf\u5361\u8bfa\u56fe</p> <ul> <li> <p>1\u4e2a\u65b9\u5757\u4ee3\u88681\u4e2a\u75313\u4e2a\u53d8\u91cf\u7ec4\u5408\u6210\u7684minterm</p> </li> <li> <p>2\u4e2a\u76f8\u90bb\u65b9\u5757\u4ee3\u88681\u4e2a\u75312\u4e2a\u53d8\u91cf\u7ec4\u5408\u6210\u7684term</p> </li> <li> <p>4\u4e2a\u76f8\u90bb\u65b9\u5757\u4ee3\u88681\u4e2asingle literal term</p> </li> </ul> <p>4\u53d8\u91cf\u5361\u8bfa\u56fe</p> <p></p> <p>5\u53d8\u91cf\u5361\u8bfa\u56fe\uff08\u62d3\u5c55\uff09</p> <p>\u5148\u753b\u51fa4\u53d8\u91cf\u5361\u8bfa\u56fe\uff0c\u7136\u540e\u518d\u5173\u4e8e\u7ad6\u7ebf\u7684\u753b\u4e00\u5e45\u955c\u50cf\u5bf9\u79f0\u5361\u8bfa\u56fe\uff0c\u5728\u4e24\u5f20\u5361\u8bfa\u56fe\u4e2d\u7684\u5206\u522b\u6807\u6ce8\u7b2c5\u4e2a\u53d8\u91cf\u4e3a0\u548c1\uff0c\u6bcf\u4e2aminterm\u76845\u4e2a\u76f8\u90bbterm\u5c31\u662f\u5355\u5f204\u53d8\u91cf\u5361\u8bfa\u56fe\u76844\u76f8\u90bbterm\u518d\u52a0\u4e0a\u955c\u50cf\u5bf9\u79f0\u7684term\u3002\u5982\u56fe\uff1a</p> <p></p> <p>Don't cares :\u5728\u5b9e\u9645\u4e2d\u4e0d\u4f1a\u51fa\u73b0\u7684term\uff0c\u5728K-map\u4e2d\u6807\u4e3ax\uff0c\u53ef\u4efb\u610f\u7f6e1\u6216\u7f6e0</p> <ol> <li>K-maps\u7b80\u5316\u7684\u539f\u5219:</li> </ol> <ul> <li>\u4e00\u6b21\u5708\u76f8\u90bb\u76842<sup>n</sup>\u4e2a\u9879\uff08\u4e00\u6392\u6216\u4e00\u5217\u62162x2\u65b9\u5757\u62162x4\u65b9\u5757\uff09</li> <li>\u9996\u5c3e\u53ef\u4ee5\u76f8\u63a5\uff08\u4e0a\u4e0b\u3001\u5de6\u53f3\u5728\u6298\u53e0\u540e\u76f8\u90bb\uff09</li> <li>\u5c3d\u53ef\u80fd\u5708\u6700\u5927\u7684</li> <li>\u4e24\u4e2a\u5708\u53ef\u4ee5\u91cd\u53e0\uff0c\u5373\u4e00\u4e2aminterm\u53ef\u4ee5duplicate</li> </ul> <p>Note: \u4e00\u822c\u4f1a\u8003\u5bdf4\u7ef4\uff0c\u53734\u4e2a\u53d8\u91cfWXYZ</p> <ol> <li>K-map\u7684\u597d\u5904\uff08\u7701\u6d41\uff1a\u673a\u68b0\u3001\u7cfb\u7edf\uff0c\u4e0d\u7528\u52a8\u8111\uff09</li> </ol> <ul> <li>\u66f4\u7b80\u5355\u3001\u4e0d\u6613\u51fa\u9519</li> <li>\u4e0d\u9700\u8981\u8bb0\u4f4f\u5e03\u5c14\u51fd\u6570\u7684\u5404\u79cd\u5b9a\u5f8b</li> <li>\u6b65\u9aa4\u66f4\u5c11</li> <li>\u603b\u80fd\u5316\u5230\u6700\u7b80</li> </ul> <ol> <li>K-map\u7684\u52a3\u52bf</li> </ol> <ul> <li>\u968f\u7740\u7ef4\u6570\u589e\u52a0\uff0c\u4f1a\u53d8\u5f97\u5f88\u590d\u6742</li> <li>\u5316\u6210\u7684\u6700\u7b80\u8868\u8fbe\u5f0f\u53ef\u80fd\u4e0d\u552f\u4e00\uff0c\u4f8b\u5982\u4e0b\u56fe</li> </ul> <p></p> <ul> <li>\u6700\u591a\u5316\u7b805\u53d8\u91cf\u8868\u8fbe\u5f0f</li> <li> <p>\u4e0d\u80fd\u5f62\u6210\u81ea\u52a8\u5316\u7684\u7b97\u6cd5 4. \u8574\u542b\u9879\u3001\u4e3b\u8574\u542b\u9879\u3001\u57fa\u672c\u4e3b\u8574\u542b\u9879 (implicants)</p> </li> <li></li> </ul> <p>\u5f02\u6216\u3001\u540c\u6216\u95e8</p> <ul> <li>\u6821\u9a8c</li> </ul> <ol> <li> <p>S\u653e\u5927\u5668(Buffer)</p> </li> <li> <p>\u4e09\u6001\u95e8(3-state Buffer)\uff1a\u591a\u4e2a\u4e09\u6001\u95e8\u7684output\u8fde\u5728\u4e00\u8d77\uff0c\u63a5\u5165bus</p> </li> </ol> <p>## Chapter3 Logic Design</p> <p>### Design Procedure\uff08\u7535\u8def\u8bbe\u8ba1\u6d41\u7a0b\uff09</p> <ol> <li> <p>specification</p> <p>\u89c4\u5b9ainput\u548coutput\u662f\u4ec0\u4e48\uff0c\u4ee5\u53ca\u5176\u5bf9\u5e94\u7684\u53d8\u91cf\uff0c\u54ea\u4e2a\u72b6\u6001\u5bf9\u5e94\u9ad8\u7535\u5e73\u3001\u54ea\u4e2a\u72b6\u6001\u5bf9\u5e94\u4f4e\u7535\u5e73</p> </li> <li> <p>formulation</p> <p>\u5199\u51fa\u5e03\u5c14\u51fd\u6570\u7684\u8868\u8fbe\u5f0f</p> </li> <li> <p>optimization</p> <p>\u903b\u8f91\u8868\u8fbe\u5f0f\u7684\u4f18\u5316</p> <p>2-level\u7535\u8def\u4f18\u5316\u5229\u7528\u5361\u8bfa\u56fe</p> <p>muti-level\u7535\u8def\u4f18\u5316\uff0c\u901a\u8fc7\u5171\u4eab\u4e0d\u540coutput\u53d8\u91cf\u4e4b\u95f4\u76f8\u540c\u7684term\uff1b\u4e5f\u53ef\u4ee5\u79f0\u4e3a\u53d8\u91cf\u4ee3\u6362(transformation)\uff0c\u89c1\u4e0b\u56fe\u4f8b\u5b50</p> <p></p> <p></p> </li> <li> <p>Technology mapping</p> <p>\u5de5\u827a\u6620\u5c04</p> </li> <li> <p>Verilog Programming</p> </li> </ol> <p>### Hierarchical Design\uff08\u5c42\u7ea7\u5316\u8bbe\u8ba1\uff09</p> <p>\u4e00\u822c\u7684\u8bbe\u8ba1\u6a21\u5f0f\u67092\u79cd\uff0c    + Top-down\uff08\u81ea\u9876\u5411\u4e0b\uff09\uff1a\u4ece\u62bd\u8c61\u7684\u9ad8\u5c42\u6b21\u8bbe\u8ba1\u9010\u7ea7\u5206\u89e3    + Bottom-up\uff08\u81ea\u5e95\u5411\u4e0a\uff09\uff1a\u4ece\u6700\u57fa\u672c\u7684\u529f\u80fd\u5757\u5f00\u59cb\u642d\u5efa\u66f4\u590d\u6742\u7535\u8def</p> <p>\u4f8b\u5b50\u89c1\u4e0b\u56fe</p> <p></p> <p>### Technology Parameters\uff08\u5de5\u827a\u53c2\u6570\uff09</p> <p>\u7528\u4e8e\u8861\u91cf\u96c6\u6210\u7535\u8def\u6027\u80fd\u7684\u53c2\u6570</p> <ol> <li> <p>Fan-in\u548cFan-out</p> <ul> <li> <p>Fan-in\uff1a \u4e00\u4e2a\u903b\u8f91\u95e8\u80fd\u63a5\u53d7\u7684input\u6570\u91cf\u4e0a\u9650</p> </li> <li> <p>Fan-out\uff1a\u4e00\u4e2aoutput\u53ef\u4ee5\u8fde\u63a5\u7684input\u6570\u91cf (load\uff0c\u8d1f\u8f7d)\u4e0a\u9650</p> </li> </ul> <p>Fan-out\u76842\u4e2a\u53c2\u6570\uff1a</p> <ol> <li> <p>standard load</p> <p>Fan-out\u53ef\u4ee5\u7528 standard load \u6765\u8861\u91cf\uff0c\u800c standard load \u662f\u6307\u4e00\u4e2a\u975e\u95e8\u8d21\u732e\u7684\u8d1f\u8f7d</p> </li> <li> <p>Transition time</p> <p>\u4e00\u4e2a\u903b\u8f91\u95e8\u7684output\u4eceH\u53d8\u5230L\uff08\u4eceL\u5230H\uff09\u6240\u9700\u7684\u65f6\u95f4\uff0c\u8bb0\u4f5ct<sub>HL</sub> (rise time)/t<sub>LH</sub> (fall time)</p> <p></p> </li> </ol> <p>Fan-out\u5373\uff1a\u5728\u672a\u8d85\u8fc7\u6700\u5927Transition time\u7684\u60c5\u51b5\u4e0b\uff0c\u80fd\u9a71\u52a8\u7684\u6700\u5927\u7684standard load\u6570\u91cf</p> </li> <li> <p>Propagation delay </p> <p>\u903b\u8f91\u95e8input\u6539\u53d8\u4f20\u64ad\u5230output\u6240\u9700\u65f6\u95f4\uff0c\u8bb0\u4f5ct<sub>PHL</sub>/t<sub>PLH</sub>\uff0c\u5176\u5747\u503c\u6216\u8f83\u5927\u503c\u8bb0\u4f5ct<sub>pd</sub></p> <p>\u6ce8\uff1aH\u5230L\u548cL\u5230H\u90fd\u662f\u76f8\u5bf9\u4e8eoutput\u800c\u8a00</p> <p></p> <p>\u4e24\u79cdinherent delay\u6a21\u578b\uff1a</p> <ul> <li> <p>Transport delay</p> <p>input\u7684\u6539\u53d8\u5728\u5b9a\u65f6\u957f\u540e\u4f20\u64ad\u5230output</p> </li> <li> <p>Inertial delay</p> <p>\u8003\u8651Transport delay\u540e\uff0cinput\u7684\u8109\u51b2\u8fd8\u5fc5\u987b\u6301\u7eed\u4e00\u5b9a\u65f6\u95f4\u624d\u80fd\u4f20\u64ad\u5230output\uff0c\u6700\u5c11\u6301\u7eed\u65f6\u95f4\u79f0\u4e3arejection time</p> </li> </ul> <p>\u4e24\u79cd\u6a21\u578b\u7684\u533a\u522b</p> <p></p> <p>\u9664\u53bbinherent delay\u5916\uff0cfan-out\u4e5f\u4f1a\u5f71\u54cdpropagation delay\uff0c\u4f8b\u5982t<sub>pd</sub> =0.07+ 0.021 SL</p> </li> <li> <p>Circuit delay</p> <p>\u7531\u4e8e\u5ef6\u65f6\u4e0d\u540c\uff0c\u51fa\u73b0\u7684\u6bdb\u523a(glitch)\uff0c\u672c\u8d28\u4e0a\u8fd8\u662f\u7531\u4e8epropagationdelay\u5bfc\u81f4</p> <p></p> </li> <li> <p>Cost</p> <p>\u4e0e\u903b\u8f91\u95e8\u5360\u636e\u7684\u533a\u57df (chip area) \u6210\u6b63\u6bd4</p> <p>Ignoring the wiring area, the gate area is roughly </p> <p>proportional to the gate input count</p> <p>\u5ffd\u7565wiring area\uff0cgate area\u5927\u7ea6\u4e0egate input\u6570\u6210\u6b63\u6bd4</p> </li> </ol> <p>### Positive and Negative Logic</p> <ul> <li> <p>Positive Logic</p> <ul> <li> <p>HIGH (more positive) signal\u8868\u793a1</p> </li> <li> <p>LOW (less positive) signal\u8868\u793a0 </p> </li> <li> <p>Negative Logic</p> </li> <li> <p>LOW (more negative) signal\u8868\u793a1</p> </li> <li>HIGH (less negative) signal\u8868\u793a0</li> </ul> </li> </ul> <p>\u6b63\u903b\u8f91\u7684\u4e0e\u95e8\u7535\u8def\u5b9e\u73b0\u548c\u8d1f\u903b\u8f91\u7684\u6216\u95e8\u7535\u8def\u5b9e\u73b0</p> <p>### Technological mapping</p> <p>\u5c06\u5de5\u827a\u65e0\u5173\u7684\u903b\u8f91\u63cf\u8ff0\u8f6c\u53d8\u6210\u7279\u5b9a\u5de5\u827a\u5b9e\u73b0\uff1b\u5b83\u662f\u903b\u8f91\u7efc\u5408\u7684\u91cd\u8981\u73af\u8282</p> <p>\u4e00\u4e2a\u5173\u952e\u64cd\u4f5c\u5c31\u662f\u8bc6\u522b\u903b\u8f91\u7b49\u4ef7\u5173\u7cfb (logic equivalence)\uff0c\u5c06\u521d\u59cb\u903b\u8f91\u63cf\u8ff0\u6620\u5c04\u4e3a\u76ee\u6807\u5de5\u827a</p> <ul> <li> <p>mapping to NAND</p> <ul> <li>\u5c06<code>AND</code>\u548c<code>OR</code>\u66ff\u6362\u4e3a<code>NAND</code>\u548c<code>NOT</code>\u95e8</li> </ul> <p></p> <ul> <li> <p>\u5c06<code>inverter</code>\u63a8\u5230fan-out\u7684\u591a\u6761\u652f\u8def\u4e2d\uff08\u964d\u4f4efan-out\uff09</p> </li> <li> <p>\u6d88\u53bb\u6210\u5bf9\u7684<code>inverter</code></p> </li> </ul> <p></p> <p></p> </li> <li> <p>mapping to NOR</p> <p>\u7c7b\u4f3c\u4e8emapping to NAND</p> </li> <li> <p>Verification</p> <ul> <li>\u624b\u52a8\u9a8c\u8bc1</li> <li>\u4eff\u771f</li> </ul> </li> </ul> <p>### Functional blocks</p> <p>\u57fa\u7840\u51fd\u6570\u5757\u6709value-fixing(F=0 or 1)\u3001transferring (F=X)\u3001inverting(F=X')\u3001Enabling(F=X*EN or F=X+EN')</p> <p>\u5bf9\u4e8eEnabling\u6765\u8bf4\uff0cEN\u4e3a1\u5219\u4f7f\u80fd\uff0c\u5141\u8bb8\u4fe1\u53f7\u901a\u8fc7\uff1bEN\u4e3a0\u5219\u4e0d\u4f7f\u80fd\uff0c\u6b64\u65f6output\u4e0d\u786e\u5b9a\uff0c\u53ef\u4e3a1\u53ef\u4e3a0\uff0c\u82e5\u91c7\u7528\u4e09\u6001\u95e8\u5b9e\u73b0\u5219\u5448\u73b0Hi-Z\uff08\u9ad8\u963b\u6001\uff09</p> <ol> <li> <p>Decoder\uff08\u8bd1\u7801\u5668\uff09</p> <p>\u5c06\u538b\u7f29\u7684\u7f16\u7801\u8f6c\u5316\u4e3a\u7a00\u758f\u7684\u7f16\u7801\uff0c\u5c11\u8f93\u5165-&gt;\u591a\u8f93\u51fa</p> <p>Variable decoder (Minterm detector)\uff1a\u5c06input\u5bf9\u5e94\u7684minterm\u9879\u5bf9\u5e94\u7684output\u8bbe\u4e3a1\uff0c\u6bcf\u79cdinput\u7ec4\u5408\u4ec5\u67091\u4f4doutput\u4e3a1</p> <p>\u5f53decoder\u7684\u8f93\u5165\u4f4d\u6570\u8fc7\u591a\u65f6\uff0c\u53ef\u91c7\u7528\u5c42\u7ea7\u8bbe\u8ba1(divide-and-conquer)</p> </li> <li> <p>Encoder\uff08\u7f16\u7801\u5668\uff09</p> <p>\u538b\u7f29\u91c7\u6837\u5f97\u5230\u7684\u4fe1\u606f\uff0c\u8282\u7701\u5e26\u5bbd</p> <p>\u6bcf\u6b21\u4ec5\u67091\u4f4dinput\u4e3a1</p> <p>\u72ec\u70ed\u7801-&gt;\u4e8c\u8fdb\u5236\u7801 or BCD\u7801</p> <p>Ex :</p> <ul> <li> <p>design with one-hot code : \u7528\u7279\u5f81\u4f4d\uff08\u53d8\u91cf\uff09\u4ee3\u66ff\u5361\u8bfa\u56fe\u8fdb\u884c\u8868\u8fbe\u5f0f\u4f18\u5316</p> </li> <li> <p>Priority encoder : selects the most significant input position</p> <p></p> </li> </ul> </li> <li> <p>Multiplexer\uff08\u4fe1\u53f7\u9009\u62e9\u5668\uff09</p> <p></p> <p>\u6784\u6210\uff1a</p> <ul> <li>infomation inputs : 2<sup>n</sup> bits</li> <li>Control signals (selection inputs): n bits</li> <li>Single output : 1 bits</li> </ul> <p>\u5b9e\u73b0\uff1a</p> <p>\u7528decoder + AND/OR gate\u5b9e\u73b0\uff0c\u901a\u8fc7decode Control signal\u6765enable</p> <p>Ex : 64-to-1-line Multiplexer</p> <p></p> <p>\u4e5f\u53ef\u4ee5\u8fdb\u884cMultiplexer Width Expansion\uff0c\u62d3\u5c55input\u7684\u4f4d\u5bbd\uff0c\u9009\u62e9\u5176\u4e2d\u4e00\u4e2a\u5411\u91cf\uff1b</p> <p>\u6b64\u5916\uff0cMUX\u4e5f\u53ef\u4ee5\u7528decoder + \u4e09\u6001\u95e8\u6765\u5b9e\u73b0\uff0c\u8282\u7701\u7a7a\u95f4\uff08\u4e09\u6001\u95e8\u81ea\u8eab\u7279\u6027\uff09</p> <p>\u529f\u80fd\uff1a</p> <p>n\u4f4d\u63a7\u5236\u4fe1\u53f7\u7684MUX\u53ef\u5b9e\u73b0n\u53d8\u91cf\u7684\u5e03\u5c14\u51fd\u6570</p> <ul> <li>\u5177\u4f53\u5b9e\u73b0\uff1a\u5bf9\u4e8e\u4e00\u4e2a\u51fd\u6570y\uff0c\u5c06MUX\u76f8\u5e94\u7684information input\u7aef\u53e3\u63a5\u5230\u771f\u503c\u8868\u4e2d\u5bf9\u5e94\u7684minterm\u7684\u51fd\u6570\u503c\uff080\u62161\uff09\uff0c\u5982\u4e0b\u56fe\u7684Y, Z</li> </ul> <p></p> <ul> <li> <p>\u4f18\u5316\uff1a\u53ef\u4ee5\u4f18\u5316\u4e3a(n-1)-to-1-line multiplexer\uff0c\u601d\u8def\u662f\u964d\u7ef4\u5361\u8bfa\u56fe</p> <ol> <li>\u524d(n-1)\u4e2a\u53d8\u91cf\u4f5c\u4e3aselection input</li> <li>\u6839\u636e\u8868\u8fbe\u5f0f\uff0c\u8bbe\u6700\u540e\u4e00\u4e2a\u53d8\u91cf\u4e3aX\uff0c\u6bcf\u4e00\u4e2ainformation input\u7aef\u53e3\u63a5\u51651/0/X/X'\u5176\u4e00</li> </ol> </li> <li> <p>\u76f8\u8f83\u4e8e\u95e8\u7535\u8def\u7684\u4f18\u70b9\uff1a</p> <p>\u5f53\u6211\u4eec\u60f3\u6539\u53d8\u529f\u80fd\uff0c\u6784\u9020\u4e00\u4e2a\u65b0\u51fd\u6570\u65f6\uff0c\u95e8\u7535\u8def\u65b9\u6cd5\u8981\u5927\u6539(OR gate level)\uff0c\u800cMUX\u53ea\u9700\u8981\u5c06information input\u7aef\u53e3\u6839\u636e\u771f\u503c\u8868\u8fdb\u884c\u6539\u53d8\uff0c\u66f4\u52a0\u7075\u6d3b</p> </li> </ul> </li> <li> <p>Demultiplexer\uff08\u4fe1\u53f7\u5206\u79bb\u5668\uff09</p> <p></p> <p>\u5982\u56fe\uff0csignal\u7531code\u63a7\u5236\uff0c\u4ece\u5176\u4e2d\u4e00\u8defoutput\u8f93\u51fa</p> <p>......</p> </li> </ol> <p>\u4e00\u4e2a\u901a\u4fe1\u7cfb\u7edf</p> <p></p>"},{"location":"courses/logic/logic/#programmable-implementation-technology","title":"Programmable implementation technology","text":"<p>Field programmable circuit : \u53ef\u7f16\u7a0b\u540e\u73b0\u573a\u751f\u6210\u7684\u7535\u8def</p> <p>3\u79cdprogramming technology\uff1a</p> <ul> <li> <p>control connections</p> </li> <li> <p>Control transistor switching</p> </li> <li> <p>Build lookup tables (LUT)</p> </li> </ul> <p></p> <p>Programmable Logic Device :</p> <ul> <li>ROM (Read-Only Memories)</li> <li>PAL (Programmable Array Logic)</li> <li>PLA (Programmable Logic Arrays)</li> <li>FPGA (Field Programmable Gate Array)</li> </ul> <p></p> <p>Logic symbols :</p> <p></p> <ul> <li>ROM : </li> </ul> <p></p> <p>size = 2<sup>3</sup> * 4 = 32</p>"},{"location":"courses/logic/logic/#arithmetic-functions","title":"Arithmetic functions","text":""},{"location":"courses/logic/logic/#sequential-circuit","title":"Sequential circuit","text":"<p>Def : <code>output , next state =  input + present state</code></p> <p>Model : </p> <p></p> <p>\u65f6\u5e8f\u7535\u8def\u53ef\u4ee5\u56fe\u4e2d\u5206\u4e3a\u51e0\u4e2a\u90e8\u5206\uff1a</p> <ul> <li> <p>\u7ec4\u5408\u7535\u8def\u90e8\u5206</p> </li> <li> <p>Inputs\uff1a</p> <ul> <li>\u5916\u90e8\u8f93\u5165</li> <li>\u5185\u90e8\u8f93\u5165\uff0c\u53c8\u79f0\u5f53\u524d\u72b6\u6001</li> </ul> </li> <li> <p>Outputs\uff1a</p> <ul> <li>\u8f93\u51fa\u4fe1\u53f7</li> <li>\u8f93\u5165\u5230\u5b58\u50a8\u5355\u5143(storage element)\u7684\u4fe1\u53f7\uff0c\u53c8\u79f0\u4e0b\u4e00\u72b6\u6001(Next State Input)</li> </ul> </li> <li> <p>\u65f6\u5e8f\u7535\u8def\u90e8\u5206</p> </li> <li> <p>\u5b58\u50a8\u5355\u5143\uff1aflip-flop\u6216\u8005latch</p> </li> </ul> <p>\u65f6\u5e8f\u7535\u8def\u7684\u7c7b\u578b\uff1a</p> <ol> <li>\u540c\u6b65\uff1a\u5b58\u50a8\u5355\u5143\u7684\u8f93\u5165\u4e2d\u6709clock\u8f93\u5165\uff0c\u53ea\u6709\u5728clock pulse\u65f6\u624d\u4f1a\u5b58\u6539\u53d8state\uff1b\u5728\u540c\u6b65\u7535\u8def\u4e2d\uff0c\u4fe1\u53f7\u53d8\u5316\u662f\u79bb\u6563\u7684</li> </ol> <p></p> <ol> <li>\u5f02\u6b65\uff1a\u5b58\u50a8\u5355\u5143\u7684\u72b6\u6001\u53ef\u4ee5\u5728\u4efb\u4f55\u65f6\u523b\u6539\u53d8</li> </ol> <p></p>"},{"location":"courses/logic/logic/#discrete-event-simulation","title":"Discrete Event Simulation","text":"<p>\u6a21\u62df\u6570\u5b57\u7535\u8def\u7684\u89c4\u5219\uff1a</p> <ul> <li>\u8f93\u5165\u7684\u53d8\u5316\u4f1a\u5f15\u8d77\u8f93\u51fa\u7684\u91cd\u65b0\u4f30\u503c\uff0c\u51b3\u5b9a\u662f\u5426\u6539\u53d8\u8f93\u51fa</li> <li>\u95e8\u7535\u8def\u5143\u4ef6\u88ab\u6a21\u62df\u6210\u5177\u6709\u56fa\u5b9a\u65f6\u5ef6\u7684\u7406\u60f3\u5668\u4ef6</li> <li>\u8f93\u5165\u7684\u53d8\u5316\u5728\u56fa\u5b9a\u65f6\u5ef6\u540e\u4f20\u9012\u7ed9\u8f93\u51fa</li> </ul> <p>conclusion in English:  At the time for a scheduled output change, the output value is changed along with any inputs it drives</p> <p>\u56e0\u65f6\u5ef6\u800c\u51fa\u73b0\u7684\u6bdb\u523a(Glitch)\u73b0\u8c61</p> <p></p>"},{"location":"courses/logic/logic/#storing-state","title":"Storing state","text":""},{"location":"courses/logic/logic/#oscillation-error","title":"Oscillation Error","text":"<p>\u5f53<code>S=0</code>\u65f6\uff0cY\u4f1a\u4ee5\u6781\u9ad8\u9891\u7387\u632f\u8361\uff0c\u8fd9\u79cd\u6709\u632f\u8361\u5668\u7684\u7535\u8def\u4e0d\u7a33\u5b9a(unstable)</p>"},{"location":"courses/logic/logic/#_2","title":"\u57fa\u672c\u7684\u72b6\u6001\u5b58\u50a8\u5668\u4ef6","text":""},{"location":"courses/logic/logic/#1-latch","title":"1. Latch","text":"<ul> <li> <p>RS Latch:</p> </li> <li> <p>\u4e0e\u975e\u95e8\u5b9e\u73b0\uff1a</p> <p></p> <p>\u4e0e\u975e\u95e8\u5bf9\"0\"\u654f\u611f\uff0c\u6240\u4ee5NAND\u5b9e\u73b0\u65f6input\u4e3a\\(\\bar{S}\\bar{R}\\)\uff0c\u56e0\u6b64\u5b83\u4e5f\u53eb\\(\\bar{S}\\bar{R}\\)\u9501\u6c89\u5668</p> </li> <li> <p>\u6216\u975e\u95e8\u5b9e\u73b0\uff1a</p> <p></p> <p>\u6ce8\u610f\u5230S\u5728\u4e0b\uff0cR\u5728\u4e0a\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1S\u7f6e\"1\"\u65f6Q\u4e3a\"1\"\uff0c\u5373Set\u6fc0\u6d3b\u65f6\u8fdb\u884cset\uff0c\u4e3a0\u65f6\u8fdb\u884creset</p> <p>\u4e0d\u7ba1\u662f\u4e0e\u975e\u8fd8\u662f\u6216\u975e\u5b9e\u73b0\uff0c\u53ea\u9700\u8bb0\u4f4fS=1\u65f6\uff0cQ\u4e3a1\u5373\u53ef\uff0c\u56e0\u4e3a\u8fd9\u7b26\u5408\u7f6e1\u662f\u89e6\u53d1\u6001\u7684\u76f4\u89c9</p> <p>==\u5b58\u7591\uff1a==\u53e6\u4e00\u4e2a\u53ef\u80fd\u6bd4\u8f83\u8ff7\u60d1\u7684\u70b9\u5728\u4e8eNAND\u5b9e\u73b0\u65f6\u4fdd\u6301\u6001\u7a76\u7adf\u662f</p> <p>\\(S=1,R=1\\)\u8fd8\u662f \\(\\bar{S}=1,\\bar{R}=1\\)\u3002</p> <p>\u548c\u4e0a\u9762\u6240\u8bf4\u76f8\u540c\uff0c\u7531\u4e8e\u7f6e1\u662f\u89e6\u53d1\u6001\uff0c\u6240\u4ee5\u4fdd\u6301\u5e94\u8be5\u662f\\(S=0,R=0\\)\uff0c\u4e5f\u5373\\(\\bar{S}=1,\\bar{R}=1\\)\u662f\u4fdd\u6301\u6001\uff0c\u8fd9\u8bf4\u660eNAND_SR latch\u7684\u771f\u503c\u8868\u9488\u5bf9\u7684\u662f\u5185\u90e8\u7684input\uff0c\u5728\u5c01\u88c5\u8d77\u6765\u540e\uff0c\u5c31\u662f\u7b26\u5408\u6211\u4eec\u76f4\u89c9\u7684\u90a3\u79cd\u60c5\u51b5\u3002</p> <p>\uff08\u8bf4\u5230\u5e95\u5c31\u662f\u770bS=1\u63a8\u51faQ=1\u5c31\u884c\u4e86\uff09</p> <p>\u4e24\u79cdSR latch\u7684\u5143\u4ef6\u56fe\uff1a\uff08\u5de6NOR\uff0c\u53f3NAND\uff0c\u770bbubbles\u53ef\u77e5\uff09</p> <p></p> </li> <li> <p>\u7981\u7528\u6001\u662f\u672a\u5b9a\u4e49\u7684\uff0c\u56e0\u4e3a\u5b9e\u9645\u4e2d\u5b83\u4f1a\u5bfc\u81f4critical race\uff0c\u6b64\u65f6next state\u5c31undefined</p> </li> <li> <p>\u4e9a\u7a33\u6001 (Metastable State)\uff1a\u5b9e\u9645\u4e2d\u5728\u4fe1\u53f7\u4e0d\u591f\u663e\u8457\u65f6\u53ef\u80fd\u4f1a\u51fa\u73b0\u7684\u7b2c\u4e09\u6001\uff08\u9664\u89e6\u53d1\u6001\u548c\u4fdd\u6301\u6001\u5916\uff09\uff0c\u53c8\u662f\u5c5e\u4e8e\u6a21\u62df\u7535\u8def\u7684\u95ee\u9898 (x)</p> <p></p> </li> <li> <p>\u907f\u514doscillation\u548cmetastate\u7684\u65b9\u6cd5</p> <ol> <li>\u4e0d\u8981\u540c\u65f6\u6539\u53d8S\u3001R\uff0c\u907f\u514d\u632f\u8361</li> <li>\u6539\u53d8\u67d0\u4fe1\u53f7\u540e\u4e0d\u8981\u7acb\u523b\u518d\u6b21\u6539\u53d8\uff0c\u8ba9\u5b83\u7a33\u5b9a\u540e\u5728\u540e\u7eed\u64cd\u4f5c\uff0c\u907f\u514d\u4e9a\u7a33\u6001</li> </ol> </li> <li> <p>Clocked SR latch: \u4e3a\u4e86\u8ba9SR latch\u540c\u6b65\u5316\uff0c\u53ea\u5728C=1\u65f6\u624d\u4f1a\u5bf9S\u3001R\u91c7\u6837</p> </li> </ul> <p>\u7535\u8def\u56fe</p> <p></p> <p>\u5143\u4ef6\u56fe\uff08\u4e0b\u56fe\u6709\u8bef\uff0c\u56e0\u4e3a\u53f3\u8fb9\u7684\u76f4\u89d2\u8bb0\u53f7\u4ee3\u8868\u5ef6\u8fdf\u8f93\u51fa\uff0c\u5373MS\u89e6\u53d1\u5668\u7684\u7279\u5f81\uff09</p> <p></p> <ul> <li>D Latch: \u628aCSR latch\u7684S\u3001R\u7528\u4e00\u4e2aD\u63a5\u53e3\u8fde\u63a5\uff0c\u5e76\u7528\u975e\u95e8\u63a7\u5236\uff0c\u8fd9\u6837\u5728C=0\u65f6\u5373\u4fdd\u6301\u6001\uff0c\u800c\u4e14\u53ef\u4ee5\u5b9e\u73b0\u540c\u6b65\u5316\u7684\u91c7\u6837\u3002\u8fd9\u6837\u4fdd\u8bc1S\u3001R\u4e0d\u4f1a\u540c\u65f6\u7f6e\u4f4d</li> </ul> <p>\u5143\u4ef6\u56fe\u548c\u7535\u8def\u56fe\uff1a</p> <p></p>"},{"location":"courses/logic/logic/#2flip-flop","title":"2.Flip-Flop","text":"<p>\u8003\u8651\u4e8c\u8fdb\u5236\u8ba1\u6570\u5668\uff0c\u6211\u4eec\u5e0c\u671b\u5728\u4e00\u4e2aclock\u5468\u671f\u7684\u6709\u6548\u671f\u5185\u4ec5\u7ffb\u8f6c1\u6b21\uff0c\u907f\u514d\u7a7a\u7ffb\uff08\u7c7b\u4f3c\u4e8e\u632f\u8361\uff09\uff0c\u5373\u8f93\u51fa\u7684\u53d8\u5316\u4e0d\u4f1a\u7acb\u523b\u4f20\u9012\u7ed9\u8f93\u5165</p> <p></p> <p>\u4e3a\u4e86\u89e3\u51b3\u6b64\u95ee\u9898\uff0c\u6211\u4eec\u5e0c\u671b\u6682\u65f6\u5730\u6253\u65ad\u8f93\u51fa\u5230\u8f93\u5165\u7684\u56de\u8def\u3002\u4e8e\u662f\uff0c\u53ef\u4ee5\u7528Master-slave flip-flop\u548cedge-triggered flip-flop\u6765\u66ff\u4ee3\u5355\u7eaf\u7684latch\uff1a</p> <ul> <li>Master-slave flip-flop\uff1a\u4e00\u79cdlevel-triggered\uff08\u7535\u5e73\u89e6\u53d1\uff09\u7684\u89e6\u53d1\u5668</li> </ul> <p></p> <p>Master\u8d1f\u8d23\u5728Clock=1\u65f6\u8bfb\u5165\u8f93\u5165\u6570\u636e\uff0cSlave\u8d1f\u8d23\u5728Clock=0\u65f6\u63a5\u6536Master\u8bfb\u5165\u7684\u6570\u636e\uff0c\u5e76\u53cd\u5e94\u5728\u8f93\u51fa\u4e2d\u3002\u8f93\u51fa\u5230\u8f93\u5165\u7684\u56de\u8def\u7531\u4e8e\u65f6\u949f\u4fe1\u53f7\u7684\u4e0d\u540c\u800c\u88ab\u5207\u65ad</p> <p>\u7f3a\u70b9\uff1aMS\u89e6\u53d1\u5668\u5b58\u5728\u4e00\u6b21\u91c7\u6837\u95ee\u9898\uff0c\u5728\u4ea7\u751f\u6bdb\u523a\u65f6\u4e0d\u7a33\u5b9a</p> <p></p> <p>\u4f8b\uff1a\u4e0a\u56fe\u4e2d\uff0c\u7b2c\u4e00\u4e2aglitch\u6765\u81eaS\uff0c\u4f46\u968f\u540e\u88abR\u7684glitch\u62b5\u6d88\uff0c\u6240\u4ee5\u4ec5\u4ec5Q-M\u51fa\u73b0\u4e00\u6bb5\u6bdb\u523a\uff0c\u65e0\u5927\u95ee\u9898\uff1b\u4f46S\u7684\u7b2c\u4e8c\u4e2aglitch\u5219\u76f4\u63a5\u5bfc\u81f4Q-M\u75310\u53d81\uff0c\u6700\u7ec8\u53cd\u6620\u5230Q-S\u8f93\u51fa\u4e2d</p> <p>\u6211\u4eec\u5e0c\u671b\u6bdb\u523a\u4e0d\u4f1a\u5f71\u54cd\u6700\u7ec8\u7ed3\u679c\uff0c\u5373\u907f\u514d\u4e00\u6b21\u91c7\u6837\u95ee\u9898\u3002\u4e8e\u662f\u4f1a\u8003\u86512\u79cdsolution\uff1a</p> <ol> <li> <p>\u51cf\u5c11\u8f93\u5165\u6570\u91cf\uff0c\u5c06SR\u89e6\u53d1\u5668\u6539\u4e3aD\u89e6\u53d1\u5668</p> <p></p> <p></p> <p>\u91c7\u7528D\u89e6\u53d1\u5668\uff0c\u8f93\u51fa\u7684\u53d8\u5316\u53d6\u51b3\u4e8e\u8109\u51b2\u8d1f\u8fb9\u6cbf\uff08\u5373clock\u75311\u53d80\uff09\u65f6\u7684\u8f93\u5165\u4fe1\u53f7\uff1b</p> <p>\u5f53\u7136\uff0c\u4e5f\u6709negative-level triggered\uff08\u8f93\u51fa\u53d8\u5316\u53d6\u51b3\u4e8e\u8109\u51b2\u6b63\u8fb9\u6cbf\uff09\u7684D\u89e6\u53d1\u5668</p> <p></p> </li> <li> <p>\u51cf\u5c11\u91c7\u6837\u7a97\u53e3\uff08\u65f6\u95f4\uff09\uff0c\u91c7\u7528\u8fb9\u6cbf\u89e6\u53d1(edge-triggered)\u800c\u975e\u7535\u5e73\u89e6\u53d1\uff0c\u8fd9\u5c31\u662f\u63a5\u4e0b\u6765\u8981\u8bb2\u7684\u8fb9\u6cbf\u89e6\u53d1\u5668</p> </li> </ol> <ul> <li>edge-triggered flip-flop\uff1a\u4e00\u79cd\u7535\u5e73\u8fb9\u6cbf\u89e6\u53d1\u7684\u89e6\u53d1\u5668</li> </ul> <p></p> <p></p> <p></p> <p>\u8fb9\u6cbf\u89e6\u53d1\u5668\u4e5f\u53ef\u4ee5\u5f3a\u884c\u5b9e\u73b0\u5f02\u6b65\uff0c\u5373R\u6216S\u7f6e0\u65f6\uff0c\u4e0d\u7ba1clock\u4fe1\u53f7\u5982\u4f55\uff0c\u76f4\u63a5\u8fdb\u5165reset\u6216set</p> <ul> <li>flip-flop\u53c2\u6570</li> </ul> <ol> <li> <p>setup time:\u5728\u65f6\u949f\u8109\u51b2\u5230\u6765\u524d\u9700\u8981\u5c06\u7a33\u5b9a\u7684\u8f93\u5165\u4fe1\u53f7\u7ef4\u6301\u4e00\u5b9a\u65f6\u95f4\uff0c\u53eb\u505aset up time\uff0c\u5426\u5219\u4f1a\u4f7f\u89e6\u53d1\u5668\u9677\u5165\u4e9a\u7a33\u6001</p> </li> <li> <p>hold time:\u5728\u65f6\u949f\u8109\u51b2\u5230\u6765\u540e\u9700\u8981\u7ef4\u6301\u4e00\u6bb5\u65f6\u95f4\u7a33\u5b9a\u7684\u8f93\u5165\u4fe1\u53f7\uff0c\u4f7f\u89e6\u53d1\u5668\u5145\u5206\u91c7\u6837</p> </li> <li> <p>propagation delay:\u7c7b\u4f3c\u4e8e\u95e8\u7535\u8def\u4e2d\u7684\u4f20\u64ad\u65f6\u5ef6\uff0c\u53ea\u4e0d\u8fc7\u6b64\u5904\u5728\u65f6\u5e8f\u7535\u8def\u4e2d\u662f\u65f6\u949f\u89e6\u53d1\u8fb9\u6cbf\u5f00\u59cb\u5230\u8f93\u51fa\u53d8\u5316\u6240\u9700\u65f6\u95f4</p> <p></p> <p></p> <p>note: </p> <p>setup time\u5bf9\u4e8eMS\u89e6\u53d1\u5668\uff0c\u5373\u7535\u5e73\u89e6\u53d1\u6765\u8bf4\uff0c\u9700\u8981\u7b49\u4e8e\u6574\u4e2a\u8109\u51b2\u5bbd\u5ea6\uff1b\u800c\u5bf9\u4e8e\u8fb9\u6cbf\u89e6\u53d1\u6765\u8bf4\uff0c\u53ea\u9700\u8981\u5728\u8109\u51b2\u7ed3\u675f\u524d\u4e00\u5c0f\u6bb5\u65f6\u95f4\u5373\u53ef\uff1b</p> <p>hold time\u4e00\u822c\u5c0f\u4e8e\u4f20\u64ad\u5ef6\u8fdf\uff0c\u4e5f\u7ecf\u5e38\u8bbe\u4e3a0\uff1b</p> </li> </ol>"},{"location":"courses/logic/logic/#3-latchflipflopbig-picture","title":"3. \u4f18\u5316latch\u548cflipflop\u7684\u5927\u81f4\u601d\u8def(Big picture)","text":"<p>\u200b   \u6709\u65f6\u95f4\u518d\u603b\u7ed3\u4e00\u4e0b\u5427......</p> <p></p>"},{"location":"courses/logic/logic/#sequential-circuit-analysis","title":"Sequential circuit analysis","text":"<ul> <li>\u603b\u4f53\u6a21\u578b   1. \u5f53\u524d\u72b6\u6001(current state)\uff1a\u5b58\u50a8\u5728\u4e00\u7cfb\u5217\u7684flipflop\u4e2d\uff0c\u5373\u5728 t \u65f6\u523b\u7684\u72b6\u6001   2. \u4e0b\u4e00\u72b6\u6001\u8f93\u5165(next state input)\uff1a= \u5f53\u524d\u72b6\u6001 (current state)+ \u8f93\u5165(input)   3. \u4e0b\u4e00\u72b6\u6001(next state)\uff1a= \u7531\u4e0b\u4e00\u72b6\u6001\u8f93\u5165\u51b3\u5b9a \uff0c\u5373\u5728(t+1)\u65f6\u523b\u7684\u72b6\u6001   4. \u8f93\u51fa\uff1a= \u5f53\u524d\u72b6\u6001 + \u8f93\u5165</li> </ul> <ul> <li>\u65f6\u5e8f\u7535\u8def\u7684\u5206\u6790\u5305\u62ec</li> </ul> <ol> <li> <p>\u5206\u6790\u529f\u80fd\uff1a\u7528\u72b6\u6001\u8868\u3001\u72b6\u6001\u56fe\uff08\u72b6\u6001\u673a\uff09\u3001\u8f93\u5165\u8f93\u51fa\u8868\u8fbe\u5f0f\u7b49\u65b9\u5f0f\u8fdb\u884c\u7535\u8def\u529f\u80fd\u7684\u5206\u6790</p> </li> <li> <p>\u786e\u5b9a\u65f6\u95f4\u9650\u5236(timing constraints)\u3002\u914d\u5408\u4e0a\u56fe\u8fdb\u884c\u7406\u89e3\uff0c\u5373\u6574\u4e2a\u7535\u8def\u4ecenext state input\u5728\u65f6\u949f\u89e6\u53d1\u8fb9\u6cbf\u88ab\u63a5\u6536\u5230\u4e0b\u4e00\u4e2anext state input\u51c6\u5907\u5c31\u7eea\u6240\u9700\u7684\u6700\u957f\u65f6\u95f4\uff0c\u8fd9\u671f\u95f4\u4fe1\u53f7\u9700\u8981\u7ecf\u5386flipflop\u3001\u7ec4\u5408\u7535\u8def\u6a21\u5757\uff0c\u6700\u7ec8\u4f20\u5230\u65f6\u5e8f\u7535\u8def\u7684\u8f93\u5165</p> </li> </ol> <ul> <li> <p>\u5206\u6790\u529f\u80fd\u7684\u57fa\u672c\u6b65\u9aa4\uff1a</p> <ol> <li>\u5f97\u5230\u8f93\u5165\u65b9\u7a0b\u3001\u8f93\u51fa\u65b9\u7a0b\u3001\u4e0b\u4e00\u72b6\u6001\u65b9\u7a0b</li> <li>\u6839\u636e\u65b9\u7a0b\u5217\u51fa\u72b6\u6001\u8868\uff08\u6709\u72b6\u6001\u53d8\u91cf\u7684\u771f\u503c\u8868\uff09\uff0c\u5176\u4e2d\u8f93\u5165\u5305\u62ecinput\u3001present state\uff1b\u8f93\u51fa\u5305\u62ecnext state\u3001output\u3002state\u7684\u63cf\u8ff0\u5305\u62ec\u6240\u6709flipflop\u7684\u8f93\u5165\u548c\u8f93\u51fa</li> <li>\u6839\u636e\u72b6\u6001\u8868\u753b\u51fa\u72b6\u6001\u56fe(state diagram)</li> <li>\u5206\u6790\u7535\u8def\u6027\u80fd\uff0c\u9a8c\u8bc1\u6b63\u786e\u6027\uff0c\u5305\u62ecself recovery capability and draw the timing parameter\uff1f</li> </ol> <p>\u4f8b\u5b50\uff1a</p> <ol> <li>\u6b65\u9aa41\uff1a\u5f97\u5230\u65b9\u7a0b</li> </ol> <p></p> <p> \u4e0a\u56fe\u4e2d\uff0cA(t)\u3001B(t)\u4e3a\u5f53\u524d\u72b6\u6001\u53d8\u91cf\uff0cx(t)\u4e3a\u8f93\u5165\uff1by(t)\u4e3a\u8f93\u51fa\uff0cA(t+1)\u3001B(t+1)\u4e3a\u4e0b\u4e00\u72b6\u6001</p> <ol> <li>\u6b65\u9aa42\uff1a\u753b\u51fa\u72b6\u6001\u8868</li> </ol> <p></p> <p></p> <p>\u7528\u683c\u96f7\u7801\u548c\u4e8c\u7ef4\u8868\u4ee5\u4fbf\u66f4\u597d\u7684\u4e0e\u5361\u8bfa\u56fe\u8fdb\u884c\u5339\u914d</p> <ol> <li>\u72b6\u6001\u56fe\uff1a\u72b6\u6001\u56fe\u75313\u90e8\u5206\u7ec4\u6210</li> </ol> <ul> <li>\u5706\u5708\u8868\u793a\u4e00\u4e2a\u72b6\u6001,\u5706\u5708\u4e0a\u6807\u6709\u72b6\u6001\u540dor\u72b6\u6001\u7f16\u7801</li> <li>\u6709\u5411\u5f27\u8868\u793a\u7531\u5f53\u524d\u72b6\u6001\u5411\u4e0b\u4e00\u72b6\u6001\u7684\u8f6c\u79fb</li> <li>\u6bcf\u4e00\u6bb5\u6709\u5411\u5f27\u4e0a\u7684\u6807\u7b7e\u5305\u62ec\u5bf9\u5e94\u7684input\uff0c\u6709\u65f6\u4f1a\u5305\u62ec\u8f93\u51fa(mealy)\uff1b\u5706\u5708\u5185\u7684\u6807\u7b7e\u8868\u793a\u7279\u5b9a\u72b6\u6001\u7684\u8f93\u51fa(moore)</li> </ul> <p>\u6839\u636e\u5f71\u54cd\u8f93\u51fa\u7684\u56e0\u7d20\uff0c\u53ef\u4ee5\u5c06\u72b6\u6001\u56fe\u5206\u4e3a\u7c73\u52d2\u578b(Mealy type machine)\u548c\u6469\u5c14\u578b(Moore type machine)</p> <ul> <li>\u7c73\u52d2\u578b\u673a\u5668\u7684output = input &amp; present state\uff0c\u56e0\u6b64ouput\u6807\u5728\u6709\u5411\u5f27\u4e0a</li> <li>\u6469\u5c14\u578b\u673a\u5668\u7684output\u4ec5\u53d6\u51b3\u4e8epresent state\uff0c\u56e0\u6b64output\u6807\u5728\u5706\u5708\u91cc\u3002\u5f53\u524d\u72b6\u6001\u786e\u5b9a\uff0coutput\u4e5f\u5c31\u786e\u5b9a</li> </ul> <p></p> <p>\u5bf9\u4e8e\u4e0a\u9762\u7684\u4f8b\u5b50\u6765\u8bf4\uff0c\u5b83\u9002\u5408\u7528\u7c73\u52d2\u578b\u8868\u793a\uff1a</p> <p></p> <ul> <li>\u7b49\u4ef7\u72b6\u6001\uff1a\u82e5\u4e24\u4e2a\u72b6\u6001\u5bf9\u4efb\u610f\u4e00\u79cdinput\uff0c\u5f97\u5230\u7684next state\u548coutput\u90fd\u4e00\u6837\uff0c\u90a3\u4e48\u8fd9\u4e24\u72b6\u6001\u7b49\u4ef7\u3002\u7b49\u4ef7\u72b6\u6001\u7684\u51fa\u73b0\u5141\u8bb8\u6211\u4eec\u5c06\u5176\u5408\u5e76\u6210\u4e00\u4e2a\u72b6\u6001\uff0c\u51cf\u5c11\u4e0d\u5fc5\u8981\u7684\u72b6\u6001\u6570\u91cf</li> </ul> <ol> <li>Moore and Mealy\u6a21\u578b</li> </ol> <p>\u4e24\u79cd\u7535\u8def\u6a21\u578b\uff0c\u5c31\u662f\u4e0a\u8ff0\u7684\u4e24\u79cd\u673a\u5668\u7c7b\u578b</p> <p>\u6469\u5c14\u578b\uff1a\u6709\u5411\u5f27\u4e0a\u7684\u6807\u7b7e\u683c\u5f0f\u4e3a\uff1ainput</p> <p></p> <p>\u7c73\u52d2\u578b\uff1a\u6709\u5411\u5f27\u4e0a\u7684\u6807\u7b7e\u683c\u5f0f\u4e3a\uff1ainput/output</p> <p></p> <ol> <li>\u65f6\u9650\u5206\u6790(Timing Analysis of Sequential Circuits)</li> </ol> <p>\u65f6\u9650\u7684\u5206\u6790\u80fd\u591f\u786e\u5b9a\u7535\u8def\u7684\u6700\u9ad8\u800c\u4e0d\u4f1a\u51fa\u9519\u7684\u9891\u7387</p> <p>\u65f6\u9650\u7684\u6210\u5206\uff1a</p> <p></p> <p>\u677e\u5f1b\u65f6\u95f4(slack time)\u4e3a\u7535\u8def\u65f6\u9650\u63d0\u4f9b\u4e86\u4e00\u5b9a\u7684\u9009\u62e9\u7a7a\u95f4</p> </li> </ul>"},{"location":"courses/logic/logic/#jk-flipflop","title":"JK Flipflop","text":"<p>\u548cMS\u4e3b\u4ece\u89e6\u53d1\u5668\u7c7b\u4f3c\uff0c\u9664\u4e86J=K=1\uff08\u7981\u7528\u6001\uff09\u662f\u5141\u8bb8\u7684\uff0c\u6b64\u65f6output\u4f1a\u7ffb\u8f6c\uff0c       </p>"},{"location":"courses/logic/logic/#t-flipflop","title":"T Flipflop","text":"<p>\u5206\u6790\uff1aCharacteristic Table\u3001Characteristic Equation\uff0c\u7ed9\u5b9ainput\u548cpresent state\uff0c\u5199\u51fanext state</p> <p>\u8bbe\u8ba1\uff1aExcitation Equation\uff0c\u5bf9\u4e8e\u7279\u5b9a\u7684present state\u3001next state\u7ec4\u5408\uff0c\u9700\u8981\u4ec0\u4e48\u6837\u7684input</p> <p>FlipFlop\u8f6c\u6362\u6280\u672f</p>"},{"location":"courses/logic/logic/#chap6","title":"Chap6 \u5bc4\u5b58\u5668\u548c\u5bc4\u5b58\u5668\u4f20\u8f93","text":"<p>\u5bc4\u5b58\u5668\u662f\u5728\u89e6\u53d1\u5668\u57fa\u7840\u4e0a\u6dfb\u52a0\u4e00\u4e9b\u65b0\u529f\u80fd</p> <p>\u63a7\u5236\u4fe1\u53f7\uff1aload</p> <ol> <li> <p>load\u4f5c\u4e3a\u65f6\u949f\u7684\u4f7f\u80fd\u4fe1\u53f7\uff0c\\(gated\\ clock = clock + \\bar{load}\\)</p> </li> <li> <p>load\u4f5c\u4e3a\u9009\u62e9\u4fe1\u53f7\uff0c\u9009\u62e9store(remain)\u8fd8\u662fload(update)</p> </li> </ol>"},{"location":"courses/logic/logic/#datapath-and-control-unit","title":"Datapath and Control unit","text":"<p>Register transfer operation</p> <ul> <li>set of register</li> <li>elementary operation</li> <li>control of operation</li> </ul> <p>microoperation:</p> <p>transfer model:</p> <p>multiplexer, dedicated...</p> <p>\u4e0d\u540c\u529f\u80fd\u7684register</p> <p>counter\u3001</p> <p>synchronous BCD counter\uff1aself healing ability\uff0c\u4f18\u5316\u540e\u7684\u6b63\u786e\u6027\u9a8c\u8bc1</p> <p>\u4e00\u4e2a\u5bc4\u5b58\u5668\u5355\u5143\u7684\u9700\u6c42\u5305\u62ec\uff1a</p> <ol> <li>\u5bc4\u5b58\u5668\u529f\u80fd</li> </ol> <p>\u683c\u5f0f\uff1a<code>\u6761\u4ef6\uff1a\u5bc4\u5b58\u5668A &lt;- \u8fd0\u7b97\u8868\u8fbe\u5f0f</code></p> <ol> <li> <p>\u8f93\u5165\u63a7\u5236\u4fe1\u53f7</p> </li> <li> <p>\u8f93\u5165\u6570\u636e</p> </li> </ol> <p>\u8f93\u5165\u6765\u6e90\u5373\u8fd0\u7b97\u8868\u8fbe\u5f0f</p> <p>\u200b   \u5bc4\u5b58\u5668\u5355\u5143\u8bbe\u8ba1\u65b9\u6cd5\uff1a</p> <ol> <li> <p>MUX\u65b9\u6cd5\uff1a\u4e0d\u540c\u63a7\u5236\u4fe1\u53f7\u201c\u6216\u201d\u8d77\u6765\u63a5\u5230load</p> </li> <li> <p>\u65f6\u5e8f\u7535\u8def\u8bbe\u8ba1\u6cd5\uff1a</p> </li> </ol>"},{"location":"courses/logic/logic/#chap7-memory-basics","title":"Chap7 Memory basics","text":"<p>\u5185\u5b58\u5b9a\u4e49\uff1a</p> <p>\u5185\u5b58\u67b6\u6784\uff1a</p> <p>Memory depth(words)\uff1a\u5730\u5740\u6570\u91cf\uff0c\u53c8\u79f0\u5730\u5740\u5bbd\u5ea6\uff1f</p> <p>Memory width\uff1a\u6bcf\u4e2a\u5730\u5740\u4e2d\u5b58\u50a8\u7684\u6570\u636e\u6709\u51e0\u4f4d\uff0c\u4e5f\u5c31\u662fbits per word</p> <p>Memory size\uff1a<code>memory_Size = memory_Depth * memory_Width</code></p> <p>\u4f8b\uff1a2K*8</p> <p>\u5185\u5b58\u5757\u7684\u7ed3\u6784\uff1a</p> <ul> <li>\u7247\u9009\u4fe1\u53f7(Chip select / Chip enable)\uff1a\u4f7f\u80fd\u5185\u5b58\u5757</li> </ul> <p>\u73b0\u5b9e\u4e2d\uff0c\u5185\u5b58\u662f\u591a\u5757\u5185\u5b58\u82af\u7247\u5806\u53e0\u8d77\u6765\u7684</p>"},{"location":"courses/oop/oop/","title":"OOP\u7b14\u8bb0","text":""},{"location":"courses/oop/oop/#io-streams","title":"I/O streams","text":"<p>istream\u548costream\u7684\u56fe\u793a</p> Info <p></p>"},{"location":"courses/oop/oop/#operators","title":"operators","text":"<p>The operator <code>&lt;&lt;</code> is used as an output operator on objects of type <code>ostream</code>; The operator <code>&gt;&gt;</code> is used as an input operator determines what input is accepted and what is the target of the input operation;</p>"},{"location":"courses/oop/oop/#_1","title":"<code>&gt;&gt;</code>\u7684\u8bfb\u5165\u89c4\u5219","text":"<p>\u82e5\u8bfb\u5165\u7c7b\u578b\u4e3ainteger\uff0c\u5219\u8bfb\u5165\u7ec8\u6b62\u4e8e\u975edigit\u5b57\u7b26\uff1b\u82e5\u8bfb\u5165string\uff0c\u5219\u7ec8\u6b62\u4e8e\u7a7a\u683c\u6216\u56de\u8f66</p> <p>\u4e5f\u53ef\u4ee5\u7528\u5982<code>getline(cin,str)</code>\u6765\u8bfb\u5165\u4e00\u6574\u884c\uff0c\u5e76\u629b\u5f03\u6389\u672b\u5c3e\u7684newline</p>"},{"location":"courses/oop/oop/#io-state","title":"IO state","text":"<p><code>int i; while(cin &gt;&gt; i);</code>\u4f1a\u8bfb\u5165i\u76f4\u5230\u8bfb\u5165\u5931\u8d25\u4e3a\u6b62\uff0c\u5f7c\u65f6<code>cin &gt;&gt; i</code>\u4f1areturn false\uff0c\u800c\u4e14<code>cin.fail()</code>\u4f1areturn true\uff0c\u8868\u660eistream\u65e0\u6cd5\u8bfb\u53d6\u4e0b\u4e00\u4e2a\uff1b\u6b64\u65f6\u53ef\u4ee5\u901a\u8fc7<code>cin.clear()</code>\u6765\u91cd\u65b0\u8bbe\u7f6eistream\u7684\u72b6\u6001</p>"},{"location":"courses/oop/oop/#io-of-user-defined-types","title":"I/O of User-Defined Types","text":"<p>\u4f8b\u5b50\uff1a <pre><code>struct Entry {\n    string name;\n    int number;\n};\n\nostream&amp; operator&lt;&lt;(ostream&amp; os, const Entry&amp; e)\n{\n    return os &lt;&lt; \"{\\\"\" &lt;&lt; e.name &lt;&lt; \"\\\", \" &lt;&lt; e.number &lt;&lt; \"}\";\n}\n\nistream&amp; operator&gt;&gt;(istream&amp; is, Entry&amp; e)\n// read { \"name\" , number } pair. Note: formatted with { \" \" , and }\n{\n    char c, c2;\n    if (is&gt;&gt;c &amp;&amp; c=='{' &amp;&amp; is&gt;&gt;c2 &amp;&amp; c2=='\"') { // star t with a { \"\n        string name; // the default value of a string is the empty string: \"\"\n        while (is.get(c) &amp;&amp; c!='\"') // anything before a \" is part of the name\n        name+=c;\n        if (is&gt;&gt;c &amp;&amp; c==',') {\n            int number = 0;\n            if (is&gt;&gt;number&gt;&gt;c &amp;&amp; c=='}') { // read the number and a }\n                e = {name ,number}; // assign to the entry\n                return is;\n            }\n        }\n    }\n    is.state_base::failbit; // register the failure in the stream\n    return is;\n}\n</code></pre></p>"},{"location":"courses/oop/oop/#formatting","title":"Formatting","text":"<p>\u6700\u7b80\u5355\u7684formatting controls\u662fmanipulators\uff0c\u5728, , \u548c  (for manipulators that take arguments)\u4e2d + \u4f8b\u5b50\uff1a <pre><code>cout &lt;&lt; 1234 &lt;&lt; ',' &lt;&lt; hex &lt;&lt; 1234 &lt;&lt; ',' &lt;&lt; oct &lt;&lt; 1234 &lt;&lt; '\\n'; \n// print 1234,4d2,2322\n\nconstexpr double d = 123.456;\ncout &lt;&lt; d &lt;&lt; \"; \" // use the default\n&lt;&lt; scientific &lt;&lt; d &lt;&lt; \"; \" // use 1.123e2 style \n&lt;&lt; hexfloat &lt;&lt; d &lt;&lt; \"; \" // use hexadecimal notation \n&lt;&lt; fixed &lt;&lt; d &lt;&lt; \"; \" // use 123.456 style\n&lt;&lt; defaultfloat &lt;&lt; d &lt;&lt; '\\n'; // use the default\n\n// C++ uses rounding instead of truncating\ncout.precision(8);\ncout &lt;&lt; 1234.56789 &lt;&lt; ' ' &lt;&lt; 1234.56789 &lt;&lt; ' ' &lt;&lt; 123456 &lt;&lt; '\\n';\n// 1234.5679 1234.5679 123456\n\ncout.precision(4);\ncout &lt;&lt; 1234.56789 &lt;&lt; ' ' &lt;&lt; 1234.56789 &lt;&lt; ' ' &lt;&lt; 123456 &lt;&lt; '\\n';\n// 1235 1235 123456\n</code></pre>"},{"location":"courses/oop/oop/#file-stream","title":"File stream","text":"<p>In <code>&lt;fstream&gt;</code>, the standard library provides streams to and from a file: + <code>ifstream</code> for reading from a file + <code>ofstream</code> for writing to a file + <code>fstream</code> for reading from and writing to a file</p> <pre><code>ofstream ofs(\"target\"); // \u2018\u2018o\u2019\u2019 for \u2018\u2018output\u2019\u2019\nif (!ofs) error(\"couldn't open 'target' for writing\");\n\nfstream ifs; // \u2018\u2018i\u2019\u2019 for \u2018\u2018input\u2019\u2019\nif (!ifs) error(\"couldn't open 'source' for reading\");\n</code></pre>"},{"location":"courses/oop/oop/#string-stream","title":"String stream","text":"<p>In <code>&lt;sstream&gt;</code>, the standard library provides streams to and from a string: + <code>istringstream</code> for reading from a string + <code>ostringstream</code> for writing to a string + <code>stringstream</code> for reading from and writing to a string. ...\u4e0d\u6e05\u695a\u600e\u4e48\u7528yet</p>"},{"location":"courses/oop/oop/#the-vector","title":"The vector","text":"<p>\u7528\u65f6\u9700\u8981<code>#include &lt;vector&gt;</code></p>"},{"location":"courses/oop/oop/#_2","title":"\u57fa\u672c\u89c4\u5219\u548c\u64cd\u4f5c","text":"<pre><code>vector&lt;class T&gt; amounts; \n//vector&lt;type&gt; name;\namounts.empty(); \n// return true if amounts is empty\namounts.size();\namounts.clear();\n// empty amounts\namounts.push_back(const T&amp; elem);\n/* append to amounts. \nif elem is a direct object instead of a pointer,\nmakes a deep, independent copy of that object. */\namounts.pop_back();\namounts[2];\n// access using operator[]\n\n// iterator\namounts.begin();\namounts.end();\namounts.erase(iterator where);\n/* remove element addressed by where\nand return an iterator pointing to the elements\nafter the removed one*/\n</code></pre> <p>Changes to a vector invalidate all existing iterators. As a result, previously generated iterators could reference meaningless data.</p>"},{"location":"courses/oop/oop/#the-map","title":"The map","text":""},{"location":"courses/oop/oop/#_3","title":"\u57fa\u672c\u89c4\u5219\u548c\u64cd\u4f5c","text":"<pre><code>pair&lt;iterator, bool&gt; insert(const pair&lt;Key, Value&gt;&amp; newEntry);\n/* if Key already exists in map, return (an iterator addressing \nthe pair stored inside the map on behalf of the key, false);\nOtherwise return (..., true), and insert the (key, value) pair \ninto the map;\n*/\niterator find(const Key&amp; key);\n// ...\n</code></pre>"},{"location":"courses/oop/oop/#inline-functions","title":"Inline functions","text":""},{"location":"courses/oop/oop/#_4","title":"\u539f\u7406","text":"<p>\u533a\u522b\u4e8e\u6b63\u5e38\u51fd\u6570\u4e0e\u4e3b\u7a0b\u5e8f\u5206\u5f00\u5b58\u653e\uff0cinline\u51fd\u6570\u5728\u8c03\u7528\u65f6\u5c06\u5b83\u7684definition\uff0c\u5373\u8fd0\u884c\u4ee3\u7801\u8d34\u5728\u8c03\u7528\u5904\u3002\u8fd9\u6837\u5c31\u907f\u514d\u4e86\u6b63\u5e38\u51fd\u6570\u8c03\u7528\u65f6\u9700\u8981\u5b58\u50a8\u8fd4\u56de\u5730\u5740\u548cinstruction pointer\u8df3\u8f6c\u7b49\u64cd\u4f5c\u5e26\u6765\u7684\u65f6\u95f4\u6d88\u8017\u3002 \u4f46\u8fd9\u4e5f\u540c\u65f6\u5bfc\u81f4\u4e86\u4f7f\u7528inline\u51fd\u6570\u4f1a\u662f\u7a0b\u5e8f\u66f4\u957f\uff0c\u5c5e\u4e8e\u7528\u5927\u7a7a\u95f4\u6362\u77ed\u65f6\u95f4\u3002</p>"},{"location":"courses/oop/oop/#_5","title":"\u9002\u7528\u8303\u56f4","text":"<p>\u4e5f\u6b63\u662f\u7531\u4e8e\u8fd9\u4e2a\u7279\u6027\uff0c\u67d0\u4e9b\u51fd\u6570\u4e0d\u9002\u5408\u7528inline\uff1a 1. \u51fd\u6570\u672c\u8eab\u7684\u8fd0\u884c\u65f6\u95f4\u8fdc\u5927\u4e8e\u8c03\u7528\u6240\u9700\u65f6\u95f4 \u56e0\u4e3a\u8fd9\u6837\u8c03\u7528\u8282\u7701\u7684\u65f6\u95f4\u5ffd\u7565\u4e0d\u8ba1\uff0c\u767d\u767d\u6d6a\u8d39\u7a7a\u95f4 2. \u51fd\u6570\u5e76\u6ca1\u6709\u88ab\u9891\u7e41\u8c03\u7528 \u8fd9\u6837\u5c31\u6ca1\u6709\u53d1\u6325\u51fainline\u7684\u7528\u5904</p>"},{"location":"courses/oop/oop/#_6","title":"\u4f7f\u7528\u65b9\u6cd5","text":"<p>\u5728\u58f0\u660e\u6216\u5b9a\u4e49\u51fd\u6570\u65f6\u589e\u52a0\u524d\u7f00<code>inline</code>\u5373\u53ef\uff0c\u5982<code>inline double square(double x) { return x * x; }</code></p> <p>compiler\u672a\u5fc5\u4f1a\u6ee1\u8db3inline\u7684\u9700\u6c42\uff1b\u5982\u679c\u8be5\u51fd\u6570\u592a\u5927\uff0c\u6216recursive\uff0cinline\u90fd\u4f1a\u88ab\u5ffd\u7565\uff0c\u5f53\u4f5c\u6b63\u5e38\u51fd\u6570</p>"},{"location":"courses/oop/oop/#reference","title":"Reference","text":"<ul> <li>\u89c4\u5219\uff1a\u5fc5\u987b\u5728\u58f0\u660ereference\u53d8\u91cf\u65f6\u521d\u59cb\u5316\uff0c\u548c\u67d0\u53d8\u91cf\u7ed1\u5b9a\uff08\u6210\u4e3a\u5176\u522b\u540d\uff09\uff0c\u4e0d\u53ef\u4e8c\u6b21\u7ed1\u5b9a</li> </ul>"},{"location":"courses/oop/oop/#inheritance-and-composition","title":"Inheritance and Composition","text":""},{"location":"courses/oop/oop/#scope-and-access","title":"scope and access","text":"<p>\u5bf9\u4e8e\u6d3e\u751f\u7c7b\uff0c\u5b83\u548c\u5916\u754c\u90fd\u4e0d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u7684private\u6210\u5458\uff0c\u4f46\u662f\u5b83\u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u7684protected\u6210\u5458\uff0c\u800c\u5916\u754c\u4e0d\u80fd\u8bbf\u95eeprotected\u6210\u5458\u3002</p> <p>\u540c\u4e00\u4e2a\u7c7b\u7684\u4e0d\u540c\u5bf9\u8c61obj1\u548cobj2\uff0c\u4e24\u8005\u53ef\u4e92\u76f8\u8bbf\u95ee\u5176private\u6210\u5458</p> inheritance type public member protected member private member <code>class B : private A</code> private in B private in B inaccessible <code>class B : protected A</code> protected in B protected in B inaccessible <code>class B : public A</code> public in B protected in B inaccessible"},{"location":"courses/oop/oop/#friend","title":"<code>friend</code>","text":"<p>\u53ef\u5c06\u81ea\u5df1\u7684\u6210\u5458\u6388\u6743\u7ed9\u5176\u4ed6\u51fd\u6570\u3001\u7c7b...\uff0c\u4f46\u5176\u4ed6\u51fd\u6570\u3001\u7c7b\u5e76\u6ca1\u6709\u6388\u6743\u7ed9\u81ea\u5df1</p>"},{"location":"courses/oop/oop/#_7","title":"\u57fa\u7c7b\u3001\u6d3e\u751f\u7c7b\u3001\u6d3e\u751f\u7c7b\u6210\u5458\u7684\u6784\u9020\u987a\u5e8f","text":"<p>\u6d3e\u751f\u7c7b\u5728\u6784\u9020\u65f6\uff0c\u5148\u8c03\u7528\u57fa\u7c7bctor\uff0c\u518d\u8c03\u7528\u81ea\u8eabctor\u3002\u6d3e\u751f\u7c7b\u5728\u6790\u6784\u65f6\u6b63\u597d\u76f8\u53cd\uff0c\u5148\u8c03\u7528\u81ea\u5df1\u7684dotr\uff0c\u518d\u8c03\u7528\u57fa\u7c7b\u7684dtor\u3002</p> <ul> <li>ctor\u987a\u5e8f\uff1a\u57fa\u7c7b &gt; \u6d3e\u751f\u7c7b\u6210\u5458 &gt; \u6d3e\u751f\u7c7b</li> <li>dtor\u987a\u5e8f\uff1a\u6d3e\u751f\u7c7b &gt; \u6d3e\u751f\u7c7b\u6210\u5458 &gt; \u57fa\u7c7b</li> </ul> <p>\u521d\u59cb\u5316\u5217\u8868\u7684\u53c2\u6570\u987a\u5e8f\u662f\u6ca1\u6709\u610f\u4e49\u7684\uff0c\u521d\u59cb\u5316\u5e76\u4e0d\u4f1a\u6309\u7167\u5b83\u6765\u6267\u884c</p>"},{"location":"courses/oop/oop/#name-hiding","title":"name hiding","text":"<p>\u82e5\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u5b9a\u4e49\u4e86\u4e00\u4e2a\u57fa\u7c7b\u7684\u51fd\u6570\uff0c\u5219\u57fa\u7c7b\u4e2d\u7684\u6240\u6709\u91cd\u8f7d\u7684\u540c\u540d\u51fd\u6570\u90fd\u4e0d\u53ef\u8bbf\u95ee</p> <p>\u6b64\u5904\u5173\u952e\u5b57<code>virtual</code>\uff08\u5728\u591a\u6001\u4e2d\uff09\u5c31\u6d3e\u4e0a\u7528\u573a\u4e86</p>"},{"location":"courses/oop/oop/#upcasting","title":"Upcasting","text":"<p>\u4e3a\u4e86\u907f\u514d\u622a\u65ad(truncation)\uff0c\u4e00\u822c\u901a\u8fc7\u6307\u9488\u6765\u5c06\u4e00\u4e2a\u6d3e\u751f\u7c7bcast\u4e3a\u57fa\u7c7b</p>"},{"location":"courses/oop/oop/#polymorphism","title":"Polymorphism\uff08\u591a\u6001\uff09","text":""},{"location":"courses/oop/oop/#virtual","title":"<code>virtual</code>","text":"<p>\u7528\u57fa\u7c7b\u7684\u6307\u9488\uff0c\u8c03\u7528\u6d3e\u751f\u7c7b\u5404\u81ea\u7684\u51fd\u6570\u3002(Dynamic binding: call the function according to the real(not declared) type of the object)</p> <p>\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e00\u5b9a\u8981\u5199\u6210<code>virtual</code></p> <p>\u82e5\u4e0d\u8986\u76d6\u57fa\u7c7bvirtual\u51fd\u6570\uff0c\u5219\u6d3e\u751f\u7c7b\u4e2d\u5bf9\u5e94\u7684vptr\u6307\u5411\u7684\u51fd\u6570table\u4e2d\uff0c\u6b64\u672a\u8986\u76d6\u7684\u51fd\u6570\u6307\u5411\u57fa\u7c7b\u51fd\u6570\u7684\u5730\u5740</p>"},{"location":"courses/oop/oop/#virtual_1","title":"<code>virtual</code>\u7684\u5185\u5b58\u5e03\u5c40","text":"<p>\u5728\u57fa\u7c7b\u4e2d\uff0c\u7c7b\u6a21\u677f\u7684\u9996\u4e2a\u4f4d\u7f6e\u5b58\u653evirtual pointer\uff0c\u6307\u5411\u8be5\u7c7b\u7684virtual\u51fd\u6570\u8868\u9996\u5730\u5740</p>"},{"location":"courses/oop/oop/#return-type-relaxation","title":"return type relaxation","text":""},{"location":"courses/oop/oop/#the-copy-constructor","title":"The copy constructor \uff08\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff09","text":"<p>\u82e5\u6ca1\u6709\u5b9a\u4e49copy ctor\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u751f\u6210\u9ed8\u8ba4copy ctor</p> <p>memberwise copy: \u5bf9\u4e8e\u539f\u751f\u7c7b\u578b(int, float...)\u76f4\u63a5\u8d4b\u503c\uff1b\u5bf9\u4e8eclass\u6210\u5458\uff0c\u9012\u5f52\u8c03\u7528copy ctor</p> <p>\u9ed8\u8ba4copy ctor\u5bf9\u4e8e\u6307\u9488\u7c7b\u578b\u7684\u590d\u5236\u4f1a\u6709\u95ee\u9898\uff0c\u4e00\u822c\u9700\u8981\u81ea\u5b9a\u4e49copy ctor</p> <p>\u683c\u5f0f\uff1a</p> <pre><code>T::T(const T&amp;);\n\nT t1;\n// copy ctor usage\nT t2 = t1; // equal to T t2(t1);\nT t3(t1);\n\nT foo() {\n    return T();\n}\nT t4 = foo(); // another copy ctor usage\n</code></pre> <p>\u82e5\u6ca1\u6709\u5199\uff0c\u5219c++\u7f16\u8bd1\u5668\u4f1a\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3002\u5f53\u901a\u8fc7<code>=</code>\u6765\u8d4b\u503c\u65f6\uff0c\u62f7\u8d1d\u53f3\u503c\u5bf9\u8c61\u7684\u6bcf\u4e2a\u5b57\u6bb5\u7ed9\u5de6\u503c(memberwise initialization)\u3002</p> <p>\u82e5\u6210\u5458\u4e2d\u6709\u5176\u4ed6class\uff0c\u5219\u9012\u5f52\u62f7\u8d1d\u6784\u9020\u8be5\u5b57\u6bb5\u3002</p> <p>Warning</p> <p>\u82e5\u6210\u5458\u4e2d\u6709\u6307\u9488\u53d8\u91cf\uff0c\u9700\u8981\u7740\u91cd\u8003\u8651\u6307\u9488\u7684\u62f7\u8d1d\u65b9\u5f0f\uff0c\u662f\u76f4\u63a5\u62f7\u8d1d\u6307\u5411\u5730\u5740\uff0c\u8fd8\u662f\u62f7\u8d1d\u4e00\u4efd\u6307\u5411\u7684\u5bf9\u8c61\u518d\u6307\u5411\u62f7\u8d1d\u5bf9\u8c61\u3002\u5426\u5219\u5728\u6790\u6784\u65f6\uff0c\u6709\u53ef\u80fd\u53d1\u751f\u91cd\u590d\u6790\u6784\u7684\u62a5\u9519</p>"},{"location":"courses/oop/oop/#_8","title":"\u62f7\u8d1d\u4f18\u5316","text":"<p>draft</p> <p>\u82e5\u67d0\u51fd\u6570return\u4e00\u4e2aT(s)\uff0c\u5373\u4e34\u65f6\u6784\u9020\u7684\u5bf9\u8c61\uff1b\u800c\u8be5\u51fd\u6570\u88ab\u4f5c\u4e3a\u53f3\u503c\u8d4b\u7ed9\u67d0T\u5bf9\u8c61\uff0c\u5219\u4f1a\u88ab\u4f18\u5316\u4e3a\u8be5T\u5bf9\u8c61\u76f4\u63a5\u6309s\u6765\u8fdb\u884c\u4e34\u65f6\u6784\u9020</p> <p>\u4e3a\u4e86\u907f\u514d\u91cd\u590d\u5197\u4f59\u7684copy\u6784\u9020\uff0c\u5f53\u4f7f\u7528<code>vector</code>\u7b49\u5bb9\u5668\u65f6\uff0c\u53ef\u4ee5\u9884\u7559\u5bb9\u5668\u5bb9\u91cf\uff0c\u7136\u540e\u518d\u5411\u5bb9\u5668\u4e2d\u6dfb\u52a0\u5143\u7d20\u3002\u901a\u8fc7<code>std::vector.reserve(size)</code>\u6765\u9884\u7559\u5bb9\u91cf\uff0c\u5c31\u53ef\u4ee5\u6709\u6548\u51cf\u5c11<code>vector</code>\u6269\u5bb9\u5e26\u6765\u7684copy\u64cd\u4f5c</p> <code>std::vector</code> mechanism <p>vector\u88ab\u521d\u59cb\u5316\u65f6<code>capacity</code>\u4e3a0\u3002\u5f53<code>push_back/emplace_back</code>\u65f6\uff0c\u82e5<code>capacity</code>\u4e0d\u591f\uff0c\u5219\u91cd\u65b0\u5206\u914d\u4e00\u5757\u5927\u5c0f\u4e3a\u539f\u6765\u4e24\u500d\u7684\u5185\u5b58\u7ed9\u6b64<code>vector</code>\uff0c<code>capacity</code>\u53d8\u4e3a2\u500d\uff08\u7b2c\u4e00\u6b21\u53d8\u4e3a1\uff09\uff0c\u7136\u540e\u628a\u539f\u6765\u5185\u5b58\u4e2d\u7684\u5143\u7d20\u4f9d\u6b21copy\u5230\u65b0\u7684\u5185\u5b58\u4e2d</p>"},{"location":"courses/oop/oop/#static","title":"static\u4fee\u9970\u7b26","text":"<p>static\u53d8\u91cf\u56de\u987e\uff1a</p> <ul> <li>persistent storage: allocated once at a fixed address</li> <li> <p>visibility: internal linkage\uff08\u5176\u4ed6\u6587\u4ef6\u65e0\u6cd5\u901a\u8fc7<code>extern</code>\u6765\u8bbf\u95ee\u8be5\u53d8\u91cf\uff09</p> </li> <li> <p>\u51fd\u6570\u4e2d\u7684static class\u53d8\u91cf</p> <p>\u7b2c\u4e00\u6b21\u6267\u884c\u8be5\u6784\u9020\u8bed\u53e5\u65f6\u8fdb\u884c\u6784\u9020\u548c\u521d\u59cb\u5316\uff0c\u540e\u7eed\u4e0d\u518d\u6784\u9020\u3002</p> </li> <li> <p>class\u4e2d\u7684static\u53d8\u91cf</p> <p>\u4e0d\u4f9d\u8d56\u4e8e\u5bf9\u8c61\u7684\u5b58\u5728\uff0cctor\u65f6static\u53d8\u91cf\u5e76\u672a\u88ab\u6784\u9020\u3002\u662f\u6240\u6709\u5bf9\u8c61\u5171\u4eab\u7684\u6570\u636e\u3002</p> <p>\u9759\u6001\u6210\u5458\u7684\u5b9a\u4e49\u5728global scope\u4e0b\u8fdb\u884c\uff0c\u5982</p> <pre><code>class A {\nprivate:\n    static int data;\n};\nint A::data = 0; // definition and initialization\n</code></pre> </li> <li> <p>class\u4e2d\u7684static\u51fd\u6570</p> <p>\u53ea\u80fd\u8bbf\u95eeclass\u4e2d\u7684static\u53d8\u91cf\uff0c\u4e0d\u80fd\u8bbf\u95ee\u67d0\u5bf9\u8c61\u4e2d\u7684\u53d8\u91cf</p> </li> </ul>"},{"location":"courses/oop/oop/#operator-overloading","title":"operator overloading\uff08\u8fd0\u7b97\u7b26\u91cd\u8f7d\uff09","text":"<p>\u6781\u5c11\u6570\u8fd0\u7b97\u7b26\u4e0d\u53ef\u91cd\u8f7d\uff1b\u8fd0\u7b97\u7b26\u91cd\u8f7d\u540e\u4f18\u5148\u7ea7\u4e0d\u53d8</p> <p>\u683c\u5f0f\uff1a</p> <pre><code> /* unary operator */\n Integer operator-() const {\n    return Integer(-i);\n }\n Integer&amp; operator++(){ // prefix++\n    this-&gt;i += 1;\n    return *this;\n}\nInteger operator++(int){ // postfix++\n    Integer old(*this);\n    ++(*this);\n    return old;\n}\n/* binary operator */\n// within class\nInteger operator+(const Integer &amp; i1) {return ...;}\n// \"3 + Int\" is invalid while \"Int + 3\" is valid\n// in global scope\nInteger operator+(const Integer &amp; i1, const Integer &amp; i2)\n{ return ...; }\n</code></pre>"},{"location":"courses/oop/oop/#copy-assignment","title":"copy assignment","text":"<p><code>=</code>\u8fd0\u7b97\u7b26\u82e5\u6ca1\u6709\u5b9a\u4e49\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u751f\u6210\u9ed8\u8ba4\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\u8fdb\u884cmemberwise assignment</p>"},{"location":"courses/oop/oop/#operator","title":"operator ()","text":"<p>A functor, overloads the function call.</p> <pre><code>#include &lt;functional&gt;\n\nstruct F {\n    void operator()(int x) const {\n        std::cout &lt;&lt; x &lt;&lt; \"\\n\";\n    }\n}; // F is a functor class\nF f; // f is a functor\nf(2); // calls f.operator()\n\nvoid transform(vector&lt;int&gt;&amp; v, function&lt;int(int)&gt;&amp; f)\n{\n    for(auto &amp; ele : v) {\n        ele = f(ele);\n    }\n}\n[a](int x){return x * a;} // anonymous function\n// equals to create a class with functor overloading\nclass mul_by {\nprivate:\n    int a;\npublic:\n    mul_by(int a) : a(a) {}\n    int operator()(int x) const {return x * a;}\n}\n</code></pre>"},{"location":"courses/oop/oop/#conversion-operator","title":"Conversion operator","text":"<p>\u9690\u5f0f\u8f6c\u6362 T-&gt;C</p> <ul> <li><code>C(const &amp; T) { ... } // ctor</code></li> <li><code>operator C() { ... } // conversion operator overloading</code></li> </ul> <pre><code>struct pathname {\n    std::string name;\n}\nstruct rational {\n    int numerator;\n    int denominator;\n    operator double() {\n      return numerator / (double)denominator;  \n    }\n}\n</code></pre>"},{"location":"courses/oop/oop/#stream","title":"Stream","text":"<p>stream\u5728\u505a\u8f93\u5165\u8f93\u51fa\u65f6\uff0c\u5185\u90e8\u72b6\u6001\u4f1a\u6539\u53d8</p> <ul> <li> <p>extractor (&gt;&gt;)</p> </li> <li> <p>inserter (&lt;&lt;)</p> </li> </ul> <pre><code>ostream&amp; operator&lt;&lt;(ostream&amp; out, const Point&amp; p) {}\n</code></pre>"},{"location":"courses/oop/oop/#template","title":"Template","text":""},{"location":"courses/oop/oop/#function-overloading","title":"function overloading","text":"<p>\u53c2\u6570\u5217\u8868\u5fc5\u987b\u4e0d\u540c</p>"},{"location":"courses/oop/oop/#default-argument","title":"Default argument","text":"<ul> <li>\u9ed8\u8ba4\u503c\u6307\u5b9a\u4ece\u53f3\u5230\u5de6\uff08\u4e0d\u80fd\u8df3\u7740\u6765\uff09</li> <li>\u58f0\u660e\u65f6\u89c4\u5b9a\u9ed8\u8ba4\u503c\uff0c\u5b9a\u4e49\u65f6\u4e0d\u518d\u89c4\u5b9a</li> </ul>"},{"location":"courses/oop/oop/#template_1","title":"template","text":"<p>Generic programming</p> <ul> <li> <p>function template     <pre><code>template&lt;class T&gt;\nvoid swap(T&amp; t1, T&amp; t2) {\n    T tmp = t1;\n    t1 = t2;\n    t2 = tmp;\n}\ndouble d1, d2;\nswap(d1, d2);\n\nint i1, i2;\nswap&lt;int&gt;(i1, i2); // self specified\n</code></pre></p> </li> <li> <p>class template(container)</p> <p><code>stack&lt;int&gt;</code></p> </li> </ul>"},{"location":"courses/oop/oop/#template-instanstiation","title":"template instanstiation","text":"<p>\u9047\u5230\u6a21\u677f\u7684\u67d0\u5177\u4f53\u7c7b\u578b\u65f6\uff0c\u751f\u6210\u4e00\u4e2a\u8be5\u7c7b\u578b\u7684function/class\u3002\u76f8\u5f53\u4e8e\u6a21\u677f\u81ea\u52a8\u751f\u6210\u5b9e\u4f8b\u5316\u51fd\u6570/\u7c7b\u3002</p> <p>\u82e5\u6709\u975e\u6a21\u677f\u7684\u666e\u901a\u51fd\u6570\u53ef\u4ee5\u5339\u914d\uff0c\u5219\u4f18\u5148\u8c03\u7528\u6b64\u51fd\u6570\uff0c\u5426\u5219\u5bfb\u627e\u6a21\u677f</p>"},{"location":"courses/oop/oop/#expression-parameter","title":"expression parameter","text":"<pre><code>template&lt;class T, int N&gt;\nclass Array {\npublic:\n    int size() const{return N;}\n}\n</code></pre>"},{"location":"courses/oop/oop/#member-template","title":"Member template","text":"<pre><code>template &lt;typename T&gt;\nstruct complex {\n    template &lt;class U&gt;\n    complex(const U &amp; other) : real(other.real), imag(other.imag) {}\n}\n</code></pre>"},{"location":"courses/oop/oop/#iterator","title":"Iterator","text":"<p>\u5bf9\u4e8e\u4e0d\u540c\u7684\u6570\u636e\u7ed3\u6784\u63d0\u4f9b\u7edf\u4e00\u7684\u7ebf\u6027\u904d\u5386\u7684\u63a5\u53e3\uff0c\u5373Iterator</p>"},{"location":"courses/oop/oop/#the-associated-type","title":"the associated type","text":"<p><code>iterator_traits</code></p>"},{"location":"courses/oop/oop/#template-specialization","title":"template specialization","text":"<pre><code>template&lt;class T1, class T2, int N&gt;\nclass A {};\n</code></pre> <ul> <li>full specialization</li> </ul> <pre><code>template&lt;&gt;\nclass A&lt;int, double, 5&gt; { ... };\n</code></pre> <ul> <li>partial specialization </li> </ul> <pre><code>template&lt;class T2&gt;\nclass A&lt;int, T2, 5&gt; { ... };\n</code></pre>"},{"location":"courses/oop/oop/#exception","title":"Exception","text":"<pre><code>try {\n    // main logic here\n} catch () {\n\n} catch () {\n\n}\n</code></pre> <p>\u4e0b\u6807\u8d8a\u754c</p> <pre><code>if(idx &lt; 0 || idx &gt;= m_size) {\n    throw VectorIndexError(idx); \n    // program paused here\n}\nreturn m_elements[idx];\n</code></pre> <pre><code>class VectorIndexError {\npublic:\n    VectorIndexError(int v) : m_badValue(v) {}\n    ~VectorIndexError() {}\n    void diagnostic() {\n        std::cerr &lt;&lt; \"index\" &lt;&lt; m_badValue \n        &lt;&lt; \"out of range\" ;\n    }\nprivate:\n    int m_badValue;\n}\n</code></pre>"},{"location":"courses/oop/oop/#throw","title":"<code>throw</code>\u8bed\u53e5\u629b\u51fa\u5f02\u5e38","text":"<ul> <li>\u63a7\u5236\u6d41\u5411\u524d\u9000\uff0c\u76f4\u5230\u7b2c\u4e00\u4e2ahandle\u6b64\u5f02\u5e38\u7684try-catch\u8bed\u53e5(handler)</li> <li>\u5411\u524d\u9000\u7684\u8fc7\u7a0b\u9075\u5faa\u8c03\u7528\u94fe</li> <li>\u4e00\u5c42\u5c42\u9000\u6808\uff0c\u5728\u6808\u4e0a\u7684\u5bf9\u8c61\u88ab\u6790\u6784</li> </ul>"},{"location":"courses/oop/oop/#_9","title":"\u8bed\u6cd5","text":"<ul> <li><code>throw exception;</code></li> <li><code>throw;</code></li> </ul>"},{"location":"courses/oop/oop/#handler","title":"\u9009\u62e9handler","text":"<ul> <li>\u4e00\u4e2atry block\u53ef\u4ee5\u6709\u4efb\u610f\u4e2ahandler</li> <li>handler\u4ee5\u51fa\u73b0\u987a\u5e8f\u6765\u4f9d\u6b21\u68c0\u67e5<ol> <li>check for exact match</li> <li>apply base class conversions (reference or pointer type only)</li> <li>catch-all handler <code>catch (...) {}</code></li> </ol> </li> </ul> <p>Example</p> <p>\u4ea7\u751f\u6d3e\u751f\u7c7b\u5f02\u5e38\u65f6\uff0c\u82e5\u5148handle\u57fa\u7c7b\u5f02\u5e38\uff0c\u5219\u4e0d\u4f1a\u7ba1\u540e\u7eed\u7684\u6d3e\u751f\u7c7b\u5f02\u5e38\uff1b</p> <pre><code>class MathErr{};\nclass UnderflowErr : public MathErr {};\nclass ZeroDividerErr : public MathErr {};\ntry {\n    UnderflowErr udferr;\n    throw udferr;\n} catch (ZeroDividerErr) {\n    ...\n} catch (MathErr) { // program will pause here\n    ...\n} catch (UnderflowErr) {\n    ...\n} catch (...) {\n\n}\n</code></pre> <p>Note</p> <p>\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u8d8a\u6765\u8d8a\u653e\u5bbdexception\u7684\u81ea\u7531\u5ea6\uff0c\u6240\u4ee5\u57fa\u7c7b\u5f02\u5e38handler\u5e94\u8be5\u653e\u5728\u6d3e\u751f\u7c7b\u4e4b\u540e\uff0c\u800ccatch-all handler\u5fc5\u987b\u653e\u5728\u6700\u540e\u4e00\u4e2ahandler</p> <p>\u6790\u6784\u51fd\u6570(destructor)\u4e2d\u4e0d\u53ef\u629b\u5f02\u5e38</p> <p>\u629b\u51fa\u7684Exception\u82e5\u6700\u7ec8\u6ca1\u6709\u63a5\u53d7\u8005(Uncaught exception)\uff0c<code>std::terminate()</code>\u4f1a\u88ab\u8c03\u7528\uff0c\u7a0b\u5e8f\u7ec8\u6b62</p>"},{"location":"courses/oop/oop/#smart-pointer","title":"Smart Pointer","text":""},{"location":"courses/oop/oop/#unique_ptr","title":"unique_ptr","text":""},{"location":"courses/oop/oop/#shared_ptr","title":"shared_ptr","text":""},{"location":"courses/oop/oop/#weak_ptr","title":"weak_ptr","text":""},{"location":"courses/oop/oop/#named-cast","title":"Named Cast","text":"<ul> <li> <p><code>static_cast</code></p> <p>\u7528\u4e8e\u5c06\u6307\u5411\u57fa\u7c7b\u7684\u6307\u9488\u8f6c\u6362\u4e3a\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u6307\u9488</p> </li> <li> <p><code>dynamic_cast</code></p> <p>\u8fd0\u884c\u65f6\u68c0\u67e5\uff0c\u82e5\u7ee7\u627f\u4e0d\u662f\u591a\u6001\u5173\u7cfb(virtual)\u5219\u62a5\u9519</p> </li> <li> <p><code>reinterpret_cast</code></p> </li> <li> <p><code>const_cast</code></p> <p>const_cast \u8fd0\u7b97\u7b26\u4f1a\u5c06 this \u6307\u9488\u7684\u6570\u636e\u7c7b\u578b\u66f4\u6539\u4e3a CCTest *\uff0c\u4ee5\u5141\u8bb8\u4fee\u6539\u6210\u5458 number</p> </li> </ul>"},{"location":"courses/oop/oop/#multiple-inheritance","title":"Multiple Inheritance","text":""},{"location":"courses/oop/oop/#namespace","title":"Namespace","text":"<ul> <li>a scope just like a class</li> <li></li> </ul>"},{"location":"misc/anime/","title":"\u52a8\u6f2b","text":""},{"location":"misc/anime/#_1","title":"\u70ed\u8840","text":"<ul> <li>jojo \u7684\u5947\u5999\u5192\u9669</li> <li>\u9ed1\u8272\u56db\u53f6\u8349</li> <li>ALDNOAH.ZERO</li> <li>\u7532\u94c1\u57ce\u7684\u5361\u5df4\u5185\u745e</li> <li>\u7f6a\u6076\u738b\u51a0</li> <li>overlord</li> <li>Re\uff1a\u4ece\u96f6\u5f00\u59cb\u7684\u5f02\u751f\u6d3b</li> <li>\u6b7b\u795e</li> <li>\u9ad8\u8fbe\u72ec\u89d2\u517d</li> <li>\u5c3c\u5c14</li> <li>\u5200\u5251\u795e\u57df</li> <li>86-\u4e0d\u5b58\u5728\u7684\u6218\u533a</li> <li>\u5492\u672f\u56de\u6218</li> <li>\u53cd\u53db\u7684\u9c81\u9c81\u4fee</li> <li>\u4e1c\u4eac\u55b0\u79cd</li> <li>\u5bc4\u751f\u517d</li> <li>\u5996\u7cbe\u7684\u5c3e\u5df4</li> </ul>"},{"location":"misc/anime/#_2","title":"\u604b\u7231","text":"<ul> <li>\u7f18\u4e4b\u7a7a</li> <li>\u590f\u65e5\u91cd\u73b0</li> </ul>"},{"location":"misc/anime/#_3","title":"\u672a\u77e5","text":"<ul> <li>\u846c\u9001\u7684\u8299\u8389\u83b2</li> <li>\u8d25\u72ac</li> <li>\u94a2\u4e4b\u70bc\u91d1\u672f\u5e08</li> <li>EVA</li> <li>\u8ff7\u5bab\u996d</li> </ul>"},{"location":"misc/fitness/","title":"\u6574\u4f53\u8bad\u7ec3\u8ba1\u5212","text":""},{"location":"misc/fitness/#_2","title":"\u8bad\u7ec3\u90e8\u4f4d\u5212\u5206\uff1a","text":"<ul> <li>\u624b\u81c2</li> <li>\u80f8</li> <li>\u80cc</li> <li>\u80a9</li> <li>\u817f</li> <li>\u81c0</li> </ul>"},{"location":"misc/habit/","title":"\u4e60\u60ef","text":""},{"location":"misc/habit/#life-habit","title":"life habit","text":""},{"location":"misc/habit/#_1","title":"\u4e00\u5929\u7684\u81ea\u63a7\u529b\u662f\u4e00\u79cd\u6709\u9650\u8d44\u6e90","text":"<ul> <li>\u628a\u4f60\u8ba4\u4e3a\u6700\u91cd\u8981\u7684\u4e8b\u60c5\u4f5c\u4e3a\u65e9\u4e0a\u8d77\u5e8a\u4e4b\u540e\u7b2c\u4e00\u4ef6\u505a\u7684\u4e8b\uff0c\u6bd4\u5982\u5b9a\u8ba1\u5212\u3001\u80cc\u5355\u8bcd\uff0c\u8ba9\u81ea\u5df1\u65e9\u70b9\u8fdb\u5165\u72b6\u6001</li> </ul>"},{"location":"misc/habit/#_2","title":"\u884c\u52a8\u4f1a\u4ea7\u751f\u66f4\u591a\u7684\u7075\u611f\u548c\u52a8\u529b","text":"<ul> <li>\u62c6\u89e3\u56f0\u96be\u4efb\u52a1\uff0c\u62c6\u6210\u6bd4\u8f83\u7b80\u5355\u7684\u4efb\u52a1\uff0c\u7136\u540e\u5f00\u59cb\u6267\u884c\u7b80\u5355\u7684\u4efb\u52a1</li> <li>\u628a\u7b2c\u4e8c\u5929\u65e9\u4e0a\u8981\u505a\u7684\u4e8b\u60c5\u5177\u4f53\u7684\u5199\u5728\u7eb8\u4e0a</li> </ul>"},{"location":"misc/habit/#_3","title":"\u5982\u4f55\u81ea\u5b66","text":"<ul> <li> <p>\u5bf9\u81ea\u5df1\u7684\u5b66\u4e60\u8d1f\u8d23\uff0c\u800c\u975e\u8ba4\u4e3a\u6709\u4eba\u5728\u6559\u4f60</p> </li> <li> <p>\u8bbe\u5b9a\u5177\u4f53\u3001\u53ef\u8861\u91cf\u3001\u884c\u52a8\u5bfc\u5411\u3001\u73b0\u5b9e\u53ef\u884c\u3001\u65f6\u95f4\u9650\u5b9a\u7684\u76ee\u6807</p> </li> <li> <p>\u5c06\u5b66\u4e60\u65f6\u95f4\u5206\u6563\u5230\u4e00\u5468\uff0c\u800c\u4e0d\u662f\u8bd5\u56fe\u538b\u7f29\u5230\u4e00\u5929</p> </li> <li> <p>\u4e3b\u52a8\u5b66\u4e60</p> <p>\u901a\u8fc7\u8bb0\u7b14\u8bb0\u3001\u65c1\u6ce8\u7b49\u65b9\u5f0f\uff0c\u8fbe\u6210\u4e00\u79cd\u4e0e\u6750\u6599\u4e92\u52a8\u7684\u5b66\u4e60\u65b9\u5f0f\uff0c\u80fd\u591f\u66f4\u597d\u7684\u96c6\u4e2d\u6ce8\u610f\u529b</p> </li> <li> <p>\u660e\u786e\u4f18\u5148\u7ea7</p> <p>\u5b66\u4e60\u65f6\u95f4\u6295\u5165\u52a8\u624b\u5b9e\u8df5\u548c\u6700\u6838\u5fc3\u7684\u7406\u8bba\u5185\u5bb9\uff0c\u4e1a\u4f59\u65f6\u95f4\u6295\u5165\u5386\u53f2\u3001\u76f8\u5173\u6587\u732e\u7b49</p> </li> <li> <p>\u53c2\u89c2\u56fe\u4e66\u9986</p> </li> <li> <p>\u7ed9\u81ea\u5df1\u8bbe\u5b9a\u52a8\u529b</p> <p>\u81ea\u4e3b\u5b66\u4e60\u6ca1\u6709\u660e\u786e\u52a8\u673a\uff0c\u9700\u8981\u81ea\u5df1\u521b\u9020\u52a8\u673a</p> </li> </ul>"},{"location":"misc/habit/#_4","title":"\u63d0\u9ad8\u4e13\u6ce8\u529b","text":"<ul> <li> <p>\u6b63\u5ff5\u51a5\u60f3</p> <p>\u5fb7\u7ea6\u7684\u4e60\u60ef\uff0c\u9759\u4e0b\u5fc3\u6765\uff0c\u8ba9\u6240\u6709\u7684\u60f3\u6cd5\u90fd\u7ecf\u8fc7\uff0c\u4e0d\u8981\u6709\u60c5\u7eea\u7684\u6ce2\u52a8\uff0c\u63a5\u53d7\u5b83\u3002\u7136\u540e\u53d1\u73b0\u95ee\u9898\u6240\u5728\u3002</p> </li> </ul>"},{"location":"misc/habit/#_5","title":"\u9605\u8bfb","text":"<ul> <li> <p>\u4e60\u8fd1\u5e73\u7684\u9605\u8bfb\u4e60\u60ef</p> <p>\u4ee5\u4e00\u672c\u4e66\u4e3a\u4e3b\uff0c\u540c\u65f6\u5bfb\u627e\u76f8\u5173\u7684\u4e66\u7c4d\u4f5c\u4e3a\u4f50\u8bc1\uff0c\u4e0d\u65ad\u6269\u5c55\u9605\u8bfb\u4e66\u4e2d\u7684\u77e5\u8bc6\u3002</p> </li> </ul>"},{"location":"misc/habit/#success","title":"success","text":"<p>Sam Altman: how to be successful</p> <ol> <li> <p>Compund yourself </p> <ul> <li>You also want to be an exponential curve yourself\u2014you should aim for your life to follow an ever-increasing up-and-to-the-right trajector</li> <li>Few businesses in the world have true network effects and extreme scalability. But with technology, more and more will.  It\u2019s worth a lot of effort to find them and create them.</li> </ul> </li> <li> <p>Have almost too much self-belief</p> <ul> <li> <p>The most successful people I know believe in themselves almost to the point of delusion. Cultivate this early. As you get more data points that your judgment is good and you can consistently deliver results, trust yourself more.</p> </li> <li> <p>Managing your own morale\u2014and your team\u2019s morale. It\u2019s almost impossible without a lot of self-belief. And unfortunately, the more ambitious you are, the more the world will try to tear you down.  </p> </li> <li> <p>Self-belief must be balanced with self-awareness. Now I try to always listen to criticism with the assumption that it\u2019s true, and then decide if I want to act on it or not. Truth-seeking is hard and often painful, but it is what separates self-belief from self-delusion.</p> </li> </ul> </li> <li> <p>Learn to think independently</p> <ul> <li> <p>Thinking from first principles and trying to generate new ideas is fun, and finding people to exchange them with is a great way to get better at this. The next step is to find easy, fast ways to test these ideas in the real world.</p> </li> <li> <p>\u201cI will fail many times, and I will be really right once\u201d is the entrepreneurs\u2019 way. You have to give yourself a lot of chances to get lucky.</p> </li> <li> <p>One of the most powerful lessons to learn is that you can figure out what to do in situations that seem to have no solution.</p> </li> <li> <p>Grit comes from learning you can get back up after you get knocked down.</p> </li> </ul> </li> <li> <p>Get good at \u201csales\u201d</p> <ul> <li> <p>Getting good at communication\u2014particularly written communication\u2014is an investment worth making. My best advice for communicating clearly is to first make sure your thinking is clear and then use plain, concise language.</p> </li> <li> <p>Getting good at sales is like improving at any other skill\u2014anyone can get better at it with deliberate practice, though it feels distasteful.</p> </li> <li> <p>My other big sales tip is to show up in person whenever it\u2019s important. </p> </li> </ul> </li> <li> <p>Make it easy to take risks</p> <ul> <li> <p>It\u2019s often easier to take risks early in your career; you don\u2019t have much to lose, and you potentially have a lot to gain. </p> </li> <li> <p>Once you\u2019ve gotten yourself to a point where you have your basic obligations covered you should try to make it easy to take risks. </p> </li> <li> <p>Look for small bets you can make where you lose 1x if you\u2019re wrong but make 100x if it works. Then make a bigger bet in that direction.</p> </li> <li> <p>When you aren\u2019t on the treadmill, you can follow your hunches and spend time on things that might turn out to be really interesting. Keeping your life cheap and flexible for as long as you can is a powerful way to do this.</p> </li> </ul> </li> <li> <p>Focus</p> <ul> <li> <p>It is much more important to work on the right thing than it is to work many hours.</p> </li> <li> <p>Once you have figured out what to do, be unstoppable about getting your small handful of priorities accomplished quickly.</p> </li> </ul> </li> <li> <p>Work hard</p> <ul> <li> <p>You will be competing with other very talented people who will have great ideas and be willing to work a lot.</p> </li> <li> <p>One of the great joys in life is finding your purpose, excelling at it, and discovering that your impact matters to something larger than yourself. </p> </li> <li> <p>You have to figure out how to work hard without burning out. People find their own strategies for this, but one that almost always works is to find work you like doing with people you enjoy spending a lot of time with.</p> </li> <li> <p>Work stamina seems to be one of the biggest predictors of long-term success.</p> </li> <li> <p>One more thought about working hard: do it at the beginning of your career.</p> </li> </ul> </li> <li> <p>Be bold</p> <ul> <li> <p>If you are making progress on an important problem, you will have a constant tailwind of people wanting to help you. Let yourself grow more ambitious, and don\u2019t be afraid to work on what you really want to work on.</p> </li> <li> <p>Follow your curiosity. Things that seem exciting to you will often seem exciting to other people too.</p> </li> </ul> </li> <li> <p>Be willful</p> <ul> <li> <p>A big secret is that you can bend the world to your will a surprising percentage of the time\u2014most people don\u2019t even try, and just accept that things are the way that they are.</p> </li> <li> <p>Ask for what you want. You usually won\u2019t get it, and often the rejection will be painful. But when this works, it works surprisingly well. </p> </li> <li> <p>\u201cI am going to keep going until this works, and no matter what the challenges are I\u2019m going to figure them out\u201d, and mean it, go on to succeed.</p> </li> <li> <p>To be willful, you have to be optimistic\u2014hopefully this is a personality trait that can be improved with practice.</p> </li> </ul> </li> <li> <p>Be hard to compete with</p> <ul> <li>The best way to become difficult to compete with is to build up leverage. For example, you can do it with personal relationships, by building a strong personal brand, or by getting good at the intersection of multiple different fields. There are many other strategies, but you have to figure out some way to do it.</li> </ul> </li> <li> <p>Build a network</p> <ul> <li> <p>The size of the network of really talented people you know often becomes the limiter for what you can accomplish.</p> </li> <li> <p>An effective way to build a network is to help people as much as you can.</p> </li> <li> <p>One of the best ways to build a network is to develop a reputation for really taking care of the people who work with you. Be overly generous with sharing the upside; it will come back to you 10x. </p> </li> <li> <p>You want to have a reputation for pushing people hard enough that they accomplish more than they thought they could, but not so hard they burn out.</p> </li> <li> <p>The best way to make up for your weaknesses is to hire complementary team members instead of just hiring people who are good at the same things you are.</p> </li> <li> <p>The easiest way to learn is just to meet a lot of people, and keep track of who goes on to impress you and who doesn\u2019t. Remember that you are mostly looking for rate of improvement, and don\u2019t overvalue experience or current accomplishment.</p> </li> <li> <p>Finally, remember to spend your time with positive people who support your ambitions.</p> </li> </ul> </li> <li> <p>You get rich by owning things</p> <ul> <li> <p>Almost no one in the history of the Forbes list has gotten there with a salary. </p> </li> <li> <p>You get truly rich by owning things that increase rapidly in value. This can be a piece of a business, real estate, natural resource, intellectual property, or other similar things. But somehow or other, you need to own equity in something, instead of just selling your time. Time only scales linearly.</p> </li> <li> <p>The best way to make things that increase rapidly in value is by making things people want at scale. </p> </li> </ul> </li> <li> <p>Be internally driven</p> <ul> <li> <p>The most successful people I know are primarily internally driven; they do what they do to impress themselves and because they feel compelled to make something happen in the world. </p> </li> <li> <p>This is why the question of a person\u2019s motivation is so important. It\u2019s the first thing I try to understand about someone. The right motivations are hard to define a set of rules for, but you know it when you see it. </p> </li> <li> <p>you will define your success by performing excellent work in areas that are important to you. The sooner you can start off in that direction, the further you will be able to go. It is hard to be wildly successful at anything you aren\u2019t obsessed with.</p> </li> </ul> </li> </ol>"},{"location":"misc/pcconfig/","title":"\u88c5\u673a","text":"<p>\u663e\u5361\uff1a5070 \u6216 5060Ti \u6216 4070super \u6216 4060Ti</p>"},{"location":"misc/quotes/","title":"quotes","text":"Quote <p>Hope, is a good thing, maybe the best of things. Good things never die. <p>\u2014\u2014\u2014\u2014 The Shawshank Redemption \u00a0 \u00a0 </p></p> <p>\u8bfb\u4e66\u5f53\u4e00\u610f\u5728\u4e66\uff0c\u6e38\u5c71\u6c34\u5f53\u4e00\u610f\u5728\u5c71\u6c34\uff0c\u4e58\u5174\u6240\u81f3\uff0c\u5fc3\u65e0\u65c1\u53ca\u3002  <p>\u2014\u2014\u2014\u2014 \u94b1\u7a46 \u00a0 \u00a0 </p></p> <p>\u6211\u4eec\u73b0\u5728\u56de\u5fc6\u8fd9\u4e9b\u9752\u5e74\u4eba\u5f53\u5e74\u7684\u811a\u6b65\uff0c\u4e0d\u662f\u6b4c\u9882\u4ec0\u4e48\u865a\u5e7b\u7684\u53e3\u53f7\u548c\u8fd0\u52a8\uff0c \u800c\u662f\u8ba4\u53ef\u90a3\u4e9b\u5728\u8270\u96be\u56f0\u82e6\u4e4b\u4e2d\u4ecd\u7136\u987d\u5f3a\u7684\u5bfb\u627e\u548c\u5b9e\u73b0\u4eba\u751f\u7684\u610f\u4e49\u3001\u201c\u7537\u513f\u5f53\u81ea\u5f3a\u201d\u7684\u7cbe\u795e\u3002 <p>\u2014\u2014\u2014\u2014 \u300a\u4e60\u8fd1\u5e73\u7684\u4e03\u5e74\u77e5\u9752\u5c81\u6708\u300b\u9676\u6d77\u7c9f \u00a0 \u00a0 </p></p> <p>\u771f\u6b63\u63a5\u53d7\u81ea\u5df1\u7684\u65e0\u529b\u611f\uff0c\u662f\u4e00\u79cd\u4ee4\u4eba\u96be\u4ee5\u7f6e\u4fe1\u7684\u89e3\u653e\u3002\u6bcf\u5f53\u6211\u683c\u5916\u7d27\u5f20\u3001\u4e3a\u67d0\u4ef6\u4e8b\u6cae\u4e27\uff0c\u6bcf\u5f53\u6211\u89c9\u5f97\u81ea\u5df1\u5fd8\u4e86\u81ea\u5df1\u662f\u8c01\uff0c\u60f3\u5f97\u5230\u8d85\u8fc7\u81ea\u5df1\u5e94\u5f97\u7684\u4e1c\u897f\uff0c\u6211\u5c31\u4f1a\u91cd\u65b0\u8c03\u6574\u81ea\u5df1\uff0c\u56de\u5fc6\u6210\u957f\u7684\u8fc7\u7a0b\uff0c\u56de\u60f3\u5f53\u65f6\u7684\u72b6\u51b5\u3002\u8fd9\u4f1a\u8ba9\u4eba\u770b\u6e05\u4e8b\u60c5\u7684\u672c\u8d28\uff0c\u8ba9\u6211\u8bb0\u8d77\u81ea\u5df1\u771f\u6b63\u91cd\u89c6\u7684\u4e8b\u60c5\uff1a\u5bb6\u5ead\u3001\u4e50\u8da3\u3001\u5feb\u4e50\u3001\u5e78\u798f\u3001\u7231\u3002 <p>\u2014\u2014\u2014\u2014 Novak Djokovic \u00a0 \u00a0 </p></p> <p>\u8bf7\u8bb0\u4f4f\uff1a\u80fd\u4e0d\u80fd\u597d\u597d\u63a7\u5236\u81ea\u5df1\uff0c\u53bb\u514b\u670d\u8fd9\u4e9b\u60c5\u7eea\uff0c\u5c06\u51b3\u5b9a\u4f60\u7684\u751f\u6d3b\u8d28\u91cf\u3002\u6211\u7684\u751f\u6d3b\u8d28\u91cf\u6765\u81ea\u6211\u8eab\u8fb9\u7684\u8fd9\u4e9b\u4eba\uff0c\u4e5f\u6765\u81ea\u4e8e\u6211\u5bf9\u4ed6\u4eec\u7684\u7231\u3002 <p>\u2014\u2014\u2014\u2014 Novak Djokovic \u00a0 \u00a0 </p></p> <p>\u6124\u6012\u548c\u4e0d\u7518\uff0c\u53ea\u6709\u901a\u8fc7\u4fef\u77b0\uff0c\u624d\u80fd\u5316\u4e3a\u529b\u91cf\u3002  <p>\u2014\u2014\u2014\u2014 \u300a\u590f\u65e5\u91cd\u73b0\u300b \u00a0 \u00a0 </p></p> <p>\u6211\u4eec\u90fd\u662f\u6d3b\u751f\u751f\u7684\u4eba, \u4ece\u5c0f\u5c31\u88ab\u4e0d\u7531\u81ea\u4e3b\u5730\u6559\u5bfc\u7528\u6700\u5c0f\u7684\u4ed8\u51fa\u83b7\u5f97\u6700\u5927\u7684\u5f97\u5230, \u7ecf\u5e38\u4f1a\u5fd8\u8bb0\u6211\u4eec\u7a76\u7adf\u8981\u7684\u662f\u4ec0\u4e48. \u6211\u627f\u8ba4\u6211\u5b8c\u7f8e\u4e3b\u4e49, \u4f46\u6211\u60f3\u6bcf\u4e2a\u4eba\u5fc3\u4e2d\u90fd\u6709\u90a3\u4e00\u4efd\u6c42\u77e5\u7684\u6e34\u671b\u548c\u5bf9\u771f\u7406\u7684\u5411\u5f80, \"\u5927\u5b66\"\u7684\u7075\u9b42\u4e5f\u5c31\u5728\u4e8e\u8d85\u8d8a\u4e16\u4fd7, \u8d85\u8d8a\u65f6\u4ee3\u7684\u7eaf\u771f\u548c\u7406\u60f3 -- \u6211\u4eec\u4e0d\u662f\u8981\u8ba8\u597d\u4f01\u4e1a\u7684\u6bd5\u4e1a\u751f, \u800c\u662f\u8981\u5bfb\u627e\u6539\u53d8\u4e16\u754c\u7684\u529b\u91cf.  <p>\u2014\u2014\u2014\u2014 jyy \u00a0 \u00a0 </p></p> <p>\u6559\u80b2\u9664\u4e86\u77e5\u8bc6\u7684\u8bb0\u5fc6\u4e4b\u5916, \u66f4\u672c\u8d28\u7684\u662f\u80fd\u529b\u7684\u8bad\u7ec3, \u5373\u6240\u8c13\u7684training. \u800c\u4f46\u51e1training\u5c31\u5fc5\u987b\u514b\u670d\u4e00\u5b9a\u7684\u96be\u5ea6, \u5426\u5219\u4f60\u5c31\u662f\u5728\u505a\u91cd\u590d\u52b3\u52a8, \u80fd\u529b\u4e5f\u4e0d\u4f1a\u6709\u6539\u53d8. \u5982\u679c\u9047\u5230\u96be\u5ea6\u5c31\u9009\u62e9\u9000\u7f29, \u6216\u8005\u8ba9\u522b\u4eba\u6765\u66ff\u4f60\u514b\u670d\u672c\u8be5\u7531\u4f60\u81ea\u5df1\u514b\u670d\u7684\u96be\u5ea6, \u7b49\u4e8e\u662f\u81ea\u52a8\u653e\u5f03\u4e86\u83b7\u5f97training\u7684\u673a\u4f1a, \u800c\u8fd9\u5176\u5b9e\u662f\u5927\u5b66\u4e13\u4e1a\u6559\u80b2\u6700\u5b9d\u8d35\u7684\u90e8\u5206.  <p>\u2014\u2014\u2014\u2014 etone \u00a0 \u00a0 </p></p> <p>\u8fd9\u79cd\"\u53ea\u8981\u4e0d\u5f71\u54cd\u6211\u73b0\u5728survive, \u5c31\u4e0d\u8981\u7d27\"\u7684\u60f3\u6cd5\u5176\u5b9e\u975e\u5e38\u7684\u5229\u5df1\u548c\u77ed\u89c6: \u4f60\u5728\u4e13\u4e1a\u4e0a\u7684\u6280\u4e0d\u5982\u4eba, \u8fdf\u65e9\u6709\u4e00\u5929\u4f1a\u627e\u4e0a\u6765, \u4f1a\u5f71\u54cd\u5230\u4f60\u4e2a\u4eba\u804c\u4e1a\u751f\u6daf\u7684\u957f\u8fdc\u7684\u53d1\u5c55; \u66f4\u4e25\u91cd\u7684\u662f, \u8fd9\u4e9b\u4ee5\u5f97\u8fc7\u4e14\u8fc7\u7684\u6001\u5ea6\u6765\u5bf9\u5f85\u81ea\u5df1\u4e13\u4e1a\u7684\u5b66\u751f, \u4ed6\u4eec\u7684survive\u5176\u5b9e\u662f\u4ee5\u900f\u652f\u5357\u5927\u6559\u80b2\u7684\u4fe1\u8a89\u4e3a\u4ee3\u4ef7\u7684 -- \u5982\u679c\u6211\u4eec\u4e00\u5b9a\u6bd4\u4f8b\u7684\u6bd5\u4e1a\u751f\u90fd\u662f\u8fd9\u79cd\u60c5\u51b5, \u90a3\u4e48\u8fc7\u4e0d\u4e86\u591a\u4e45, \u4e0d\u4f46\u90a3\u4e9b\u6df7\u5230\u6bd5\u4e1a\u7684\u5b66\u751f\u4e5f\u6ca1\u90a3\u4e48\u5bb9\u6613survive\u4e86, \u800c\u4e14\u90a3\u4e9b\u771f\u6b63\u81ea\u5df1\u523b\u82e6\u52aa\u529b\u7684\u5b66\u751f, \u4ed6\u4eec\u7684\u524d\u9014\u4e5f\u4f1a\u53d7\u5230\u5f71\u54cd.  <p>\u2014\u2014\u2014\u2014 etone \u00a0 \u00a0 </p></p>"},{"location":"misc/tennis/","title":"\u6b63\u624b","text":""},{"location":"misc/tennis/#_2","title":"\u9996\u94a2\u6559\u7ec3","text":"<ul> <li> <p>\u8ba9\u7403\u62cd\u53bb\u51fb\u7403\uff0c\u800c\u975e\u8eab\u4f53\u4e3b\u52a8\u53bb\u51fb\u7403\u3002\u8fd9\u610f\u5473\u7740\u5728\u5f15\u62cd\u51fb\u7403\u65f6\uff0c\u8eab\u4f53\u4e0d\u8981\u4e3b\u52a8\u8f6c\u8fc7\u53bb\uff0c\u8ba9\u6325\u62cd\u7684\u52a8\u4f5c\u81ea\u7136\u5e26\u52a8\u8eab\u4f53\u8f6c\u52a8\u3002</p> </li> <li> <p>\u6325\u62cd\u7684\u8fc7\u7a0b\u662f\u4e00\u4e2a\u901f\u5ea6\u9012\u589e\u7684\u8fc7\u7a0b\u3002\u6325\u62cd\u4e00\u5b9a\u662f\u8d8a\u6765\u8d8a\u5feb\u7684\uff0c\u4e0d\u80fd\u51fa\u73b0\u540e\u6bb5\u6162\u4e8e\u524d\u6bb5\u3002</p> </li> <li> <p>\u6325\u62cd\u5c3d\u91cf\u4fdd\u6301\u8f68\u8ff9\u5728\u4e00\u6761\u76f4\u7ebf\uff08\u4e00\u4e2a\u5e73\u9762\u5185\uff09\uff0c\u4e0d\u8981\u51fa\u73b0\u8fc7\u591a\u7684\u5f2f\u66f2</p> </li> <li> <p>\u9884\u5224\u51fb\u7403\u9ad8\u5ea6\uff0c\u8c03\u6574\u91cd\u5fc3\u9ad8\u5ea6\uff0c\u4f7f\u5f97\u6bcf\u6b21\u5f15\u62cd\u548c\u6765\u7403\u7684\u9ad8\u5ea6\u5dee\u4fdd\u6301\u4e00\u81f4</p> </li> <li> <p>\u51fb\u7403\u65f6\u4fdd\u8bc1\u8eab\u4f53\u5e73\u8861\uff0c\u8111\u888b\u4f4d\u7f6e\u57fa\u672c\u4e0d\u53d8</p> </li> <li> <p>\u63e1\u62cd\u4e0d\u8981\u592a\u7d27\uff0c\u90a3\u6837\u7684\u8bdd\u7eaf\u9760\u80f3\u818a\u53d1\u529b\uff1b\u81ea\u7136\u63e1\u62cd\uff0c\u53ef\u4ee5\u5229\u7528\u5230\u62cd\u7684\u60ef\u6027</p> </li> <li> <p>\u9ad8\u4f4d\u7403\uff0c\u9996\u5148\u7ad9\u4f4d\u8981\u51c6\u786e\uff0c\u5176\u6b21\u53ef\u4ee5\u5c06\u7403\u62cd\u4e0a\u626c\uff0c\u800c\u4e0d\u9700\u8981\u4e00\u76f4\u6c34\u5e73\uff0c\u589e\u5927\u4e0a\u65b9\u7684\u51fb\u7403\u9762\u79ef</p> </li> <li> <p>\u6325\u62cd\u6c38\u8fdc\u6b63\u5e38\u6325\uff0c\u4e0d\u8981\u62c5\u5fc3\u7403\u592a\u9760\u524d\u6216\u592a\u9760\u540e\u800c\u53bb\u8c03\u6574\u6325\u62cd\u8f68\u8ff9</p> </li> </ul>"},{"location":"misc/tennis/#_3","title":"\u53cd\u624b","text":"<ul> <li> <p>\u6536\u62cd\u65f6\uff0c\u8f85\u52a9\u624b\u8098\u5f20\u5f00\u7ed5\u8fc7\u5929\u7075\u76d6\u5230\u540e\u8111\u52fa\uff0c\u53d1\u529b\u624b\u8098\u6307\u5411\u843d\u7403\u65b9\u5411</p> </li> <li> <p>\u8f6c\u4f53\u8981\u8fc5\u901f\uff0c\u4e0d\u80fd\u62d6\u6c93</p> </li> </ul>"},{"location":"misc/tennis/#_4","title":"\u53d1\u7403","text":"<ul> <li>\u591a\u52a0\u7ec3\u4e60\u53d1\u529b\u6a21\u5f0f\uff1a\u4e0d\u662f\u624b\u81c2\u53d1\u529b\uff0c\u90a3\u6837\u5c31\u8ddf\u6325\u68cd\u5b50\u4e00\u6837\uff1b\u5e94\u8be5\u662f\u5927\u81c2\u53d1\u529b\uff0c\u7136\u540e\u9501\u4f4f\uff0c\u5411\u524d\u62bd\u51fa\uff0c\u50cf\u7529\u97ad\u5b50\u4e00\u6837\u3002</li> </ul>"},{"location":"research/general/lab/","title":"\u610f\u5411lab","text":""},{"location":"research/general/lab/#_1","title":"\u56fd\u5185","text":""},{"location":"research/general/lab/#_2","title":"\u6691\u7814","text":"<ul> <li>HKU CDS</li> <li>\u540c\u4e0a</li> </ul>"},{"location":"research/general/lab/#_3","title":"\u5927\u4e09\u4e0b\u5b9e\u4e60","text":"<ul> <li>SJTU | linfeng zhang</li> <li>SJTU | Jingwen Leng</li> <li>THU | Yu Wang</li> <li>THU | Kaisheng Ma</li> </ul>"},{"location":"research/general/lab/#_4","title":"\u4fdd\u7814","text":""},{"location":"research/general/lab/#_5","title":"\u56fd\u5916","text":""},{"location":"research/general/lab/#hkust","title":"HKUST","text":"<ul> <li>\u8d3e\u4f73\u4e9a</li> <li>\u9648\u9686</li> <li>\u9673\u542f\u5cf0</li> </ul>"},{"location":"research/general/lab/#cuhk","title":"CUHK","text":"<ul> <li>\u738b\u5a01</li> </ul>"},{"location":"research/general/lab/#hku","title":"HKU","text":"<ul> <li>\u7f57\u5e73</li> </ul>"},{"location":"research/general/lab/#nus","title":"NUS","text":"<ul> <li>Mike Zheng Shou</li> <li>You Yang</li> </ul>"},{"location":"research/general/lab/#ntu","title":"NTU","text":"<ul> <li>\u5218\u5b50\u7eac</li> <li>Chen Change Loy</li> <li>\u5f20\u542b\u671b</li> </ul>"},{"location":"research/general/lab/#_6","title":"\u5317\u7f8e","text":"<ul> <li>MIT | Song Han</li> <li>UCSD | Hao Zhang</li> <li>ETHz | Torsten Hoefler</li> <li>UIUC | Jiaxuan You</li> </ul>"},{"location":"research/general/lab/#phd-candidate-to-contact","title":"PhD candidate to contact","text":""},{"location":"research/general/resource/","title":"\u5b66\u4e60\u8d44\u6e90","text":"<p>Compilation of categorized learning resources</p> <p>PyTorch/LLM Basics </p> <ul> <li> <p>from scratch</p> </li> <li> <p>tudui</p> </li> <li> <p>gpt2</p> </li> <li> <p>illustrated gpt2</p> </li> </ul> <p>AutoRegressive Model</p> <ul> <li> <p>PixelCNN by Google DeepMind</p> </li> <li> <p>PixelCNN++ by OpenAI</p> </li> </ul> <p>Cachekit resources recommended by Jing Liu</p> <ul> <li> <p>vllm</p> </li> <li> <p>Nvidia Inference Optimization blog</p> </li> <li> <p>Yao Fu</p> </li> <li> <p>Yao Fu 2</p> </li> </ul> <p>visual generative model</p> <ul> <li>MIT 6.S978 Deep Generative Models</li> </ul> <p>Flash Attention</p> <ul> <li>Flash Attention</li> </ul> <p>Sparse Attention resources recommended by Yefei He</p> <ul> <li> <p>MInference</p> </li> <li> <p>cross attention: online blogs will just be ok</p> </li> </ul> <p>Diffusion model resources recommended by bohan</p> <ul> <li> <p>Diffusion models</p> </li> <li> <p>Generative models</p> </li> </ul> <p>Vision transformer</p> <ul> <li> <p>ViT</p> </li> <li> <p>CNN(ResNet)</p> </li> </ul> <p>Multimodal LLM</p> <ul> <li> <p>LLaVA</p> </li> <li> <p>NExT-GPT</p> </li> </ul> <p>Attention Basics</p> <ul> <li>sebastian</li> </ul> <p>Relevant Online Courses </p> <ul> <li> <p>cs231n</p> </li> <li> <p>HanLAB TinyML</p> </li> <li> <p>CMU dlsys</p> </li> <li> <p>Parallel Computing</p> </li> </ul> <p>HuggingFace resources</p> <ul> <li>transformer tokenizer</li> </ul> <p>General videos</p> <p>Terence Tao at IMO 2024</p> <p>Tokenizer</p> General advice for PhD <p>Andrej Karpathy</p>"},{"location":"research/paper/attention/","title":"Attention","text":"<p> The concept of \"attention\" in deep learning has its roots in the effort to improve Recurrent Neural Networks (RNNs) for handling longer sequences or sentences. </p> <p>Translating a sentence word-by-word is usually not an option because it ignores the complex grammatical structures and idiomatic expressions unique to each language, leading to inaccurate or nonsensical translations.</p> <p>To overcome this issue, attention mechanisms were introduced to give access to all sequence elements at each time step. The key is to be selective and determine which words are most important in a specific context.</p>"},{"location":"research/paper/attention/#self-attention","title":"Self Attention","text":""},{"location":"research/paper/attention/#embedding-an-input-sentence","title":"Embedding an Input Sentence","text":""},{"location":"research/paper/attention/#defining-the-weight-matrices","title":"Defining the Weight Matrices","text":"<ul> <li> <p>Query sequence: q(i) = x(i)Wq for i in sequence 1 \u2026 T</p> </li> <li> <p>Key sequence: k(i) = x(i)Wk for i in sequence 1 \u2026 T</p> </li> <li> <p>Value sequence: v(i) = x(i)Wv for i in sequence 1 \u2026 T</p> </li> </ul> <p>The index i refers to the token index position in the input sequence, which has length T.</p> <p>Here, both q(i) and k(i) are vectors of dimension dk. The projection matrices Wq and Wk have a shape of d \u00d7 dk , while Wv has the shape d \u00d7 dv .</p>"},{"location":"research/paper/attention/#computing-the-unnormalized-attention-weights-and-the-context-vector","title":"Computing the Unnormalized Attention Weights and the Context Vector","text":"<pre><code>class SelfAttention(nn.Module):\n\u200b\n    def __init__(self, d_in, d_out_kq, d_out_v):\n        super().__init__()\n        self.d_out_kq = d_out_kq\n        self.W_query = nn.Parameter(torch.rand(d_in, d_out_kq))\n        self.W_key   = nn.Parameter(torch.rand(d_in, d_out_kq))\n        self.W_value = nn.Parameter(torch.rand(d_in, d_out_v))\n\u200b\n    def forward(self, x):\n        keys = x @ self.W_key\n        queries = x @ self.W_query\n        values = x @ self.W_value\n\n        attn_scores = queries @ keys.T  # unnormalized attention weights    \n        attn_weights = torch.softmax(\n            attn_scores / self.d_out_kq**0.5, dim=-1\n        )\n\n        context_vec = attn_weights @ values\n        return context_vec\n</code></pre>"},{"location":"research/paper/attention/#multi-head-attention","title":"Multi-Head Attention","text":"single-head muti-head <pre><code>class MultiHeadAttentionWrapper(nn.Module):\n\u200b\n    def __init__(self, d_in, d_out_kq, d_out_v, num_heads):\n        super().__init__()\n        self.heads = nn.ModuleList(\n            [SelfAttention(d_in, d_out_kq, d_out_v) \n             for _ in range(num_heads)]\n        )\n\u200b\n    def forward(self, x):\n        return torch.cat([head(x) for head in self.heads], dim=-1)\n</code></pre> <p>each attention head in multi-head attention can potentially learn to focus on different parts of the input sequence, capturing various aspects or relationships within the data. This diversity in representation is key to the success of multi-head attention.</p>"},{"location":"research/paper/attention/#cross-attention","title":"Cross-Attention","text":"self attn cross attn <p>k, v uses the output of encoder; while q uses the output of decoder</p> <pre><code>class CrossAttention(nn.Module):\n\u200b\n    def __init__(self, d_in, d_out_kq, d_out_v):\n        super().__init__()\n        self.d_out_kq = d_out_kq\n        self.W_query = nn.Parameter(torch.rand(d_in, d_out_kq))\n        self.W_key   = nn.Parameter(torch.rand(d_in, d_out_kq))\n        self.W_value = nn.Parameter(torch.rand(d_in, d_out_v))\n\u200b\n    def forward(self, x_1, x_2):           # x_2 is new\n        queries_1 = x_1 @ self.W_query\n\n        keys_2 = x_2 @ self.W_key          # new\n        values_2 = x_2 @ self.W_value      # new\n\n        attn_scores = queries_1 @ keys_2.T # new \n        attn_weights = torch.softmax(\n            attn_scores / self.d_out_kq**0.5, dim=-1)\n\n        context_vec = attn_weights @ values_2\n        return context_vec\n</code></pre>"},{"location":"research/paper/attention/#causal-self-attention","title":"Causal Self-Attention","text":"<p>Causal self-attention ensures that the outputs for a certain position in a sequence is based only on the known outputs at previous positions and not on future positions. </p> <p>In simpler terms, it ensures that the prediction for each next word should only depend on the preceding words. To achieve this in GPT-like LLMs, for each token processed, we mask out the future tokens, which come after the current token in the input text.</p> mask process <p></p> cross attn in transformer masked MHA"},{"location":"research/paper/attention/#more-efficient-masking-without-renormalization","title":"More efficient masking without renormalization","text":"original causal attn efficient causal attn"},{"location":"research/paper/flashattn/","title":"FlashAttention","text":""},{"location":"research/paper/flashattn/#flashattention","title":"FlashAttention","text":"<p>FlashAttention \u4e0e\u4f20\u7edf attention \u7684\u6838\u5fc3\u533a\u522b\u5728\u4e8e\u6ca1\u6709\u5c06 <code>S = Q @ K.T</code> \u548c <code>P = Softmax(S)</code>\u4e24\u4e2a NxN \u7684\u4e2d\u95f4\u7ed3\u679c\u77e9\u9635\u5b9e\u4f53\u5316\u5b58\u50a8\u5230 HBM \u4e2d\uff0c\u4ece\u800c\u4f7f\u5f97 memory footprint \u53d8\u6210 \\(O(N)\\)\uff1b</p> <p>\u9664\u4e86 memory footprint \u51cf\u5c11\uff0cHBM access \u6b21\u6570\u4e5f\u51cf\u5c11\uff0c\u4ece \\(O(N^2+Nd)\\) \u5230 \\((N^2d^2M^{-1})\\)\uff0c\u5176\u4e2d M \u4e3a SRAM \u5927\u5c0f\u3002</p> <p></p> <p></p>"},{"location":"research/paper/flashattn/#flashattention-2","title":"FlashAttention-2","text":"<p>\u5728 FlashAttention \u7684\u57fa\u7840\u4e0a\uff0c\u4f18\u5316\u4e86 inner loop \u7684\u8ba1\u7b97\uff1b</p>"},{"location":"research/paper/flashattn/#flashattention-3","title":"FlashAttention-3","text":""},{"location":"research/paper/llava/","title":"Architecture","text":"<ul> <li> <p>LLM</p> <p>we choose Vicuna [9] as our LLM  \\(f_\\phi(\\cdot)\\)  parameterized by \\(\\phi\\) , as it has the best instruction following capabilities in language tasks among publicly available checkpoints</p> </li> <li> <p>vision encoder</p> <p>For an input image \\(X_v\\), we consider the pre-trained CLIP visual encoder ViT-L/14 [ 40 ], which provides the visual feature \\(Z_v=g(X_v)\\). The grid features before the last Transformer layer are adopted in our experiments</p> </li> <li> <p>linear projection</p> <p>We consider a simple linear layer to connect image features into the word embedding space. Specifically, we apply a trainable projection matrix \\(W\\) to convert \\(Z_v\\) into language embedding tokens \\(H_v\\) , which have the same dimensionality as the word embedding space in the language model:</p> \\[ H_v=W \\cdot Z_v;\\ Z_v=g(X_v) \\] </li> </ul>"},{"location":"research/paper/llava/#training","title":"Training","text":"<p>For each image \\(X_v\\) , we generate multi-turn conversation data \\((X^1_q,X^1_a,...,X^T_q,X^T_a)\\), where \\(T\\) is the total number of turns. We organize them as a sequence, by treating all answers as the assistant\u2019s response, and the instruction \\(X^t_{instruct}\\) at the \\(t\\)-th turn as:</p> <p></p> <p></p>"},{"location":"research/paper/llava/#stage-1-pre-training-for-feature-alignment","title":"Stage 1: Pre-training for Feature Alignment","text":"<p>In training, we keep both the visual encoder and LLM weights frozen, and maximize the likelihood of (3) with trainable parameters \\(\\theta=W\\) (the projection matrix) only. In this way, the image features \\(H_v\\) can be aligned with the pre-trained LLM word embedding. This stage can be understood as training a compatible visual tokenizer for the frozen LLM.</p>"},{"location":"research/paper/llava/#stage-2-fine-tuning-end-to-end","title":"Stage 2: Fine-tuning End-to-End","text":"<p>We always keep the visual encoder weights frozen, and continue to update both the pre-trained weights of the projection layer and LLM in LLaVA; i.e., the trainable parameters are \\(\\theta=\\{ W,\\phi \\}\\) in (3). We consider two specific use case scenarios:</p> <ul> <li> <p>Multimodal Chatbot</p> <p>We develop a Chatbot by fine-tuning on the 158K language-image instruction-following data in Section 3. Among the three types of responses, conversation is multi-turn while the other two are single-turn. They are uniformly sampled in training.</p> <p>training template box</p> <p></p> </li> <li> <p>Science QA</p> <p>We study our method on the ScienceQA benchmark [34], the first large-scale multimodal science question dataset that annotates the answers with detailed lectures and explanations. </p> <p>Each question is provided a context in the form of natural language or an image.</p> <p>The assistant provides the reasoning process in natural language and selects the answer among multiple choices. For training in (2), we organize the data as a single turn conversation, the question &amp; context as \\(X_{instruct}\\), and reasoning &amp; answer as \\(X_a\\).</p> </li> </ul>"},{"location":"research/paper/survey/","title":"Efficient Inference for LLMs","text":""},{"location":"research/paper/survey/#_1","title":"\u4e00\u4e9b\u524d\u7f6e\u77e5\u8bc6","text":""},{"location":"research/paper/survey/#transformer","title":"Transformer\u67b6\u6784","text":"<p>transformer\u67b6\u6784\u7531\u82e5\u5e72transformer block\u7ec4\u6210\uff0c\u6bcf\u4e2ablock\u53c8\u7531\u4ee5\u4e0b\u4e09\u4e2a\u90e8\u4ef6\u6784\u6210</p> <ul> <li>a Multi-Head Self-Attention (MHSA) block</li> <li>a Feed Forward Net-work (FFN)</li> <li>a LayerNorm (LN) operation</li> </ul> <p>For each block, it receives the output features of the previous one as the input, and passes the features through each sub-module to obtain the output. </p> <p>\u7279\u522b\u5730\uff0c\u5728\u7b2c\u4e00\u4e2ablock\u4e4b\u524d\uff0ca tokenizer\u7528\u6765\u5c06original input sentence\u8f6c\u53d8\u6210a sequence of tokens\uff0c\u7136\u540ea following embedding layer\u7528\u6765\u5c06the tokens \u8f6c\u53d8\u6210the input features\u3002\u7136\u540e\uff0cthe additional position embeddings are added into the input features to encode the sequential order of each input token.</p> <p>Transformer\u67b6\u6784\u7684\u6838\u5fc3\u5728\u4e8eself-attention mechanism\uff0c\u5176\u4e2d\u5177\u4f53\u7684\u5185\u90e8\u5904\u7406\u8fc7\u7a0b\u5982\u4e0b\uff1a\uff08\u6682\u65f6\u7701\u7565\uff09</p>"},{"location":"research/paper/survey/#inference-process-of-llms","title":"Inference Process of LLMs","text":"<p>\u6700\u5e38\u7528\u7684LLM\u91c7\u7528auto-regressive method(AR)\u6765\u751f\u6210\u8f93\u51fa\u53e5\u5b50\u3002AR\u7684\u673a\u5236\u662fgenerate tokens one by one\uff0c\u5728\u6bcf\u4e00\u4e2atoken generation step\uff0cLLM takes as input the whole token sequences, including the input tokens and previously generated tokens, and generates the next token.</p> <p>\u56e0\u6b64\uff0c\u968f\u7740sequence length\u7684\u589e\u52a0\uff0cgeneration\u7684\u65f6\u95f4\u4e5f\u4f1a\u8fc5\u901f\u589e\u957f\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5f15\u8fdb\u4e00\u79cd\u65b9\u6cd5key-value(KV) cache\u6765\u52a0\u901fgeneration\u3002KV cache\u7684\u4f5c\u7528\u662fstoring and reusing previous key (K) and value (V) pairs within the Multi-Head Self-Attention (MHSA) block.</p> <p>\u57fa\u4e8eKV cache\u7684\u8bbe\u8ba1\uff0cLLM\u7684inference process\u53ef\u4ee5\u5212\u5206\u4e3a2\u4e2a\u9636\u6bb5\uff0c\u89c1\u4e0b\u56fe\uff1a</p> <ul> <li> <p>Prefilling Stage: </p> <p>The LLM calculates and stores the KV cache of the initial input tokens, and generates the first output token</p> </li> <li> <p>Decoding Stage: </p> <p>The LLM generates the output tokens one by one with the KV cache, and then updates it with the key (K) and value (V) pairs of the newly generated token</p> </li> </ul> <p></p>"},{"location":"research/paper/survey/#critical-efficiency-indicators","title":"Critical efficiency indicators","text":"<ul> <li> <p>latency</p> <ol> <li>first token latency</li> <li>per-output token latency</li> <li>generation latency</li> </ol> </li> <li> <p>model size</p> </li> <li> <p>throughput</p> <ol> <li>token throughput</li> <li>request throughput</li> </ol> </li> </ul> <p>\u6574\u4e2ainference\u7684\u8fc7\u7a0b\u5982\u4e0b\u56fe\uff1a</p> inference <p></p>"},{"location":"research/paper/survey/#efficiency-analysis","title":"Efficiency analysis","text":"<p>\u5728resource-constrained\u7684\u573a\u666f\u4e0b\u90e8\u7f72LLMs\uff0c\u540c\u65f6\u8981\u4fdd\u8bc1\u4ed6\u4eec\u7684\u6027\u80fd\u662f\u4e00\u4e2a\u6311\u6218\uff0c\u9664\u4e86\u5b58\u50a8\u548c\u65f6\u5ef6\u4e4b\u5916\uff0c\u8fd8\u8981\u8003\u8651\u529f\u8017\u3001\u541e\u5410\u91cf\u7b49\u3002\u5bf9\u4e8e\u4e0a\u8ff0\u7684\u4e09\u4e2a\u6307\u6807\uff0c\u6709\u4e09\u4e2a\u6700\u91cd\u8981\u7684\u5f71\u54cd\u56e0\u7d20\uff1a</p> <ul> <li>computational cost</li> <li>the memory access cost </li> <li>the memory usage</li> </ul> <p>\u63a5\u4e0b\u6765\u57fa\u4e8e\u8fd9\u4e09\u4e2a\u5f71\u54cd\u56e0\u7d20\u63d0\u51fa\u4e09\u4e2ainefficiency\u7684root causes</p> <ul> <li>Model Size:</li> <li>Attention Operation:</li> <li>Decoding Approach:</li> </ul> <p>\u6839\u636e\u4e0a\u8ff0\u7684factors\u548ccauses\uff0c\u4f5c\u8005\u5bf9\u5f53\u4eca\u7684inference optimizaion\u65b9\u6cd5\u8fdb\u884c\u4e86\u5206\u7c7b\uff0c\u5373\uff1a</p> <ul> <li>Data level optimization</li> <li>model level optimization</li> <li>system level optimization</li> </ul> <p>\u63a5\u4e0b\u6765\u5206\u522b\u8be6\u7ec6\u4ecb\u7ecd\u5404\u4e2alevel\u7684\u4f18\u5316\u65b9\u6cd5</p>"},{"location":"research/paper/survey/#data-level-optimization","title":"Data level optimization","text":"<p>\u53ef\u4ee5\u8fdb\u4e00\u6b65\u5206\u4e3a </p> <ul> <li> <p>input compression</p> <p>directly shorten the model input to reduce the inference cost</p> </li> <li> <p>output organization</p> <p>enable batch (parallel) inference via organizing the structure of output content, which can improve the hardware utilization and reduce the generation latency.</p> </li> </ul>"},{"location":"research/paper/survey/#input-compression","title":"Input Compression","text":""},{"location":"research/paper/survey/#model-level-optimization","title":"model-level OPTIMIZATION","text":""},{"location":"research/paper/survey/#efficient-structure-design","title":"Efficient Structure Design","text":"<p>need re-training from scratch</p>"},{"location":"research/paper/survey/#efficient-ffn-design","title":"Efficient FFN Design","text":""},{"location":"research/paper/survey/#efficient-attention-design","title":"Efficient Attention Design","text":""},{"location":"research/paper/survey/#transformer-alternates","title":"Transformer Alternates","text":""},{"location":"research/paper/survey/#model-compression","title":"Model compression","text":""},{"location":"research/paper/survey/#quantization","title":"Quantization","text":""},{"location":"research/paper/survey/#post-training-quantization-ptq","title":"Post-Training Quantization (PTQ)","text":"<p>quantizing pre-trained models without the need for retraining</p> <p>well-explored for smaller models, but applying directly to LLMs presents challenges. </p> <p>This is primarily because</p> <ul> <li> <p>weights and activations of LLMs often exhibit more outliers</p> </li> <li> <p>and have a wider distribution range compared to smaller models</p> </li> </ul> <p></p> <ul> <li> <p>weight-only quantization</p> <ul> <li>GPTQ</li> <li>AWQ</li> <li>SpQR</li> <li> <p>SqueezeLLM</p> <p>weight outliers are identified and allocated higher precision during quantization</p> </li> <li> <p>QuIP</p> </li> <li> <p>QuaRot/SpinQuant</p> <p>follows the computational invariance idea, by multiplying rotation matrices to the weight matrices and activation matrices</p> </li> </ul> </li> <li> <p>weight-activation quantization</p> <ul> <li>ZeroQuant</li> <li>SmoothQuant</li> <li> <p>RPTQ</p> <p>reorganizes channels with similar activation distributions into clusters and independently applies quantization within each cluster</p> </li> <li> <p>Omniquant</p> <p>it optimizes the boundaries for weight clipping and the scaling factor for equivalent transformation to minimize quantization errors</p> </li> <li> <p>Atom</p> </li> <li> <p>BiLLM</p> <p>BiLLM identified the bell-shaped distribution of weights and the exceptionally long-tail distribution of weights\u2019 Hessian matrix. </p> <p>Based on this, it proposes to categorize weights into salient and non-salient values structurally based on the Hessian matrix and binarizes them separately</p> </li> </ul> </li> </ul>"},{"location":"research/paper/survey/#quantization-aware-training-qat","title":"Quantization-Aware Training (QAT)","text":"<p>quantization within the model training procedure</p> <ul> <li> <p>reduce the data requirements</p> </li> <li> <p>reduce the computation cost</p> <p>parameter-efficient tuning (PEFT)</p> <ul> <li> <p>QLoRA</p> <p>quantizes the weights of LLMs into 4-bit, and subsequently employs LoRA in BF16 for each 4-bit weight matrix to fine-tune the quantized model.</p> </li> </ul> </li> </ul>"},{"location":"research/paper/survey/#sparsification","title":"Sparsification","text":"<p>a compression technique that increases the proportion of zero-valued elements in data structures such as model parameters or activations. </p> <p>This method aims to decrease computational complexity and memory usage by efficiently ignoring zero elements during computation.</p>"},{"location":"research/paper/survey/#weight-pruning","title":"Weight Pruning","text":"<p>removes less critical weights and structures from models\u3002</p> <p></p> <ul> <li> <p>unstructured pruning</p> <ul> <li> <p>SparseGPT</p> <p>It follows the idea of OBS [225], which considers the impact of removing each weight on the network\u2019s reconstruction loss.</p> </li> <li> <p>Sheared LLaMA</p> </li> <li>LoRA</li> </ul> </li> </ul>"},{"location":"research/paper/survey/#sparse-attention","title":"Sparse Attention","text":"<p>in Multi-Head Self-Attention (MHSA) components of transformer models.</p> <p>strategically omit certain attention calculations to enhance computational efficiency of the attention operation.</p> <p>mainly in the prefilling stage.</p> <p>These mechanisms diverge into static and dynamic categories based on their reliance on specific input data</p> <ul> <li> <p>static</p> <ul> <li>Sparse Transformer</li> <li> <p>StreamingLLM</p> <p>applies the local pattern, along with the global pattern only for the first few tokens. </p> <p>It shows that such a global pattern serves as the attention sink to keep the strong attention scores toward initial tokens. </p> <p>It helps the LLMs to generalize to infinite input sequence length.</p> </li> </ul> </li> <li> <p>dynamic</p> <ul> <li> <p>Spatten</p> <p>assesses the cumulative importance of each word by aggregating the attention matrix columns, subsequently pruning tokens with minimal cumulative significance from the input in subsequent layers.</p> </li> <li> <p>SeqBoat</p> <p>trains a linear State Space Model (SSM) with a sparse sigmoid function to determine which token to prune for each attention head</p> </li> <li> <p>Adaptively Sparse Attention</p> <p>gradually prunes the tokens during the generation process. It drops parts of the context that are no longer required for future generation</p> </li> </ul> </li> </ul>"},{"location":"research/paper/survey/#knowledge-distillation","title":"Knowledge distillation","text":"<p>Knowledge Distillation: A Survey</p>"},{"location":"research/paper/survey/#response-based-knowledge-distillation","title":"response-based knowledge distillation","text":"<p>the student model learns to mimic the predictions of the teacher model by minimizing the difference between predicted outputs. During the distillation process, the teacher model generates soft labels, which are probability distributions over the classes, for each input example. The student model is then trained to predict the same soft labels as the teacher model by minimizing a loss function that measures the difference between their predicted outputs.</p> <p>Additionally, response-based distillation can significantly reduce the computational requirements of operating a model by compressing it into a smaller and simpler one.</p> <p>However, response-based knowledge distillation has its limitations. For example, this technique only transfers knowledge related to the teacher model's predicted outputs and does not capture the internal representations learned by the teacher model. Therefore, it may not be suitable for tasks that require more complex decision-making or feature extraction.</p>"},{"location":"research/paper/survey/#feature-based-knowledge-distillation","title":"feature-based knowledge distillation","text":"<p>During the distillation process, the teacher model is first trained on the training data to learn the task-specific features that are relevant to the task at hand. The student model is then trained to learn the same features by minimizing the distance between the features learned by the teacher model and those learned by the student model. This is typically done using a loss function that measures the distance between the representations learned by the teacher and student models, such as the mean squared error or the Kullback-Leibler divergence.</p> <p>However, feature-based knowledge distillation has its limitations. This technique can be more computationally expensive than other types of knowledge distillation, as it requires extracting the internal representations from the teacher model at each iteration. Additionally, a feature-based approach may not be suitable for tasks where the teacher model's internal representations are not transferable or relevant to the student model.</p>"},{"location":"research/paper/survey/#relation-based-knowledge-distillation","title":"relation-based knowledge distillation","text":"<p>a student model is trained to learn a relationship between the input examples and the output labels. </p> <p>First, the teacher model generates a set of relationship matrices or tensors that capture the dependencies between the input examples and the output labels. The student model is then trained to learn the same relationship matrices or tensors by minimizing a loss function that measures the difference between the relationship matrices or tensors predicted by the student model and those generated by the teacher model.</p> <p>One of the main advantages of relation-based knowledge distillation is that it can help the student model learn a more robust and generalizable relationship between the input examples and output labels than it would be able to learn from scratch. This is because the teacher model has already learned the most relevant relationships between the inputs and outputs from the data, which can be transferred to the student model through the distillation process.</p> <p>However, generating the relationship matrices or tensors, especially for large datasets, can be computationally expensive. Additionally, a relation-based technique may not be suitable for tasks where the relationships between the input examples and the output labels are not well-defined or difficult to encode into a set of matrices or tensors.</p>"},{"location":"research/paper/survey/#reference-paper-for-reading","title":"reference paper for reading","text":""},{"location":"research/paper/survey/#efficient-ffn-design_1","title":"Efficient FFN Design","text":"<ul> <li> <p>[98] N. Shazeer, A. Mirhoseini, K. Maziarz, A. Davis, Q. Le, G. Hinton,and J. Dean, \u201cOutrageously large neural networks: The sparsely-gated mixture-of-experts layer,\u201d in International Conference on Learning Representations, 2016.</p> </li> <li> <p>[89] Z. Zhang, Y. Lin, Z. Liu, P. Li, M. Sun, and J. Zhou, \u201cMoefication: Transformer feed-forward layers are mixtures of experts,\u201d in Findings of the Association for Computational Linguistics: ACL 2022, 2022, pp. 877\u2013890.</p> </li> <li> <p>[84] A. Katharopoulos, A. Vyas, N. Pappas, and F. Fleuret, \u201cTransformers are rnns: Fast autoregressive transformers with linear attention,\u201d in International conference on machine learning. PMLR, 2020, pp. 5156\u20135165.</p> </li> </ul>"},{"location":"research/paper/survey/#multimodal-llms","title":"Multimodal LLMs","text":""},{"location":"research/paper/zipvl/","title":"prefill stage","text":"<p>prefill stage suffers from the quadratic complexity of the attention mechanism.</p>"},{"location":"research/paper/zipvl/#adaptive-layerwise-sparsity","title":"adaptive layerwise sparsity","text":"<p>introduce a layer-wise adaptive ratio assignment scheme for important token, instead of predefined, unified fixed ratio.</p>"},{"location":"research/paper/zipvl/#prefill-for-the-j-th-token","title":"prefill (for the j-th token)","text":"\\[ a_j=\\sum^n_{c=1}A_{c,j} \\\\ p=\\min\\{ p\\in \\Z | \\sum^p_{j=1}a_{sorted(j)} \\geq \\tau\\times n \\} \\] <p>p is the selected number of important tokens</p> \\[ \\tilde a_j = \\frac{\\sum^n_{c=1}A_{c,j}}{nnz(A_{:,j})}\\\\ {\\rm{\\bold T}} = {\\rm top\\_ k\\_ index}({\\tilde a_j},p) \\] <p>\\({\\rm{\\bold T}}\\) is the index of the selected important tokens, \\(nnz(A{:,j})\\) is the number of non-zeros in the j-th row of attention matrix, i.e. total attention score of j-th token</p>"},{"location":"research/paper/zipvl/#decode-newly-generated-token","title":"decode (newly generated token)","text":"\\[ q=xW_Q,\\ K={\\rm{Concat}}(K,xW_K),\\ V={\\rm{Concat}}(V,xW_V) \\\\ a={\\rm{softmax}}(\\frac{qK_T}{\\sqrt{d}}),\\ o=aV \\] <p>do prefill sparsity every 100 token generation</p> algorithm <p></p>"},{"location":"research/paper/zipvl/#ground","title":"ground","text":"<p>this allows the ratio to be adjusted according to task complexity.</p>"},{"location":"research/paper/zipvl/#pros","title":"pros","text":"<p>this approach seamlessly integrates with existing fast attention implementations without requiring custom GPU kernels.</p>"},{"location":"research/paper/zipvl/#decode-stage","title":"decode stage","text":"<p>In the decoding phase, each new token interacts with all preceding tokens, requiring to fetch the full key-value (KV)cache from memory.</p>"},{"location":"research/paper/zipvl/#utilize-important-set-from-prefill-stage","title":"utilize important set from prefill stage","text":"<p>the same set of important tokens is applied to compress the KV cache, where we employ high-bit quantization for caches of important tokens and low-bit quantization for those of less importance</p>"},{"location":"research/paper/zipvl/#_1","title":"ZipVL","text":"<p>zipvl</p> <p></p>"},{"location":"research/paper/zipvl/#further-readings","title":"Further readings","text":"<ul> <li> <p>FlashAttention</p> </li> <li> <p>Learning Transferable Visual Models From Natural Language Supervision</p> </li> </ul>"},{"location":"research/paper/zipvl/#vit","title":"ViT","text":"<p>vit</p>"},{"location":"research/paper/zipvl/#unstructuredsemi-structuredstructured-sparse-attention","title":"unstructured/semi-structured/structured sparse attention","text":"<ul> <li> <p>FastV</p> </li> <li> <p>HiRED</p> </li> <li> <p>MInference</p> </li> </ul>"},{"location":"research/paper/zipvl/#kv-cache-compression","title":"KV cache compression","text":"<ul> <li>token dropping-based </li> <li>token merging-based</li> <li>quantization-based</li> </ul> <p>ZipCache</p> <p>KVQuant</p>"},{"location":"self_learn/","title":"Index","text":"<p>Potential Contest</p> <ul> <li>open hackathons</li> <li>LeetCode</li> <li>Kaggle</li> <li>CodeForces</li> <li>National Computer System Competition</li> </ul>"},{"location":"self_learn/csapp/","title":"CSAPP","text":"<p>Please go to visit  csapp\u7b14\u8bb0</p>"},{"location":"self_learn/mathmodel/","title":"\u6570\u5b66\u5efa\u6a21","text":"<p>\u6295\u6807\u95ee\u9898\u7b2c\u4e09\u95ee\uff1a \u5df2\u77e5\u90e8\u5206\u4eba\u4f7f\u7528\u6570\u5b66\u5efa\u6a21\u65b9\u6cd5\u4f18\u5316\u81ea\u5df1\u7684\u7b56\u7565\uff0c\u5982\u4f55\u5e94\u5bf9</p> <ol> <li>\u5047\u8bbe\u8be5\u90e8\u5206\u4eba\u4f7f\u7528\u5747\u5300/\u6b63\u6001\u5206\u5e03\u9884\u4f30\u4ed6\u4eba\u51fa\u4ef7\uff0c\u90a3\u4e48\u53ef\u4ee5\u9884\u6d4b\u51fa\u4ed6\u4eec\u9488\u5bf9\u8fd9\u4e9b\u9884\u4f30\u7406\u8bba\u7ed9\u51fa\u7684\u51fa\u4ef7\uff0c\u7136\u540e\u4ee5\u6b64\u4f5c\u4e3a\u6211\u4eec\u7684\u51fa\u4ef7</li> <li> <p>\u5047\u8bbe\u8be5\u90e8\u5206\u4eba\u9884\u6d4b\u5bf9\u65b9\u3002\u91c7\u53d6\u4f7f\u5f97\u5bf9\u65b9\u91c7\u53d6\u884c\u52a8\u65f6\uff0c\u6536\u76ca\u6700\u5927\u7684\u884c\u52a8\u7684\u6536\u76ca\u503c\u6700\u5c0f</p> </li> <li> <p>\u5047\u8bbe\u4e00\u5f00\u59cb\u6240\u6709\u4eba\u7684\u4ef7\u683c\u90fd\u968f\u673a(or whatever)\uff0c\u7136\u540e\u90a3\u4e00\u90e8\u5206\u4f7f\u7528\u5efa\u6a21\u4f18\u5316\u7b56\u7565\u7684\u4eba\u4f7f\u7528\u5982\u4e0b\u7684\u7b56\u7565\uff0c\u5047\u8bbe\u62db\u6807\u4eba\u610f\u5411\u4ef7\u683c\u4e3aA\u56fa\u5b9a\uff0c\u5219\u4ed6\u4eec\u6267\u884c\u5982\u4e0b\u7684\u7b97\u6cd5\uff0c\u6bcf\u4e2a\u4eba\u8ba1\u7b97\u51fa\u5f53\u524d\u7684\u57fa\u51c6\u4ef7\u540e\uff0c\u5c06\u81ea\u5df1\u7684\u4ef7\u683c\u8bbe\u4e3a\u57fa\u51c6\u4ef7\uff1b\u6700\u540e\u76f4\u5230\u57fa\u51c6\u4ef7\u6536\u655b\u5230\u4e00\u5b9a\u7a0b\u5ea6\u65f6\u505c\u6b62\uff0c\u8be5\u57fa\u51c6\u4ef7\u5373\u4e3a\u90a3\u4e00\u90e8\u5206\u4f18\u5316\u8005\u7684\u62a5\u4ef7</p> </li> </ol> <p>\u4f46\u6211\u4eec\u5bb9\u6613\u53d1\u73b0\uff0c\u5728 3. \u7684\u60c5\u51b5\u4e0b\uff0c\u90a3\u4e00\u90e8\u5206\u4f18\u5316\u8005\u6240\u6709\u4eba\u6700\u7ec8\u90fd\u4f1a\u6536\u655b\u4e8e\u62db\u6807\u4eba\u610f\u5411\u4ef7\u4f5c\u4e3a\u81ea\u5df1\u7684\u51fa\u4ef7\uff0c\u90a3\u4e48\u6b64\u65f6\u5c31\u65e0\u6cd5\u533a\u5206\u51fa\u5f7c\u6b64\u4e86\uff0c\u4e5f\u5373\u90fd\u4e0d\u80fd\u4e2d\u6807\u3002\u56e0\u6b64\uff0c\u8be5\u90e8\u5206\u4eba\u4e0d\u4f1a\u5355\u7eaf\u91c7\u53d6\u6b64\u8fed\u4ee3\u7b56\u7565\uff0c\u6b64\u65f6</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u6539\u5584\u8be5\u7b56\u7565\u7684\u533a\u5206\u5ea6\uff0c\u901a\u8fc7\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u3001\u8d2a\u5fc3/\u63a2\u7d22\u6982\u7387\u7b97\u6cd5\uff0c\u907f\u514d\u6240\u6709\u4eba\u90fd\u805a\u96c6\u4e8e\u67d0\u4e2a\u5355\u4e00\u4ef7\u4f4d\u3002\u5176\u4e2d\uff0c\u6a21\u62df\u9000\u706b\u7b97\u6cd5\u7684\u6e29\u5ea6\u53ef\u4ee5\u7531\u6240\u6709\u4eba\u7684\u5f53\u524d\u51fa\u4ef7\u805a\u96c6\u7a20\u5bc6\u5ea6\uff08\u8fd9\u4e2a\u518d\u7422\u78e8\u4e00\u4e0b\u600e\u4e48\u8bbe\u8ba1\u516c\u5f0f\uff09\u6765\u51b3\u5b9a\uff0c\u82e5\u51fa\u4ef7\u8d8a\u805a\u96c6\u5728\u5c0f\u8303\u56f4\u5185\uff0c\u5219\u6e29\u5ea6\u8d8a\u9ad8\uff0c\u5373\u5f53\u524d\u4f18\u5316\u8005\u4e0d\u9009\u62e9\u5f53\u524d\u8ba1\u7b97\u51fa\u7684\u57fa\u51c6\u4ef7\u7684\u6982\u7387\u8d8a\u5927\u3002\u65e2\u7136\u4e0d\u9009\u62e9\u8ba1\u7b97\u51fa\u7684\u57fa\u51c6\u4ef7\uff0c\u90a3\u4e48\u81f3\u4e8e\u5982\u4f55\u66f4\u65b0\u81ea\u5df1\u7684\u51fa\u4ef7\uff0c\u7531\u4e8e\u6211\u4eec\u5e0c\u671b\u6700\u7ec8\u7ed3\u679c\u8d8b\u4e8e\u7a33\u5b9a\uff0c\u53c8\u4e0d\u805a\u96c6\u5728\u62db\u6807\u4eba\u610f\u5411\u4ef7\u9644\u8fd1\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bbe\u7f6e\u4e3a\u968f\u673a\u7528\u5176\u4ed610\u7ec4(A,B1,B2)\u7684\u4efb\u610f\u4e00\u7ec4\u66ff\u6362\u5f53\u524d(A,B1,B2)\u6765\u8ba1\u7b97\u5f97\u5230\u7684\u57fa\u51c6\u4ef7\u3002</li> </ul> <p>\u53ef\u4ee5\u8bc1\u660e\uff0c\u5728\u6b64\u7b56\u7565\u4e0b\uff0c\u6700\u7ec8\u5404\u4f4d\u7684\u51fa\u4ef7\u662f\u8d8b\u4e8e\u7a33\u5b9a\u7684\u5206\u6563\u5206\u5e03\u7684\uff0c\u8bc1\u660e\u5982\u4e0b\uff1a</p> <p>Proof of convergence</p> <p>\u6211\u4eec\u7684\u8fed\u4ee3\u516c\u5f0f\u4e3a</p> \\[ A_{new1} =Base_1(A_{new0},(A,B_1,B_2))*concentration + Base_0(A_0,(A,B_1,B_2))*(1-concentration) \\] <p>\u5176\u4e2d\\(Base_1,Base_0\\)\u4e3a\u66f4\u6362\u53c2\u6570\u7ec4\u5408\\((A,B_1,B_2)\\)\u524d\u540e\uff0c\u8ba1\u7b97\u8bc4\u6807\u57fa\u51c6\u4ef7\u7684\u51fd\u6570\uff1b\u8fd9\u662f\u4e00\u4e2a\u6570\u5b66\u671f\u671b\u7684\u8868\u8fbe\u5f0f</p> <p>\u53ef\u4ee5\u770b\u5230\uff0c \\(A_{new1}\\) \u6709 \\(1-concentration\\) \u7684\u6982\u7387\u53d6\u503c \\(Base_0(A_{new0},(A,B_1,B_2))\\) \u3002\u6211\u4eec\u5e0c\u671b\\(A_{new1}\\)\u5728\\(concentration\\)\u5c0f\u65f6\uff0c\u5373\u5728\\(A_{new1}\\) \u53d6\u503c \\(Base_0(A_0,(A,B_1,B_2))\\) \u65f6\u80fd\u591f\u5728\u8fed\u4ee3\u4e2d\u9010\u6e10\u6536\u655b\uff0c\u800c\u8fd9\u4e2a\u516c\u5f0f\u6070\u597d\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u4e00\u6027\u8d28\u3002</p> <p>\u4e3a\u8bc1\u660e\u7ed3\u8bba\u6210\u7acb\uff0c\u6211\u4eec\u6bd4\u8f83\u524d\u4e00\u6b21\u548c\u540e\u4e00\u6b21\u8fed\u4ee3\u8fc7\u7a0b\u4e2d\u51fa\u4ef7\u7684\u53d8\u5316\u503c $$ A_{new1} = Base_0(A_{new0},(A,B_1,B_2)) $$ \u6839\u636e\u6536\u655b\u7684\u5047\u8bbe\uff0c\u9664\\(A_0\\)\u5916\u5176\u4ed6\u4eba\u51fa\u4ef7\u5df2\u7ecf\u8fbe\u5230\u6536\u655b\u503c\uff0c\u56e0\u6b64\u53d8\u5316\u53ef\u5ffd\u7565\u3002\u90a3\u4e48\u6709 $$ A_{new2} = Base_0(A_{new1},(A,B_1,B_2)) $$ \u4e8e\u662f\uff0c\u6bd4\u8f83\u4e24\u6b21\u66f4\u65b0\u51fa\u4ef7\u9020\u6210\u7684\u51fa\u4ef7\u53d8\u5316</p> \\[ A_{new2}-A_{new1} \\\\ =(\\frac{A_1+A_2+...+A_{new1}+...+A_n}{n}\\times B_1 + A_{second-low}\\times B_2 + A\\times (1-B_1-B_2))\\\\ -(\\frac{A_1+A_2+...+A_{new0}+...+A_n}{n}\\times B_1 + A_{second-low}\\times B_2 + A\\times (1-B_1-B_2))\\\\ = \\frac{B_1}{n}\\times (A_{new1}-A_{new0}) &lt; A_{new1}-A_{new0} \\] <p>\u8bc1\u6bd5</p> <p>\u8fd9\u6837\uff0c\u53ef\u4ee5\u6a21\u62df11\u79cd\u7ec4\u5408\u7b49\u6982\u7387\u7684\u573a\u666f\uff0c\u540c\u65f6\u53ef\u4ee5\u731c\u6d4b\uff0c\u6700\u7ec8\u7684\u7ed3\u679c\u53ef\u80fd\u662f\u5728\u5404\u4e2a\u610f\u5411\u4ef7\u90fd\u805a\u96c6\u82e5\u5e72\uff08\u8fdc\u5c11\u4e8e\u603b\u4eba\u6570n\uff09\u7684\u6295\u6807\u4eba\uff0c\u8fd9\u5c31\u8fbe\u5230\u4e86\u6211\u4eec\u907f\u514d\u6240\u6709\u4eba\u805a\u96c6\u5728\u67d0\u533a\u95f4\u7684\u95ee\u9898</p> <p>\u5177\u4f53\u4ee3\u7801\u5982\u4e0b</p> code simulated_anneal.py<pre><code>import random\nimport math\nimport numpy as np\n\ndef compute_base_price(prices, a, b1, b2):\n    copy_prices = [price for price in prices]\n    copy_prices.sort()\n    return sum(copy_prices) / len(copy_prices) * b1 + copy_prices[1] * b2 + a * (1 - b1 - b2)\ndef raw_iteration(prices, a, b1, b2, error):\n    diff = error + 1\n    i = 0\n    while diff &gt; error:\n        prices[i] = compute_base_price(prices, a, b1, b2)\n        diff_list = [abs(price - compute_base_price(prices, a, b1, b2)) for price in prices]\n        diff = max(diff_list)\n        i = (i + 1) % len(prices)\n    return prices\n\ndef cluster_size(prices, cluster_range, starting_price):\n    # return (size, next_price)\n    copy_prices = [price for price in prices]\n    copy_prices.sort()\n    starting_idx = copy_prices.index(starting_price)\n    cur_idx = starting_idx + 1\n    last_idx = starting_idx\n    while cur_idx &lt; len(copy_prices):\n        if copy_prices[cur_idx] - copy_prices[last_idx] &lt; cluster_range:\n            last_idx = cur_idx\n            cur_idx += 1\n        else:\n            break\n    if cur_idx == len(copy_prices):\n        return (last_idx - starting_idx + 1, None)\n    return (last_idx - starting_idx + 1, copy_prices[cur_idx])\n\ndef divide_by_cluster(prices, cluster_range):\n    # return (cluster_num, max_cluster_size)\n    cluster_num = 0\n    max_size = 0\n    first_price = min(prices)\n    cur_price = first_price\n    val = cluster_size(prices, cluster_range, cur_price)\n    cluster_num += 1\n    while val[1]:\n        if max_size &lt; val[0]:\n            max_size = val[0]\n        cur_price = val[1]\n        val = cluster_size(prices, cluster_range, cur_price)\n        cluster_num += 1\n    if max_size &lt; val[0]:\n            max_size = val[0]\n    return (cluster_num, max_size)\n\ndef concentration(prices, cluster_range):\n    w1 = 0.3\n    w2 = 0.7\n    min_val = 2 * math.sqrt(w1 * w2 / len(prices))\n    max_val = w2 + w1 / len(prices)\n    (cluster_num, max_size) = divide_by_cluster(prices, cluster_range)\n    val = w1 * cluster_num / len(prices) + w2 * max_size / len(prices)\n    return (val - min_val) / (max_val - min_val)\n    # range from 0 to 1\n    # w1 * cluster_num / n + w2 * max_cluster_size / n\n    # &gt;= 2 * sqrt(w1 * w2 * cluster_num * max_cluster_size / n**2)\n    # &gt;= 2 * sqrt(w1 * w2 / n)\n    # &lt;= w2\ndef random_choose_A_B1_B2(A,B1,B2,a,b1,b2):\n    i = random.randrange(0,11)\n    while (A[i],B1[i],B2[i]) == (a,b1,b2):\n        i = random.randrange(0,11)\n    return (A[i],B1[i],B2[i])\ndef simulated_annealing_iteration(prices, a, b1, b2, error, max_iteration, cluster_range=10000):\n    diff = error + 1\n    i = 0\n    cnt = 0\n    concentration_deg = concentration(prices, cluster_range)\n    while (diff &gt; error  or concentration_deg &gt; 0.5) and cnt &lt;= max_iteration:\n        base_price1 = compute_base_price(prices, a, b1, b2)\n        (a_rand, b1_rand, b2_rand) = random_choose_A_B1_B2(A,B1,B2,a,b1,b2)\n        base_price2 = compute_base_price(prices, a_rand, b1_rand, b2_rand)\n        val = int(np.random.binomial(n=1, p=concentration_deg, size=1)[0])\n        temp = prices[i]\n        prices[i] = val * base_price2 + (1 - val) * base_price1\n        diff = abs(temp - prices[i])\n        i = (i + 1) % len(prices)\n        cnt += 1\n        concentration_deg = concentration(prices, cluster_range)\n    return prices\nA_max = 4907459 \nA_min = 4649516\nA = [4642976, 4668770.3, 4694564.6, 4720358.9, 4746153.2, \n    4771947.5, 4797741.8, 4823536.1, 4849330.4, 4875124.7, 4900919]\nB1 = [0.15, 0.16, 0.17, 0.18 , 0.19 ,\n    0.20 , 0.21 , 0.22 , 0.23 , 0.24 ,0.25]\nB2 = B1\n\n\nn = int(input(\"n: \"))\nk = int(input(\"How many persons use strategy: \"))\n\nstrategy_bidders = []\nrow_bidders = []\n# initialize everyone's offer randomly\nstrategy_bidders = [random.randrange(A_min, A_max) for i in range(k)]\nraw_bidders = [random.randrange(A_min, A_max) for i in range(n-k)]\n\n# randomly choose 3th (A,B1,B2),\n# and set error &lt;= 1000\n# and set max_iteration_cycle = 10000\nsimulated_annealing_iteration(strategy_bidders, A[3], B1[3], B2[3], \\\n                            1000, 10000)\n\nfinal_ans = strategy_bidders + row_bidders \n# get the final price distribution of all bidders\n# except ourselves\n# next we can simply apply \n# compute_base_price(final_ans, A[rand], B1[rand], B2[rand])\n# to get our ideal price\n</code></pre>"},{"location":"self_learn/ai50/ai50/","title":"CS50-ai","text":""},{"location":"self_learn/ai50/ai50/#uncertainty","title":"Uncertainty","text":""},{"location":"self_learn/ai50/ai50/#probability-rules","title":"Probability Rules","text":"<ul> <li>Negation: P(\u00aca) = 1 - P(a)</li> <li>Inclusion-Exclusion: P(a \u2228 b) = P(a) + P(b) - P(a \u2227 b)</li> <li>Marginalization: P(a) = P(a, b) + P(a, \u00acb)</li> </ul>"},{"location":"self_learn/ai50/ai50/#bayesian-networks","title":"Bayesian Networks \u8d1d\u53f6\u65af\u7f51\u7edc","text":"<p>Bayesian Networks\u662f\u4e00\u79cd\u8868\u793a\u968f\u673a\u53d8\u91cf\u95f4\u4f9d\u8d56\u5173\u7cfb\u7684\u6570\u636e\u7ed3\u6784\u3002\u6709\u5982\u4e0b\u6210\u5206\uff1a + They are directed graphs. + Each node on the graph represent a random variable. + An arrow from X to Y represents that X is a parent of Y. That is, the probability distribution of Y depends on the value of X. + Each node X has probability distribution P(X | Parents(X)).</p>"},{"location":"self_learn/ai50/ai50/#inference-based-on-probabilities","title":"Inference based on probabilities","text":"<p>Inference\u6709\u5982\u4e0b\u6210\u5206\uff1a</p> <ul> <li>Query X: the variable for which we want to compute the probability distribution.</li> <li>Evidence variables E: one or more variables that have been observed for event e. For example, we might have observed that there is light rain, and this observation helps us compute the probability that the train is delayed.</li> <li>Hidden variables Y: variables that aren\u2019t the query and also haven\u2019t been observed. For example, standing at the train station, we can observe whether there is rain, but we can\u2019t know if there is maintenance on the track further down the road. Thus, Maintenance would be a hidden variable in this situation.</li> <li>The goal: calculate P(X | e). For example, compute the probability distribution of the Train variable (the query) based on the evidence e that we know there is light rain.</li> </ul> <p>\u4e3a\u4e86\u8fdb\u884cinference\uff0c\u6211\u4eec\u67092\u79cd\u65b9\u6cd5\uff1a</p> <ul> <li> <p>inference by enumeration (exact infer) \u901a\u8fc7\u5df2\u77e5\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03\uff0c\u4ee5\u53ca\u4e0equery\u53d8\u91cf\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u901a\u8fc7marginalization\u548cconditioning\u6c42\u51faquery\u53d8\u91cf\u7684\u6982\u7387\u5206\u5e03</p> </li> <li> <p>sampling (approximate infer) \u901a\u8fc7\u91c7\u6837\uff0c\u6309\u7167topological order\uff0c\u5bf9\u6bcf\u4e00\u4e2a\u968f\u673a\u53d8\u91cf(node)\u4f9d\u6b21\u91c7\u6837\uff0c\u91c7\u6837\u67d0node\u65f6\uff0c\u6839\u636e\u5176parent\u7684\u91c7\u6837\u503c\uff0c\u5728\u8fd9\u4e9b\u91c7\u6837\u503c\u5bf9\u5e94\u7684\u6982\u7387\u5206\u5e03\u4e0b\u5bf9node\u91c7\u6837\u3002\u5f97\u5230\u6240\u6709node\u7684\u91c7\u6837\u503c\u65f6\uff0c\u4e00\u6b21sampling\u5b8c\u6bd5</p> </li> </ul>"},{"location":"self_learn/ai50/ai50/#likelihood-weighting","title":"likelihood weighting","text":"<p>\u91c7\u6837\u65f6\u82e5\u6837\u672c\u7684evidence variable\u503c\u4e0e\u89c2\u5bdf\u503c\u4e0d\u5339\u914d\uff0c\u5219\u9700\u4e22\u5f03\u6b64\u6837\u672c\uff0c\u8f83\u4e3a\u4f4e\u6548\u3002\u53ef\u4ee5\u901a\u8fc7likelihood weighting\u6765\u4f18\u5316\uff1a</p> <ul> <li>\u56fa\u5b9aevidence\u503c\u5339\u914d</li> <li>\u5bf9\u975eevidence\u53d8\u91cf\u8fdb\u884c\u91c7\u6837</li> <li>\u5bf9\u8be5\u6837\u672c\u8d4b\u6743\u91cd <p>\u8d4b\u6743\u91cd\u7684\u8fc7\u7a0b\uff1aNow that this sample exists, we weight it by the conditional probability of the observed variable given its sampled parents. That is, if we sampled Rain and got light, and then we sampled Maintenance and got yes, then we will weight this sample by P(Train = on time | light, yes).</p> </li> </ul>"},{"location":"self_learn/ai50/ai50/#markov-models","title":"Markov Models","text":""},{"location":"self_learn/ai50/ai50/#the-markov-assumption","title":"The Markov Assumption","text":"<p>\u5047\u8bbe\u5185\u5bb9\uff1athe current state depends on only a finite fixed number of previous states. </p>"},{"location":"self_learn/ai50/ai50/#markov-chain","title":"Markov chain","text":"<p>A Markov chain is a sequence of random variables where the distribution of each variable follows the Markov assumption. That is, each event in the chain occurs based on the probability of the event before it.  </p>"},{"location":"self_learn/ai50/ai50/#hidden-markov-models","title":"Hidden Markov Models","text":"<p>\u4e0eMarkov models\u76f8\u6bd4\uff0cAI has some measurement of the world but no access to the precise state of the world. In these cases, the state of the world is called the hidden state and whatever data the AI has access to are the observations.</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5728\u8bed\u97f3\u8bc6\u522b\u4e2d\uff0chidden state\u5c31\u662f\u4eba\u8bf4\u7684\u8bdd\uff0c\u800cobservation\u5c31\u662f\u63a5\u6536\u5230\u7684\u58f0\u6ce2\u4fe1\u53f7\u3002AI\u6709\u6982\u7387\u5c06observation\u6b63\u786e\u7684\u8bc6\u522b\u4e3ahidden state</p>"},{"location":"self_learn/ai50/ai50/#sensor-markov-assumption","title":"Sensor Markov Assumption","text":"<p>\u5047\u8bbe\u5185\u5bb9\uff1athe evidence variable depends only on the corresponding state</p>"},{"location":"self_learn/ai50/ai50/#representation","title":"representation","text":"<p>A hidden Markov model can be represented in a Markov chain with two layers. The top layer, variable X, stands for the hidden state. The bottom layer, variable E, stands for the evidence, the observations that we have.   \u57fa\u4e8e\u9690\u5f0fmarkov model\uff0c\u53ef\u4ee5\u5b9e\u73b0\uff1a</p> <ul> <li>Filtering: given observations from start until now, calculate the probability distribution for the current state. \uff08\u8ba1\u7b97\u5f53\u524d\u72b6\u6001\u6982\u7387\uff09</li> <li>Prediction: given observations from start until now, calculate the probability distribution for a future state.\uff08\u8ba1\u7b97\u672a\u6765\u72b6\u6001\u6982\u7387\uff09</li> <li>Smoothing: given observations from start until now, calculate the probability distribution for a past state.\uff08\u8ba1\u7b97\u8fc7\u53bb\u67d0\u72b6\u6001\u53d1\u751f\u7684\u6982\u7387\uff09</li> <li>Most likely explanation: given observations from start until now, calculate most likely sequence of events.\uff08\u63a8\u6d4b\u6700\u53ef\u80fd\u53d1\u751f\u7684\u4e00\u7cfb\u5217\u4e8b\u4ef6\uff09</li> </ul>"},{"location":"self_learn/cs231n/cs231n/","title":"classifier","text":"<p>A score function \\(f:\\R^D \\rightarrow \\R^K\\) that maps the raw image pixels to class scores.</p>"},{"location":"self_learn/cs231n/cs231n/#linear-classifier","title":"linear classifier","text":"\\[ f(x_i,W,b)=Wx_i+b,\\ x_i \\in \\R^D, W \\in \\R^{K \\times D} \\] <p>\\(W\\) is the weight matrix derived after training</p>"},{"location":"self_learn/cs231n/cs231n/#loss-function","title":"loss function","text":"<p>measure our unhappiness with outcomes with a loss function</p>"},{"location":"self_learn/cs231n/cs231n/#softmax","title":"Softmax","text":"<p>Given \\((x_i,y_i),\\ f(x_i;W)=Wx_i\\)</p> \\[ \\begin{align} L_i&amp;=-\\log(\\frac{e^{f_{y_i}}}{\\sum_j e^{f_j}})\\\\ L_i&amp;=-f_{y_i}+\\log\\sum_j e^{f_j} \\end{align} \\] <p>softmax function: \\(f_j(z)=\\frac{e^{z_j}}{\\sum_k e^{z_k}}\\)</p> <p>It takes a vector(\\(z\\)) of arbitrary real-valued scores and squashes it to a vector of values between zero and one that sum to one.</p>"},{"location":"self_learn/cs231n/cs231n/#gradient-computing","title":"Gradient computing","text":"<p>compute derivative of each component(numeriacally), then concatenate them to get the gradient.</p>"},{"location":"self_learn/cs231n/cs231n/#backpropagation","title":"Backpropagation","text":"<ul> <li> <p>result_gradient = local_gradient x output_gradient</p> </li> <li> <p>Cache forward pass variables</p> </li> <li> <p>Gradients add up at forks</p> </li> </ul> Example \\[ f(w,x)=\\frac{1}{1+e^{-(w_0x_0+w_1x_1+w_2)}} \\] 2.00-0.20w0-1.000.39x0-3.00-0.39w1-2.00-0.59x1-3.000.20w2-2.000.20*6.000.20*4.000.20+1.000.20+-1.00-0.20*-10.37-0.53exp1.37-0.53+10.731.001/x    Example circuit for a 2D neuron with a sigmoid activation function. The inputs are [x0,x1] and the (learnable) weights of the neuron are [w0,w1,w2]. As we will see later, the neuron computes a dot product with the input and then its activation is softly squashed by the sigmoid function to be in range from 0 to 1.  <p>Backpropagation can thus be thought of as gates communicating to each other (through the gradient signal) whether they want their outputs to increase or decrease (and how strongly), so as to make the final output value higher.</p>"},{"location":"self_learn/cs231n/cs231n/#parameter-updates","title":"Parameter updates","text":""},{"location":"self_learn/cs231n/cs231n/#vanilla-update","title":"Vanilla update","text":"<pre><code>x += - learning_rate * dx\n</code></pre>"},{"location":"self_learn/cs231n/cs231n/#momentum-update","title":"Momentum update","text":"<ul> <li> <p>loss -&gt; potential energy or position</p> </li> <li> <p>gradient -&gt; force or acceleration</p> </li> <li> <p>gradient only update velocity, not influence position directly</p> </li> </ul> <pre><code># Momentum update\nv = mu * v - learning_rate * dx # integrate velocity\nx += v # integrate position\n</code></pre>"},{"location":"self_learn/cs231n/cs231n/#nesterov-momentum","title":"Nesterov Momentum","text":"<ul> <li>use lookahead position's gradient</li> </ul> <pre><code>x_ahead = x + mu * v\n# evaluate dx_ahead (the gradient at x_ahead instead of at x)\nv = mu * v - learning_rate * dx_ahead\nx += v\n</code></pre> <pre><code>v_prev = v # back this up\nv = mu * v - learning_rate * dx # velocity update stays the same\nx += -mu * v_prev + (1 + mu) * v # position update changes form\n</code></pre>"},{"location":"self_learn/cs231n/cs231n/#second-order-methods","title":"Second order methods","text":"\\[ x \\leftarrow x-[Hf(x)]^{-1}\\nabla f(x) \\]"},{"location":"self_learn/cs231n/cs231n/#per-parameter-adaptive-learning-rate-methods","title":"Per-parameter adaptive learning rate methods","text":""},{"location":"self_learn/cs231n/cs231n/#adagrad","title":"Adagrad","text":"<pre><code># Assume the gradient dx and parameter vector x\ncache += dx**2\nx += - learning_rate * dx / (np.sqrt(cache) + eps)\n</code></pre> <p>Notice that the weights that receive high gradients will have their effective learning rate reduced, while weights that receive small or infrequent updates will have their effective learning rate increased.</p>"},{"location":"self_learn/cs231n/cs231n/#rmsprop","title":"RMSprop","text":"<pre><code>cache = decay_rate * cache + (1 - decay_rate) * dx**2\n</code></pre> <p>unlike Adagrad the updates do not get monotonically smaller</p>"},{"location":"self_learn/cs231n/cs231n/#adam","title":"Adam","text":"<pre><code>m = beta1*m + (1-beta1)*dx\nv = beta2*v + (1-beta2)*(dx**2)\nx += - learning_rate * m / (np.sqrt(v) + eps)\n</code></pre>"},{"location":"self_learn/cs231n/cs231n/#hyperparameter-optimization","title":"Hyperparameter optimization","text":"<p>The most common hyperparameters in context of Neural Networks include:</p> <ul> <li> <p>the initial learning rate</p> </li> <li> <p>learning rate decay schedule (such as the decay constant)</p> </li> <li> <p>regularization strength (L2 penalty, dropout strength)</p> </li> </ul> tuning tips <ul> <li> <p>Prefer one validation fold to cross-validation</p> <p>In most cases a single validation set of respectable size substantially simplifies the code base, without the need for cross-validation with multiple folds.</p> </li> <li> <p>Hyperparameter ranges</p> <p>Search for hyperparameters on log scale. For example, a typical sampling of the learning rate would look as follows: <code>learning_rate = 10 ** uniform(-6, 1)</code></p> </li> <li> <p>Prefer random search to grid search</p> </li> <li> <p>Careful with best values on border</p> </li> <li> <p>Stage your search from coarse to fine</p> </li> <li> <p>Bayesian Hyperparameter Optimization</p> </li> </ul>"},{"location":"self_learn/cs231n/cs231n/#evaluation","title":"Evaluation","text":"<p>use the average of model ensembles</p>"},{"location":"self_learn/cs61a/","title":"Index","text":"<p>2023\u5e74\u6691\u5047\u5b66\u4e60\u4e86CS61A\u8bfe\u7a0b\uff0c\u4f46\u642c\u8fd0\u5230\u6b64\u662f2024\u5e74\u6691\u5047\uff08x\uff09</p>"},{"location":"self_learn/cs61a/#_1","title":"\u4e3b\u8981\u5185\u5bb9","text":"<p>\u8bb0\u5f55\u4e86\u6211\u7684cs61a\u5b66\u4e60\u7b14\u8bb0\uff0c\u4e3b\u8981\u662f</p> <ul> <li>python\u8bed\u6cd5\u7684\u5b66\u4e60</li> <li>\u4e00\u4e9b\u57fa\u7840\u7684\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u601d\u60f3</li> </ul>"},{"location":"self_learn/cs61a/ch1/","title":"\u7b2c\u4e00\u7ae0","text":"Ch1 <p>Most important two things I\u2019ll say all day:</p> <ol> <li>An environment is a sequence of frames.</li> <li>A name evaluates to the value bound to that name in the earliest frame of the current    environment in which that name is found.</li> </ol> <p>\u5728python\u4e2d\uff0c\u8d4b\u503c\u8bed\u53e5\u662fbind name with value\uff0c\u56e0\u6b64\u5982\u679c\u51fa\u73b0\u8d4b\u503c\u8bed\u53e5f=max\uff0c\u7136\u540e\u518d\u6539\u53d8max\u7684\u503c\uff0c\u4e0d\u4f1a\u5f71\u54cdf\u7684\u503c\uff0c\u4e5f\u5c31\u662ff\u4ecd\u7136\u662f\u6c42\u6700\u5927\u6570\u7684\u51fd\u6570</p> <p>assignment rule for assignment statement\uff1a</p> <ol> <li>\u5148\u5bf9\u201c=\u201d\u53f3\u8fb9\u8fdb\u884c\u4f30\u503c</li> <li>\u5c06\u5de6\u8fb9\u7684name\u4e0e\u53f3\u8fb9\u4f30\u597d\u7684\u503c\u8fdb\u884cbind</li> </ol> <pre><code>a=1\nb=2\nb,a=a+b,b #eventually a=2,b=3\n</code></pre> <p>\u5b9a\u4e49\u51fd\u6570\u7684\u683c\u5f0f\uff1a</p> <pre><code>&gt;&gt;&gt; def &lt;name&gt;(&lt;formal parameters&gt;):  #this line is Function signature\n        ...\n        return &lt;expression&gt; ;the rest is Function body\n</code></pre> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff0c(1)\u4e00\u4e2a\u51fd\u6570\u88ab\u521b\u5efa (2)\u4e00\u4e2aname\u4e0e\u8fdb\u884c\u6b64\u64cd\u4f5c\u7684\u51fd\u6570\u8fdb\u884cbind (3)return expression\u4e0d\u4f1a\u7acb\u523b\u88abevaluate\uff0c\u5b83\u53ea\u5728\u51fd\u6570\u88ab\u8c03\u7528\u65f6\u88abevaluate</p> <p>\u4e0d\u7ba1\u662fimport\u8fd8\u662fdefine\u7684\u51fd\u6570\uff0c\u6bcf\u4e2a\u51fd\u6570\u5728environment\u4e2d\u90fd\u662f\u4e00\u884c\uff0c\u4ee5 <code>func</code> \u5f00\u5934\uff0c\u540e\u9762\u662f\u51fd\u6570\u540d\u548c\u5f62\u53c2\uff08\u65e0\u6b63\u5f0f\u5f62\u53c2\u5219\u7528...\u8868\u793a\uff09\u3002\u51fd\u6570\u540d\u79f0\u91cd\u590d\u4e24\u6b21\uff0c\u4e00\u6b21\u5728frame\u4e2d\uff0c\u4e00\u6b21\u5728\u51fd\u6570\u5b9a\u4e49\u4e2d\uff0c\u524d\u8005\u53eb\u505abound name\uff0c\u540e\u8005\u53eb\u505aintrinsic name\uff08\u5185\u5728\u540d\u79f0\uff09\u3002\u4e24\u8005\u4e0d\u540c\u5728\u4e8e\uff1a\u53ef\u4ee5\u6709\u5f88\u591a\u4e0d\u540c\u540d\u5b57\u6307\u4ee3\u540c\u4e00\u4e2a\u51fd\u6570\uff0c\u4f46\u8fd9\u4e2a\u51fd\u6570\u53ea\u6709\u4e00\u4e2aintrinsic name\u3002\u800c\u5728evaluation\u65f6\u7528\u7684name\u65f6\u5728frame\u4e2d\u7684name\uff0c\u800c\u975eintrinsic name\u3002</p> <p>\u5173\u4e8eNone\uff1a None\u503crepresents nothing. \u7528\u4e8e\u4f5c\u4e3a\u6ca1\u6709\u660e\u786e\u8fd4\u56de\u503c\u7684\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u800c\u4e14None\u4f5c\u4e3a\u8868\u8fbe\u5f0f\u7684\u503c\u4e0d\u4f1a\u88abpython interpreter \u663e\u793a</p> <ul> <li>Pure Function\uff1a\u4ec5\u8fd4\u56de\u503c\u800c\u6ca1\u6709side effect\u7684\u51fd\u6570\uff0c\uff08\u800c\u4e14\u6bcf\u6b21input\u76f8\u540c\u5219output\u5fc5\u76f8\u540c\uff09</li> <li>Non-Pure Function\uff1a\u4f1a\u6709side effect\u7684\u51fd\u6570\uff0c\u5982print</li> </ul> Environment <p>\u5230\u73b0\u5728\u4e3a\u6b62\uff0c\u6211\u4eec\u7684program\u7684\u542b\u4e49\u4ecd\u7136\u4e0d\u660e\u663e\uff0c\u6bd4\u5982\u5982\u679c\u4e00\u4e2a\u5f62\u53c2\u548c\u4e00\u4e2a\u51fd\u6570\u91cd\u540d\u4e86\u5462\uff1f\u5728\u4e0d\u540c\u73af\u5883\u4e2d\u540c\u4e00\u4e2aname\u6709\u4e0d\u540c\u7684\u542b\u4e49</p> <pre><code>from operator import mul\ndef square(square):\n    return mul(square,square)\nsquare(4)\n</code></pre> <p>\u5bf9\u5e94\u7684diagram\uff1a</p> <p></p> <p>\u8be5\u6bb5\u4ee3\u7801\u4e2d\uff0c\u4f5c\u4e3a\u51fd\u6570\u540d\u7684square\u548c\u4f5c\u4e3a\u5f62\u53c2\u7684square\u4f1a\u4e0e\u4e0d\u540c\u7684\u503cbound\uff0c\u4e24\u8005\u5728\u4e0d\u540c\u7684\u73af\u5883\u4e0b\u4f30\u503c\u3002\u5982\u524d\u6240\u8ff0\uff0cA name evaluates to the value bound to that name in the earliest frame of the current environment in which that name is found. \u5728calling\u65f6\uff0c <code>return mul(square,square)</code> \u4f1a\u5148\u7ecf\u5386\u65b0\u5efa\u7684square frame\uff0c\u627e\u5230\u4f5c\u4e3a\u5f62\u53c2\u7684square\u4ee5\u6b64\u6765\u4f30\u503c\uff0c\u800c\u975e\u4ee5global\u4e2d\u4f5c\u4e3a\u51fd\u6570\u540d\u7684square\u8fdb\u884c\u4f30\u503c\u3002</p> Multiple environment\uff08\u591a\u73af\u5883\uff09 <p>\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u51fd\u6570\u7684\u751f\u547d\u5468\u671f\uff1a</p> <ol> <li>def statement\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0\u51fd\u6570\uff0c\u5e76\u5728\u73b0\u5728\u7684frame\u4e2d\u5c06name\u548c\u8fd9\u4e2a\u51fd\u6570\u7ed1\u5b9a</li> <li>call expression\uff1a\u5bf9operator\u548coperand\u8fdb\u884c\u4f30\u503c</li> <li>calling\uff1a\u521b\u5efa\u4e00\u4e2a\u65b0local frame(only accessible to that function)\uff0c\u5e76\u5c06\u51fd\u6570\u7684\u5f62\u53c2(parameter)\u4e0e\u5b9e\u53c2(argument)\u7ed1\u5b9a\uff0c\u5728\u8fd9\u4e2a\u65b0\u73af\u5883\u4e2d\u6267\u884c\u51fd\u6570\u4f53(body)</li> <li>\u5173\u4e8ecalling\uff0c\u8be6\u7ec6\u7248\u53ef\u4ee5\u770b\u770btextbook\u4e0a\u7684sum_squares\u51fd\u6570\uff0c\u8bf4\u7684\u975e\u5e38\u6e05\u695a\uff01</li> </ol> <p>\u4e0b\u9762\u901a\u8fc7\u4e00\u6bb5\u4ee3\u7801\u7684diagram\u6765\u770b\u770b\u6267\u884c\u8fc7\u7a0b</p> <p><pre><code>from operator import mul\ndef square(x):\n    return mul(x,x)\nsquare(square(3))\n</code></pre> </p> <p>\u7b2c\u4e00\u6b65\uff0c\u5c06\u7b2c\u4e00\u6761import\u8bed\u53e5\u548c\u7b2c\u4e8c\u6761def\u8bed\u53e5\uff08\u4e24\u884c\u7b97\u4f5c\u4e00\u53e5\uff09\u6240\u4ea7\u751f\u7684\u53d8\u91cf\uff08\u5728\u8fd9\u91cc\u5373\u51fd\u6570\uff09\u653e\u5165global frame\u4e2d</p> <p>\u7b2c\u4e8c\u6b65\uff0c\u5bf9\u7b2c\u4e09\u6761\u8bed\u53e5\u7684operator\u548coperand\u8fdb\u884c\u4f30\u503c</p> <p>\u7b2c\u4e09\u6b65\uff0c\u5f00\u59cb\u8c03\u7528\u76f8\u5e94\u51fd\u6570\u8fdb\u884c\u8ba1\u7b97</p> Ch1.4 <p>\u9ed8\u8ba4\u53c2\u6570\u503c\uff1a</p> <pre><code>&gt;&gt;&gt; def pressure(v, t, n=6.022e23):\n        \"\"\"Compute the pressure in pascals of an ideal gas.\n\n        v -- volume of gas, in cubic meters\n        t -- absolute temperature in degrees kelvin\n        n -- particles of gas (default: one mole)\n        \"\"\"\n        k = 1.38e-23  # Boltzmann's constant\n        return n * k * t / v\n</code></pre> <pre><code>&gt;&gt;&gt; pressure(1, 273.15)\n2269.974834 #\u5982\u679c\u6ca1\u63d0\u4f9b\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u5219\u7528\u5b9a\u4e49\u4e2d\u9ed8\u8ba4\u7684\u503c\n&gt;&gt;&gt; pressure(1, 273.15, 3 * 6.022e23)\n6809.924502 #\u5982\u679c\u63d0\u4f9b\u4e86\u7b2c\u4e09\u4e2a\u53c2\u6570\uff0c\u5219\u5ffd\u7565\u9ed8\u8ba4\u503c\n</code></pre> Ch1.5 Control <ul> <li>simple statement: expression,return,assignment</li> <li>compound statement: def,control</li> </ul> <p>format of compound statement:</p> <pre><code>&lt;header&gt;:\n    &lt;statement&gt;\n    &lt;statement&gt;\n    ... #this whole is called a clause\n&lt;separating header&gt;:\n    &lt;statement&gt;\n    &lt;statement&gt;\n    ...\n...\n</code></pre> <pre><code>if &lt;expression&gt;:\n    &lt;suite&gt;\nelif &lt;expression&gt;:\n    &lt;suite&gt;\nelse:\n    &lt;suite&gt; #conditional statements\n\nwhile &lt;expression&gt;:\n    &lt;suite&gt; #iteration\n</code></pre> <p>Testing</p> <ol> <li>Assertions.</li> </ol> <pre><code>assert fib(8) == 13, 'The 8th Fibonacci number should be 13'\n\ndef fib_test():\n assert fib(2) == 1, 'The 2nd Fibonacci number should be 1'\n assert fib(3) == 1, 'The 3rd Fibonacci number should be 1'\n assert fib(50) == 7778742049, 'Error at the 50th Fibonacci number'\n</code></pre> <p>\u683c\u5f0f\uff1aassert , 'a quoted line of text' <p>\u200b       \u5982\u679c\u503c\u4e3atrue\u7684\u8bdd\uff0c\u6ca1\u6709\u5f71\u54cd\uff1bfalse\u7684\u8bdd\u6253\u5370quoted text\u5e76\u5f15\u8d77\u9519\u8bef\uff0chalt\u7a0b\u5e8f <p>Note\uff1a\u4e00\u822ctest\u90fd\u4e0d\u4f1a\u76f4\u63a5\u5199\u5728interpreter\u91cc\u9762\uff0c\u800c\u662f\u5199\u5728\u540c\u4e2a\u6587\u4ef6\u6216\u5378\u8f7d\u540c\u76ee\u5f55\u6587\u4ef6_test.py\u4e2d</p> <ol> <li>Doctest.</li> </ol> <pre><code>&gt;&gt;&gt; def sum_naturals(n):\n        \"\"\"Return the sum of the first n natural numbers.\n\n        &gt;&gt;&gt; sum_naturals(10)\n        55\n        &gt;&gt;&gt; sum_naturals(100)\n        5050\n        \"\"\"\n        total, k = 0, 1\n        while k &lt;= n:\n            total, k = total + k, k + 1\n        return total\n\n&gt;&gt;&gt; from doctest import testmod #\u7b2c\u4e00\u79cd\u6d4b\u8bd5\u51fd\u6570\n&gt;&gt;&gt; testmod()\nTestResults(failed=0, attempted=2)\n\n&gt;&gt;&gt; from doctest import run_docstring_examples #\u7b2c\u4e8c\u79cd\u6d4b\u8bd5\u51fd\u6570\n&gt;&gt;&gt; run_docstring_examples(sum_naturals, globals(), True)\nFinding tests in NoName\nTrying:\n    sum_naturals(10)\nExpecting:\n    55\nok\nTrying:\n    sum_naturals(100)\nExpecting:\n    5050\nok\n</code></pre> <p>\u7b2c3\u884c\u7684\u7a7a\u884c\u53ef\u6709\u53ef\u65e0\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\u6d4b\u8bd5\u7684argument\u548c\u9884\u671f\u7684behavior\u90fd\u8981\u653e\u5728docstring\u4e2d\uff0c\u4ee5\u53ca&gt;&gt;&gt;\u7b26\u53f7\u4e0d\u80fd\u5fd8</p> Ch1.6 higer-order function And environment <ol> <li>\u4f5c\u4e3a\u53c2\u6570\u7684\u51fd\u6570</li> </ol> <p>\u200b       \u4f8b\u5982\u6570\u5217\u6c42\u548c\u7684\u901a\u9879\u51fd\u6570term(n)</p> <pre><code>def summation(n, term):\n    total, k = 0, 1\n    while k &lt;= n:\n        total, k = total + term(k), k + 1\n    return total\n</code></pre> <ol> <li>\u4f5c\u4e3a\u901a\u7528\u65b9\u6cd5\u7684\u51fd\u6570</li> </ol> <p>\u200b       \u6982\u5ff5\uff1a\u7528\u4e00\u4e9b\u51fd\u6570\u6765\u8868\u8fbe\u901a\u7528\u7684\u8ba1\u7b97\u65b9\u6cd5(general methods)\uff0c\u800c\u4e0e\u5b83\u4eec\u8c03\u7528\u7684\u7279\u5b9a\u51fd\u6570\u65e0\u5173</p> <p>\u200b       \u4f8b\u5982\uff0c\u8fed\u4ee3\u6539\u8fdb\u7684\u901a\u7528\u65b9\u6cd5</p> <pre><code>&gt;&gt;&gt; def improve(update, close, guess=1):\n\u00a0\u00a0\u00a0     while not close(guess):\n\u00a0\u00a0\u00a0         guess = update(guess)\n\u00a0\u00a0\u00a0     return guess\n</code></pre> <p>\u200b       \u8fed\u4ee3\u6539\u8fdb\u7684\u7b97\u6cd5\u4ece\u65b9\u7a0b\u7684<code>guess</code>\u89e3\uff08\u63a8\u6d4b\u89e3\uff09\u5f00\u59cb\uff0c\u4e0d\u65ad\u5e94\u7528<code>update</code>\u51fd\u6570\u6765\u903c\u8fd1\u65b9\u7a0b\u6761\u4ef6\uff0c\u5e76\u7528close\u51fd\u6570\u4e0e\u5141\u8bb8\u8bef\u5dee(tolerance)\u8fdb\u884c\u6bd4\u8f83\u3002</p> <p>\u200b       \u8be5<code>improve</code>\u51fd\u6570\u662f\u8fed\u4ee3\u6c42\u7cbe\u7684\u901a\u7528\u8868\u8fbe\u5f0f\uff0c\u5b83\u5e76\u4e0d\u4f1a\u6307\u5b9a\u8981\u89e3\u51b3\u7684\u95ee\u9898\uff0c\u7ec6\u8282\u4f1a\u7559\u7ed9\u4f5c\u4e3a\u53c2\u6570\u4f20\u5165\u7684<code>update</code>\u548c<code>close</code>\u51fd\u6570</p> <p>\u200b       \u4e00\u4e2a\u5177\u4f53\u7684\u4f8b\u5b50\u662f\u9ec4\u91d1\u5206\u5272\u6bd4x\u7684\u6c42\u89e3\uff0c\u5b83\u7684\u4e00\u4e2a\u7279\u6027\u662f\u53ef\u4ee5\u901a\u8fc7\u53cd\u590d\u5bf9\u7ed9\u5b9a\u6b63\u6570<code>guess</code>\u8fdb\u884c1/guess+1\u64cd\u4f5c\u903c\u8fd1x\uff0c\u53e6\u4e00\u4e2a\u7279\u6027\u662fx^2-x-1=0\u3002\u7efc\u4e0a\uff0c\u6c42\u89e3\u9ec4\u91d1\u5206\u5272\u6bd4\u7684<code>update</code>\u548c<code>close</code>\u51fd\u6570\u5c31\u53ef\u4ee5\u8fd9\u6837\u5199</p> <pre><code>&gt;&gt;&gt; def golden_update(guess):\n        return 1/guess + 1\n\n&gt;&gt;&gt; def square_close_to_successor(guess):\n        return approx_eq(guess * guess, guess + 1)\n\n&gt;&gt;&gt; def approx_eq(x, y, tolerance=1e-15):\n        return abs(x - y) &lt; tolerance\n</code></pre> <ol> <li>\u5d4c\u5957\u5b9a\u4e49</li> </ol> <p>\u200b       lexical scope:\u672c\u5730\u53d8\u91cf\u53ef\u4ee5\u8bbf\u95ee\u66f4\u5927\u73af\u5883(parent)\u4e2d\u7684\u53d8\u91cf\uff0c\u4f46\u5927\u73af\u5883\u4e2d\u7684\u53d8\u91cf\u65e0\u6cd5\u8bbf\u95ee\u5b9a\u4e49\u5728\u672c\u5730\u7684\u53d8\u91cf</p> <ol> <li> <p>\u4f5c\u4e3a\u8fd4\u56de\u503c\u7684\u51fd\u6570</p> </li> <li> <p>currying\uff1a\u5c06\u5355\u4e2a\u591a\u53c2\u6570\u51fd\u6570\u8f6c\u53d8\u4e3a\u4e00\u8fde\u4e32\u5355\u53c2\u6570\u51fd\u6570</p> </li> <li> <p>Lambda expression\uff1a</p> </li> </ol> <p>\u5f62\u5f0f\uff1alambda :\uff1b\u4f8b\u5982\uff1alambda x : x*x <p>lambda expression\u4e0d\u9700\u8981\u7ed1\u5b9a\u5728\u67d0\u4e2a\u7279\u5b9aname\u4e0a\uff0c\u5b83\u4f1a\u88abevaluate\u4e3a\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd9\u4e2a\u51fd\u6570\u6ca1\u6709intrinsic name\uff0c\u5728diagram\u4e2d\u5199\u6210 func \u03bb(x)  [parent = ...]\uff1b\u5728\u8c03\u7528\u65f6\uff0c\u5f62\u6210\u6846\u67b6\u7684\u51fd\u6570\u540d\u5199\u6210 fm:\u03bb  [parent = ...] <ol> <li>Decorators</li> </ol> <pre><code>&gt;&gt;&gt; def trace(fn):\n        def wrapped(x):\n            print('-&gt; ', fn, '(', x, ')')\n            return fn(x)\n        return wrapped\n\n&gt;&gt;&gt; @trace\n    def triple(x):\n        return 3 * x\n#equals\n&gt;&gt;&gt; def triple(x):\n        return 3 * x\n\n&gt;&gt;&gt; triple = trace(triple)\n#\u4e2a\u4eba\u7406\u89e3\uff1atrace\u4f5c\u4e3adecorator\u5bf9\u5b9a\u4e49\u7684\u51fd\u6570\u8fdb\u884c\u4fee\u9970\uff0c\u4f7f\u8c03\u7528\u8be5\u51fd\u6570\u4e0d\u4ec5\u6253\u5370return\u503c\uff0c\u8fd8\u6253\u5370\u51fd\u6570\u5730\u5740\n</code></pre> Debug session (left for future) ...... Lab2 &amp; Discussion2 assignment statement &amp; def statement &amp; call expression <ul> <li> <p>assignment : </p> </li> <li> <p>evaluate right value :\u5f53\u9047\u5230name\u65f6\uff0c\u5148\u5728current frame\u4e2d\u67e5\u627e\uff0c\u518d\u518dparent frame\u4e2d\u67e5\u627e\uff0c\u518d\u5728parent\u7684parent frame\u4e2d\u67e5\u627e\uff0c\u76f4\u5230\u627e\u5230\u4e3a\u6b62</p> </li> <li> <p>bind to left name :\u5224\u65ad\u201c=\u201d\u5de6\u8fb9\u7684name\u662f\u5426\u5728current frame\u4e2d\uff0c\u82e5\u5728\u5219\u8986\u76d6\uff1b\u82e5\u4e0d\u5728\u5219\u5728current\u4e2d\u521b\u5efa\u8be5name\u5e76bind</p> </li> </ul> <p>\u6ce8\u610f\u5e76\u4e0d\u662f\u5c06\u5916\u90e8\u5e27\u4e2d\u7684\u8be5name\u7684value\u4fee\u6539\uff0c\u548cC\u8bed\u8a00\u540c\u7406</p> <ul> <li> <p>def:</p> </li> <li> <p>draw the function object :\u683c\u5f0f\u4e3a func &amp; intrinsic name &amp; (formal parameter) &amp;parent frame</p> </li> <li>judge : \u8be5def\u4e2d\u7684intrinsic name\u5728current frame\u4e2d\u662f\u5426\u5df2\u6709\uff0c\u82e5\u6709\uff0c\u64e6\u53bb\uff1b\u82e5\u6ca1\u6709\uff0c\u5199\u5165object\u8868</li> <li> <p>bind :\u628adef\u7684\u51fd\u6570\u5bf9\u8c61\u4e0e\u8be5name\u7ed1\u5b9a</p> </li> <li> <p>call:</p> </li> <li> <p>\u4f30operator\u2014&gt;\u4f30operand\u2014&gt;\u65b0frame\u2014&gt;label\u65b0frame\u2014&gt;argument\u8d4b\u7ed9parameter\u2014&gt;execution\u2014&gt;return value</p> </li> </ul> <p>\u6ce8\u610fbuilt-in\u548cimported\u51fd\u6570\u4e0d\u7528draw new frame</p> Short circuiting <p>and \u548c or \u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u5e76\u4e0d\u90fd\u662f<code>True</code>\u6216<code>False</code>\uff0c\u5b83\u4eec\u4f1a\u8fd4\u56de\u6700\u540e\u4e00\u4e2aevaluated value\uff0c\u6bd4\u5982 1 or False\uff0c\u8fd4\u56de\u7684\u662f\u6700\u540e\u4e00\u4e2aevaluated value\uff0c\u53731</p> Lab3 &amp; hw2 Ch2 ch 2.3 <ul> <li> <p>sequence:</p> </li> <li> <p>sequence operation:</p> </li> <li> <p>sequence iteration: for statement</p> </li> <li> <p>sequence unpacking: \u5bf9\u591a\u91cd\u5d4c\u5957sequence\u7684\u5b50\u5143\u7d20\u8fdb\u884c\u63d0\u53d6</p> </li> </ul> <pre><code> &gt;&gt;&gt; pairs = [[1, 2], [2, 2], [2, 3], [4, 4]]\n &gt;&gt;&gt; same_count = 0\n &gt;&gt;&gt; for x, y in pairs:\n         if x == y:\n             same_count = same_count + 1\n &gt;&gt;&gt; same_count\n 2\n</code></pre> <ul> <li> <p>sequence processing: </p> <ul> <li>List comprehensions: \u5143\u7d20\u6620\u5c04/\u7b5b\u9009\u5143\u7d20</li> </ul> <pre><code>[&lt;map expression&gt; for &lt;name&gt; in &lt;sequence expression&gt; if &lt;filter expression&gt;]\n # List comprehension general format, filter part can be omitted\n</code></pre> <ul> <li>Aggregation: \u5c06sequence\u4e2d\u7684\u5143\u7d20\u5408\u5e76\u6210\u4e00\u4e2avalue\uff0c\u5982sum,min,max\u51fd\u6570</li> </ul> </li> <li> <p>Lists</p> </li> <li> <p>range</p> </li> <li> <p>strings</p> </li> <li> <p>trees</p> </li> <li> <p>Linked lists</p> </li> </ul> Ch 2.4 Mutable data <ul> <li> <p>object: A combination of data value and behavior\uff1bpython\u4e2d\u7684\u4efb\u4f55value\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6709\u5bf9\u5e94\u7684data\u548cmethod(class function)</p> </li> <li> <p>mutable object: value\u4f1a\u968f\u7740\u7a0b\u5e8f\u6267\u884c\u800c\u53d8\u5316\uff0c\u6bd4\u5982list\uff1b</p> </li> </ul> <p>list\u5728\u8d4b\u503c\u65f6\uff0c\u4f1a\u5c06\u201c=\u201d\u5de6\u8fb9\u7684name\u6307\u5411\u5bf9\u5e94\u7684list\u5bf9\u8c61\uff0c\u6240\u4ee5\u82e5\u6709\u591a\u4e2aname\u6307\u5411\u540c\u4e00\u4e2alist object\uff0c\u5bf9\u5176\u4e2d\u4e00\u4e2a\u4f7f\u7528method\uff0c\u5176\u4ed6\u7684\u90fd\u4f1a\u76f8\u5e94\u53d8\u5316\u3002\u5982\u679c\u60f3\u8981\u53ea\u590d\u5236value\uff0c\u53ef\u4ee5\u901a\u8fc7<code>lst2=list(lst1)</code>\u8fdb\u884c\u3002</p> <p>\u200b   \u4e3a\u4e86\u5224\u65ad\u4e24\u4e2aname\u662f\u5426\u6307\u5411\u540c\u4e2aobject\uff0c\u901a\u8fc7<code>name1 is name2</code>\u7684\u771f\u5047\u6765\u5224\u65ad</p> <ul> <li> <p>Tuple: \u662fimmutable sequence\uff0c\u683c\u5f0f\u4e3a<code>(element1,element2,...)</code>\uff0c\u62ec\u53f7\u53ef\u7701\u7565\uff08\u4e00\u822c\u4e0d\u7701\u7565\uff09\uff1b\u4e00\u4e2atuple\u7684\u5143\u7d20\u4e0d\u53ef\u66f4\u6539\uff0c\u4f46\u662f\u53ef\u4ee5\u66f4\u6539\u5176\u4e2dmutable element\u4e2d\u7684\u5143\u7d20</p> </li> <li> <p>Dictionaries: \u5c5e\u4e8emutable object</p> </li> <li> <p>\u76ee\u7684\uff1a\u901a\u8fc7\u63cf\u8ff0\u6027\u7684index\uff0c\u800c\u975e\u8fde\u7eed\u7684\u6570\u5b57index\u6765\u5b58\u50a8\u548c\u83b7\u53d6\u503c</p> </li> <li>\u683c\u5f0f\uff1a<code>numerals = {'I': 1.0, 'V': 5, 'X': 10}</code></li> <li>\u4e00\u4e9b\u8bed\u6cd5\uff1a</li> </ul> <pre><code>&gt;&gt;&gt; numerals['X'] \n10 #look up\n\n&gt;&gt;&gt; numerals['L'] = 50\n&gt;&gt;&gt; numerals\n{'I': 1, 'X': 10, 'L': 50, 'V': 5} #add new pair\n\n&gt;&gt;&gt; sum(numerals.values())\n66 #combine all the value\n\n&gt;&gt;&gt; dict([(3, 9), (4, 16), (5, 25)])\n{3: 9, 4: 16, 5: 25} #convert a list of pairs into dictionary\n\n&gt;&gt;&gt; numerals.get('V', 0)\n5 #look up value of 'V' and return it; if not existing,return 0\n\n&gt;&gt;&gt; {x: x*x for x in range(3,6)}\n{3: 9, 4: 16, 5: 25} #dictionaries comprehension create a new dictionary object\n</code></pre> <p>\u6ce8\u610f\uff1aDictionaries\u7684key-value pair\u662f\u65e0\u5e8f\u7684\uff0c\u6240\u4ee5\u5728interpreter\u4e2d\u663e\u793a\u65f6\u6b21\u5e8f\u53ef\u80fd\u4f1a\u53d8\u3002</p> <p>key\u4e0d\u53ef\u4ee5\u662f\u6216\u5305\u542bmutable value\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528list\u4f5ckey\uff1b\u4e00\u822c\u7528Tuple</p> <ul> <li><code>nonlocal</code>\u58f0\u660e\uff1a</li> <li>\u58f0\u660e\u4e86\u8be5<code>name</code>\u4e0d\u5728current frame\u4e2d\uff0c\u800c\u662f\u5728\u7b2c\u4e00\u4e2a\u51fa\u73b0\u8be5name\u88ab\u8d4b\u503c\u7684frame\u4e2d\uff0c\u901a\u8fc7<code>nonlocal</code>\u58f0\u660e\uff0c\u5c31\u53ef\u4ee5\u4fee\u6539current frame\u4e4b\u5916\u7684\u53d8\u91cf</li> <li>\u7528\u9014\uff1a\u53ef\u4ee5\u7528\u4e8e\u6709local state\u7684\u51fd\u6570\uff0c\u5982withdraw()</li> <li>\u9650\u5236\uff1apython\u5173\u4e8ename\u7684access\u6709\u8fd9\u6837\u7684\u9650\u5236\uff0c\u5982\u679c\u6ca1\u6709<code>nonlocal</code>\u58f0\u660e\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a<code>name</code>\u7684\u5f15\u7528\u5fc5\u987b\u5728\u540c\u4e00frame\u4e2d\uff0c\u4e0d\u53ef\u4ee5\u5728\u975e\u672c\u5730\u5e27\u4e2d\u627e\u5230\u67d0name\uff0c\u800c\u5728\u672c\u5730\u5e27\u4e2d\u8fdb\u884cbind\u3002\u56e0\u4e3apython\u5728\u672c\u5730\u5e27\u4e2d\u9075\u5faa\u7684\u539f\u5219\u662f\uff0c\u82e5\u5de6\u8fb9\u7684name\u672a\u5728\u672c\u5730\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u5c31\u5728\u672c\u5730\u5e27\u4e2d\u521b\u5efa\u8be5\u540d\u5b57\u5e76\u8d4b\u503c\uff0c\u8fd9\u65f6\u5c31\u4f1a\u9020\u6210\u6df7\u6dc6\uff1aevaluate\u65f6\uff0c\u5230\u5e95\u662f\u770bnonlocal\u7684name\u503c\uff0c\u8fd8\u662f\u521a\u521a\u521b\u5efa\u7684name\u503c\u5462\uff1f</li> <li><code>nonlocal</code>\u8d4b\u503c\u7684\u597d\u5904\uff1a\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u62bd\u8c61\u7684\u591a\u4e2a\u5b9e\u4f8b\uff0c\u4e14\u5404\u4e2a\u5b9e\u4f8b\u4e4b\u95f4\u4f1a\u968f\u7740\u7a0b\u5e8f\u6267\u884c\u800c\u53d1\u751f\u72b6\u6001\u6539\u53d8\uff0c\u4f46\u5f7c\u6b64\u4e4b\u95f4\u4e92\u4e0d\u5e72\u6270\uff0c\u5982\uff1a</li> </ul> <pre><code>1   def make_withdraw(balance):\n2       def withdraw(amount):\n3           nonlocal balance\n4           if amount &gt; balance:\n5               return 'Insufficient funds'\n6           balance = balance - amount\n7           return balance\n8       return withdraw\n9   \n10  wd = make_withdraw(20)\n11  wd2 = make_withdraw(7)\n12  wd2(6)\n13  wd(8)\n</code></pre> <p>\u200b   wd\u548cwd2\u662f\u4e24\u4e2a\u4e0d\u540c\u7684withdraw\u5b9e\u4f8b\uff0c\u6709\u4e0d\u540c\u7684parent\uff08\u4e24\u6b21make_withdraw\u7684\u7684\u8c03\u7528\uff09\uff0c\u90fd\u662f\u901a\u8fc7make_withdraw\u521b\u5efa\uff0c\u5176\u4e2d\u4e00\u4e2a\u7684balance\u53d8\u5316\u4e0d\u4f1a\u5f71\u54cd\u53e6\u5916\u4e00\u4e2a\uff0c\u5404\u7ba1\u5404\u7684\u3002</p> <ul> <li><code>nonlocal</code>\u8d4b\u503c\u7684\u5c40\u9650\u6027\uff1are-binding\u64cd\u4f5c\u4e0d\u4ec5\u4ec5\u662f\u8fd4\u56de\u503c\uff0c\u5b83\u8fd8\u53ef\u80fd\u4f1a\u6539\u53d8\u73af\u5883\uff1b\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7531\u4e8e\u5b83\u7684\u72b6\u6001\u4f1a\u53d8\u5316\uff0c\u56e0\u6b64\u4e0d\u80fd\u6839\u636e\u5b83\u7684data\u4fe1\u606f\u6765\u8bc6\u522b\u5b83\u7684identity\uff0c\u8fd9\u53eb\u505a\"change\"\uff1b\u4e24\u4e2a\u503c\u76f8\u7b49\u7684\u5bf9\u8c61\uff0c\u672a\u5fc5\u5c31\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u53eb\u505a\"sameness\"\u3002</li> </ul> Disc4 <p>data abstraction</p> Disc5 <p>Iterables: \u4e00\u79cd\u53ef\u4ee5\u904d\u5386\u5176\u5143\u7d20\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982list\u3001string\u7b49\u3002\u4efb\u4f55\u5728apply\u4e86built-in <code>iter</code> function\u4e4b\u540e\u8fd4\u56de<code>iterator</code>\u7684object\u90fd\u662f<code>iterator</code>\u3002</p> <p>Iterators: \u4e5f\u662f\u4e00\u79cdobject\uff0c\u901a\u8fc7\u8c03\u7528<code>next</code>\u51fd\u6570\uff0c\u8ffd\u8e2a<code>iterable</code>\u4e2d\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u904d\u5386<code>iterable</code>\u4e2d\u7684\u5143\u7d20\uff0c\u8c03\u7528\u5b8c\u540e\u6b64iterator\u5bf9\u8c61\u72b6\u6001\u53d8\u5316\uff0c\u53ea\u5269\u6ca1\u88ab\u904d\u5386\u7684\u5143\u7d20\uff1b\u5982\u679c\u5bf9iterator\u8c03\u7528<code>iter</code>\u51fd\u6570\uff0c\u5219\u8fd4\u56de\u81ea\u8eab\u3002</p> <p>\u5f53iterator\u4e2d\u5df2\u7ecf\u904d\u5386\u5b8c\u6240\u6709\u5143\u7d20\u540e\uff0c\u518d\u6b21\u8c03\u7528<code>next</code>\u4f1araise<code>StopIteration</code>\u7684exception\u3002\u4f46\u600e\u6837\u7b97\u904d\u5386\u5b8c\u4e86\u5462\uff1f\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8e\u76f4\u63a5\u8c03\u7528 <code>next</code> \u51fd\u6570\u5230\u6ca1\u6709\u5143\u7d20\u4e3a\u6b62\uff0c\u5176\u4ed6\u65b9\u6cd5\u6bd4\u5982 <code>list(iterator1)</code> \u4e5f\u4f1a\u904d\u5386\u5143\u7d20\uff0c\u56e0\u4e3a<code>list</code> \u9700\u8981\u76f4\u5230 <code>iterator1</code> \u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u800citerator\u8fd9\u79cd\u5bf9\u8c61\u662fimplicit sequence\uff0c\u91c7\u7528lazy computation\uff0c\u4e0d\u4f1a\u5b58\u50a8\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u800c\u662f\u5728\u8c03\u7528next\u540e\u518d\u5f39\u51fa\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u4e3a\u4e86\u83b7\u53d6\u6240\u6709\u5143\u7d20\uff0c\u4e5f\u5c31implicitly\u904d\u5386\u4e86 <code>iterator1</code></p> <p>A comparison : Iterables\u548cIterators\u7684\u5173\u7cfb\u5c31\u50cfbook\u548cbookmark\u4e00\u6837\uff0c\u53ef\u4ee5\u6709\u591a\u4e2abookmark\u63d2\u5728\u540c\u4e00\u672cbook\u7684\u4e0d\u540c\u4f4d\u7f6e\uff0c\u904d\u5386\u6b64book\uff1b\u6b64\u5916\uff0cbookmark\u5e76\u4e0d\u77e5\u9053book\u81ea\u8eab\u7684\u53d8\u5316\uff0c\u56e0\u6b64\u5f53book\u53d8\u5316\uff08remove\u6216add\u6216append\u7b49\uff09\uff0cbookmark\u8fd8\u662f\u63d2\u5728\u76f8\u5e94\u7684\u9875\u4e4b\u95f4\uff0c\u4f46\u8c03\u7528 <code>next</code> \u51fd\u6570\u65f6\u4f1a\u6839\u636enew book\u7684\u72b6\u6001\u6765\u6267\u884c\uff1b\u5f53iterator\u5f39\u51fa <code>StopIteration</code> \u540e\uff0c\u76f8\u5f53\u4e8ebookmark\u5df2\u7ecf\u63d2\u5728book\u7684back cover\u4e4b\u540e\u4e86\uff0c\u6240\u4ee5\u4e0d\u7ba1\u5982\u4f55\u6539\u53d8iterable\uff0c\u5bf9\u8be5iterator\u8c03\u7528next\u51fd\u6570\u53ea\u4f1a\u5f39\u51fa <code>StopIteration</code> \uff0c\u89c1\u4e0b\u4f8b2</p> <p>\u6ce8\u610f\uff1aiterators\u5728\u904d\u5386\u5143\u7d20\u65f6\u4e0d\u5f71\u54cd\u539f\u6765\u7684iterable</p> <pre><code>&gt;&gt;&gt; lst = [1, 2, 3, 4]\n&gt;&gt;&gt; list_iter = iter(lst)\n&gt;&gt;&gt; next(list_iter)\n1\n&gt;&gt;&gt; list(list_iter) # Return remaining items in list_iter\n[2, 3, 4]\n</code></pre> <pre><code>&gt;&gt;&gt; s = [[1, 2, 3, 4]]\n&gt;&gt;&gt; i = iter(s)\n&gt;&gt;&gt; next(i)\n[1, 2, 3, 4]\n&gt;&gt;&gt; s.append(5)\n&gt;&gt;&gt; next(i)\n5\n</code></pre> <p>Generators: \u4e00\u79cd\u7279\u6b8aiterator\uff0c\u901a\u8fc7\u5b9a\u4e49\u4e2a\u6027\u5316\u7684generator\u51fd\u6570\uff0creturn\u5f97\u5230generator object</p> <p>yield statement: generator\u51fd\u6570\u4e2d\u7279\u6709\u7684\u8bed\u53e5</p> <p>Generator\u51fd\u6570\u7684\u6267\u884c\u8fc7\u7a0b\uff1a\u8c03\u7528generator\u51fd\u6570\uff08\u542b<code>yield</code> statement\u7684\u51fd\u6570\uff09\u4ea7\u751f\u4e00\u4e2a <code>generator</code> \u5bf9\u8c61\uff0c\u4f46\u4e0d\u4f1a\u6267\u884cgenerator\u51fd\u6570\u7684body\uff1b\u8c03\u7528generator\u51fd\u6570\u540e\uff0c\u6bcf\u6b21\u8c03\u7528\u5bf9\u8be5<code>generator</code>\u5bf9\u8c61\u8c03\u7528next\u51fd\u6570\uff0c\u90fd\u4f1a\u4f7f\u5bf9\u5e94\u7684generator\u51fd\u6570body\u5f00\u59cb\u6267\u884c\uff0c\u76f4\u5230\u9047\u89c1<code>yield</code> statement\uff08\u5373\u8fd4\u56de<code>yield</code>\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u7684\u503c\uff09\uff0c\u6216\u9047\u5230\u6682\u505c\u70b9\uff08\u6bd4\u5982<code>return</code>\uff09\uff1b\u5f53\u6682\u505c\u5728\u67d0\u4e2a <code>yield</code> statement\u65f6\uff0c\u4f1a\u8bb0\u4f4f\u6b64\u65f6\u79bb\u5f00\u7684\u4f4d\u7f6e\u548c\u72b6\u6001\uff0c\u4e0b\u6b21\u7ee7\u7eed\u4ece\u8be5\u6682\u505c\u70b9\u5f00\u59cb\u7ee7\u7eed\u6267\u884cbody</p> <p>\u5982\u679c\u6ca1\u5143\u7d20\u53efyield\u4e86\uff0c\u5219raise <code>StopIteration</code>\uff0c\u4e0eiterator\u7c7b\u4f3c</p> <p>\u4e5f\u53ef\u4ee5\u7528<code>yield from</code> statement\u4ece <code>iterator</code> \u6216 <code>iterable</code> \u4e2dyield\u5143\u7d20\uff0c\u89c1\u4e0b\u4f8b</p> <pre><code>&gt;&gt;&gt; def gen_list(lst):\n...     yield from lst\n...\n&gt;&gt;&gt; g = gen_list([1, 2])\n&gt;&gt;&gt; next(g)\n1\n&gt;&gt;&gt; next(g)\n2\n&gt;&gt;&gt; next(g)\nStopIteration\n</code></pre>"},{"location":"self_learn/cs61a/ch2/","title":"\u7b2c\u4e8c\u7ae0","text":"Ch2 ch 2.3 <ul> <li> <p>sequence:</p> </li> <li> <p>sequence operation:</p> </li> <li> <p>sequence iteration: for statement</p> </li> <li> <p>sequence unpacking: \u5bf9\u591a\u91cd\u5d4c\u5957sequence\u7684\u5b50\u5143\u7d20\u8fdb\u884c\u63d0\u53d6</p> </li> </ul> <pre><code> &gt;&gt;&gt; pairs = [[1, 2], [2, 2], [2, 3], [4, 4]]\n &gt;&gt;&gt; same_count = 0\n &gt;&gt;&gt; for x, y in pairs:\n         if x == y:\n             same_count = same_count + 1\n &gt;&gt;&gt; same_count\n 2\n</code></pre> <ul> <li> <p>sequence processing: </p> <ul> <li>List comprehensions: \u5143\u7d20\u6620\u5c04/\u7b5b\u9009\u5143\u7d20</li> </ul> <pre><code>[&lt;map expression&gt; for &lt;name&gt; in &lt;sequence expression&gt; if &lt;filter expression&gt;]\n # List comprehension general format, filter part can be omitted\n</code></pre> <ul> <li>Aggregation: \u5c06sequence\u4e2d\u7684\u5143\u7d20\u5408\u5e76\u6210\u4e00\u4e2avalue\uff0c\u5982sum,min,max\u51fd\u6570</li> </ul> </li> <li> <p>Lists</p> </li> <li> <p>range</p> </li> <li> <p>strings</p> </li> <li> <p>trees</p> </li> <li> <p>Linked lists</p> </li> </ul> Ch 2.4 Mutable data <ul> <li> <p>object: A combination of data value and behavior\uff1bpython\u4e2d\u7684\u4efb\u4f55value\u90fd\u662f\u4e00\u4e2a\u5bf9\u8c61\uff0c\u6709\u5bf9\u5e94\u7684data\u548cmethod(class function)</p> </li> <li> <p>mutable object: value\u4f1a\u968f\u7740\u7a0b\u5e8f\u6267\u884c\u800c\u53d8\u5316\uff0c\u6bd4\u5982list\uff1b</p> </li> </ul> <p>list\u5728\u8d4b\u503c\u65f6\uff0c\u4f1a\u5c06\u201c=\u201d\u5de6\u8fb9\u7684name\u6307\u5411\u5bf9\u5e94\u7684list\u5bf9\u8c61\uff0c\u6240\u4ee5\u82e5\u6709\u591a\u4e2aname\u6307\u5411\u540c\u4e00\u4e2alist object\uff0c\u5bf9\u5176\u4e2d\u4e00\u4e2a\u4f7f\u7528method\uff0c\u5176\u4ed6\u7684\u90fd\u4f1a\u76f8\u5e94\u53d8\u5316\u3002\u5982\u679c\u60f3\u8981\u53ea\u590d\u5236value\uff0c\u53ef\u4ee5\u901a\u8fc7<code>lst2=list(lst1)</code>\u8fdb\u884c\u3002</p> <pre><code>\u4e3a\u4e86\u5224\u65ad\u4e24\u4e2aname\u662f\u5426\u6307\u5411\u540c\u4e2aobject\uff0c\u901a\u8fc7`name1 is name2`\u7684\u771f\u5047\u6765\u5224\u65ad\n</code></pre> <ul> <li> <p>Tuple: \u662fimmutable sequence\uff0c\u683c\u5f0f\u4e3a<code>(element1,element2,...)</code>\uff0c\u62ec\u53f7\u53ef\u7701\u7565\uff08\u4e00\u822c\u4e0d\u7701\u7565\uff09\uff1b\u4e00\u4e2atuple\u7684\u5143\u7d20\u4e0d\u53ef\u66f4\u6539\uff0c\u4f46\u662f\u53ef\u4ee5\u66f4\u6539\u5176\u4e2dmutable element\u4e2d\u7684\u5143\u7d20</p> </li> <li> <p>Dictionaries: \u5c5e\u4e8emutable object</p> </li> <li> <p>\u76ee\u7684\uff1a\u901a\u8fc7\u63cf\u8ff0\u6027\u7684index\uff0c\u800c\u975e\u8fde\u7eed\u7684\u6570\u5b57index\u6765\u5b58\u50a8\u548c\u83b7\u53d6\u503c</p> </li> <li>\u683c\u5f0f\uff1a<code>numerals = {'I': 1.0, 'V': 5, 'X': 10}</code></li> <li>\u4e00\u4e9b\u8bed\u6cd5\uff1a</li> </ul> <pre><code>&gt;&gt;&gt; numerals['X'] \n10 #look up\n\n&gt;&gt;&gt; numerals['L'] = 50\n&gt;&gt;&gt; numerals\n{'I': 1, 'X': 10, 'L': 50, 'V': 5} #add new pair\n\n&gt;&gt;&gt; sum(numerals.values())\n66 #combine all the value\n\n&gt;&gt;&gt; dict([(3, 9), (4, 16), (5, 25)])\n{3: 9, 4: 16, 5: 25} #convert a list of pairs into dictionary\n\n&gt;&gt;&gt; numerals.get('V', 0)\n5 #look up value of 'V' and return it; if not existing,return 0\n\n&gt;&gt;&gt; {x: x*x for x in range(3,6)}\n{3: 9, 4: 16, 5: 25} #dictionaries comprehension create a new dictionary object\n</code></pre> <p>\u6ce8\u610f\uff1aDictionaries\u7684key-value pair\u662f\u65e0\u5e8f\u7684\uff0c\u6240\u4ee5\u5728interpreter\u4e2d\u663e\u793a\u65f6\u6b21\u5e8f\u53ef\u80fd\u4f1a\u53d8\u3002</p> <p>key\u4e0d\u53ef\u4ee5\u662f\u6216\u5305\u542bmutable value\uff0c\u6240\u4ee5\u4e0d\u80fd\u7528list\u4f5ckey\uff1b\u4e00\u822c\u7528Tuple</p> <ul> <li><code>nonlocal</code>\u58f0\u660e\uff1a</li> <li>\u58f0\u660e\u4e86\u8be5<code>name</code>\u4e0d\u5728current frame\u4e2d\uff0c\u800c\u662f\u5728\u7b2c\u4e00\u4e2a\u51fa\u73b0\u8be5name\u88ab\u8d4b\u503c\u7684frame\u4e2d\uff0c\u901a\u8fc7<code>nonlocal</code>\u58f0\u660e\uff0c\u5c31\u53ef\u4ee5\u4fee\u6539current frame\u4e4b\u5916\u7684\u53d8\u91cf</li> <li>\u7528\u9014\uff1a\u53ef\u4ee5\u7528\u4e8e\u6709local state\u7684\u51fd\u6570\uff0c\u5982withdraw()</li> <li>\u9650\u5236\uff1apython\u5173\u4e8ename\u7684access\u6709\u8fd9\u6837\u7684\u9650\u5236\uff0c\u5982\u679c\u6ca1\u6709<code>nonlocal</code>\u58f0\u660e\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4e00\u4e2a<code>name</code>\u7684\u5f15\u7528\u5fc5\u987b\u5728\u540c\u4e00frame\u4e2d\uff0c\u4e0d\u53ef\u4ee5\u5728\u975e\u672c\u5730\u5e27\u4e2d\u627e\u5230\u67d0name\uff0c\u800c\u5728\u672c\u5730\u5e27\u4e2d\u8fdb\u884cbind\u3002\u56e0\u4e3apython\u5728\u672c\u5730\u5e27\u4e2d\u9075\u5faa\u7684\u539f\u5219\u662f\uff0c\u82e5\u5de6\u8fb9\u7684name\u672a\u5728\u672c\u5730\u51fa\u73b0\u8fc7\uff0c\u90a3\u4e48\u5c31\u5728\u672c\u5730\u5e27\u4e2d\u521b\u5efa\u8be5\u540d\u5b57\u5e76\u8d4b\u503c\uff0c\u8fd9\u65f6\u5c31\u4f1a\u9020\u6210\u6df7\u6dc6\uff1aevaluate\u65f6\uff0c\u5230\u5e95\u662f\u770bnonlocal\u7684name\u503c\uff0c\u8fd8\u662f\u521a\u521a\u521b\u5efa\u7684name\u503c\u5462\uff1f</li> <li><code>nonlocal</code>\u8d4b\u503c\u7684\u597d\u5904\uff1a\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u62bd\u8c61\u7684\u591a\u4e2a\u5b9e\u4f8b\uff0c\u4e14\u5404\u4e2a\u5b9e\u4f8b\u4e4b\u95f4\u4f1a\u968f\u7740\u7a0b\u5e8f\u6267\u884c\u800c\u53d1\u751f\u72b6\u6001\u6539\u53d8\uff0c\u4f46\u5f7c\u6b64\u4e4b\u95f4\u4e92\u4e0d\u5e72\u6270\uff0c\u5982\uff1a</li> </ul> <pre><code>1   def make_withdraw(balance):\n2       def withdraw(amount):\n3           nonlocal balance\n4           if amount &gt; balance:\n5               return 'Insufficient funds'\n6           balance = balance - amount\n7           return balance\n8       return withdraw\n9   \n10  wd = make_withdraw(20)\n11  wd2 = make_withdraw(7)\n12  wd2(6)\n13  wd(8)\n</code></pre> <pre><code>wd\u548cwd2\u662f\u4e24\u4e2a\u4e0d\u540c\u7684withdraw\u5b9e\u4f8b\uff0c\u6709\u4e0d\u540c\u7684parent\uff08\u4e24\u6b21make_withdraw\u7684\u7684\u8c03\u7528\uff09\uff0c\u90fd\u662f\u901a\u8fc7make_withdraw\u521b\u5efa\uff0c\u5176\u4e2d\u4e00\u4e2a\u7684balance\u53d8\u5316\u4e0d\u4f1a\u5f71\u54cd\u53e6\u5916\u4e00\u4e2a\uff0c\u5404\u7ba1\u5404\u7684\u3002\n</code></pre> <ul> <li><code>nonlocal</code>\u8d4b\u503c\u7684\u5c40\u9650\u6027\uff1are-binding\u64cd\u4f5c\u4e0d\u4ec5\u4ec5\u662f\u8fd4\u56de\u503c\uff0c\u5b83\u8fd8\u53ef\u80fd\u4f1a\u6539\u53d8\u73af\u5883\uff1b\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7531\u4e8e\u5b83\u7684\u72b6\u6001\u4f1a\u53d8\u5316\uff0c\u56e0\u6b64\u4e0d\u80fd\u6839\u636e\u5b83\u7684data\u4fe1\u606f\u6765\u8bc6\u522b\u5b83\u7684identity\uff0c\u8fd9\u53eb\u505a\"change\"\uff1b\u4e24\u4e2a\u503c\u76f8\u7b49\u7684\u5bf9\u8c61\uff0c\u672a\u5fc5\u5c31\u662f\u540c\u4e00\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u53eb\u505a\"sameness\"\u3002</li> </ul> Disc4 <p>data abstraction</p> Disc5 <p>Iterables: \u4e00\u79cd\u53ef\u4ee5\u904d\u5386\u5176\u5143\u7d20\u7684\u5bf9\u8c61\uff0c\u6bd4\u5982list\u3001string\u7b49\u3002\u4efb\u4f55\u5728apply\u4e86built-in <code>iter</code> function\u4e4b\u540e\u8fd4\u56de<code>iterator</code>\u7684object\u90fd\u662f<code>iterator</code>\u3002</p> <p>Iterators: \u4e5f\u662f\u4e00\u79cdobject\uff0c\u901a\u8fc7\u8c03\u7528<code>next</code>\u51fd\u6570\uff0c\u8ffd\u8e2a<code>iterable</code>\u4e2d\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u53ef\u4ee5\u904d\u5386<code>iterable</code>\u4e2d\u7684\u5143\u7d20\uff0c\u8c03\u7528\u5b8c\u540e\u6b64iterator\u5bf9\u8c61\u72b6\u6001\u53d8\u5316\uff0c\u53ea\u5269\u6ca1\u88ab\u904d\u5386\u7684\u5143\u7d20\uff1b\u5982\u679c\u5bf9iterator\u8c03\u7528<code>iter</code>\u51fd\u6570\uff0c\u5219\u8fd4\u56de\u81ea\u8eab\u3002</p> <p>\u5f53iterator\u4e2d\u5df2\u7ecf\u904d\u5386\u5b8c\u6240\u6709\u5143\u7d20\u540e\uff0c\u518d\u6b21\u8c03\u7528<code>next</code>\u4f1araise<code>StopIteration</code>\u7684exception\u3002\u4f46\u600e\u6837\u7b97\u904d\u5386\u5b8c\u4e86\u5462\uff1f\u4e0d\u4ec5\u4ec5\u5c40\u9650\u4e8e\u76f4\u63a5\u8c03\u7528 <code>next</code> \u51fd\u6570\u5230\u6ca1\u6709\u5143\u7d20\u4e3a\u6b62\uff0c\u5176\u4ed6\u65b9\u6cd5\u6bd4\u5982 <code>list(iterator1)</code> \u4e5f\u4f1a\u904d\u5386\u5143\u7d20\uff0c\u56e0\u4e3a<code>list</code> \u9700\u8981\u76f4\u5230 <code>iterator1</code> \u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u800citerator\u8fd9\u79cd\u5bf9\u8c61\u662fimplicit sequence\uff0c\u91c7\u7528lazy computation\uff0c\u4e0d\u4f1a\u5b58\u50a8\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u5143\u7d20\uff0c\u800c\u662f\u5728\u8c03\u7528next\u540e\u518d\u5f39\u51fa\u4e0b\u4e00\u4e2a\u5143\u7d20\uff0c\u56e0\u6b64\u4e3a\u4e86\u83b7\u53d6\u6240\u6709\u5143\u7d20\uff0c\u4e5f\u5c31implicitly\u904d\u5386\u4e86 <code>iterator1</code></p> <p>A comparison : Iterables\u548cIterators\u7684\u5173\u7cfb\u5c31\u50cfbook\u548cbookmark\u4e00\u6837\uff0c\u53ef\u4ee5\u6709\u591a\u4e2abookmark\u63d2\u5728\u540c\u4e00\u672cbook\u7684\u4e0d\u540c\u4f4d\u7f6e\uff0c\u904d\u5386\u6b64book\uff1b\u6b64\u5916\uff0cbookmark\u5e76\u4e0d\u77e5\u9053book\u81ea\u8eab\u7684\u53d8\u5316\uff0c\u56e0\u6b64\u5f53book\u53d8\u5316\uff08remove\u6216add\u6216append\u7b49\uff09\uff0cbookmark\u8fd8\u662f\u63d2\u5728\u76f8\u5e94\u7684\u9875\u4e4b\u95f4\uff0c\u4f46\u8c03\u7528 <code>next</code> \u51fd\u6570\u65f6\u4f1a\u6839\u636enew book\u7684\u72b6\u6001\u6765\u6267\u884c\uff1b\u5f53iterator\u5f39\u51fa <code>StopIteration</code> \u540e\uff0c\u76f8\u5f53\u4e8ebookmark\u5df2\u7ecf\u63d2\u5728book\u7684back cover\u4e4b\u540e\u4e86\uff0c\u6240\u4ee5\u4e0d\u7ba1\u5982\u4f55\u6539\u53d8iterable\uff0c\u5bf9\u8be5iterator\u8c03\u7528next\u51fd\u6570\u53ea\u4f1a\u5f39\u51fa <code>StopIteration</code> \uff0c\u89c1\u4e0b\u4f8b2</p> <p>\u6ce8\u610f\uff1aiterators\u5728\u904d\u5386\u5143\u7d20\u65f6\u4e0d\u5f71\u54cd\u539f\u6765\u7684iterable</p> <pre><code>&gt;&gt;&gt; lst = [1, 2, 3, 4]\n&gt;&gt;&gt; list_iter = iter(lst)\n&gt;&gt;&gt; next(list_iter)\n1\n&gt;&gt;&gt; list(list_iter) # Return remaining items in list_iter\n[2, 3, 4]\n</code></pre> <pre><code>&gt;&gt;&gt; s = [[1, 2, 3, 4]]\n&gt;&gt;&gt; i = iter(s)\n&gt;&gt;&gt; next(i)\n[1, 2, 3, 4]\n&gt;&gt;&gt; s.append(5)\n&gt;&gt;&gt; next(i)\n5\n</code></pre> <p>Generators: \u4e00\u79cd\u7279\u6b8aiterator\uff0c\u901a\u8fc7\u5b9a\u4e49\u4e2a\u6027\u5316\u7684generator\u51fd\u6570\uff0creturn\u5f97\u5230generator object</p> <p>yield statement: generator\u51fd\u6570\u4e2d\u7279\u6709\u7684\u8bed\u53e5</p> <p>Generator\u51fd\u6570\u7684\u6267\u884c\u8fc7\u7a0b\uff1a\u8c03\u7528generator\u51fd\u6570\uff08\u542b<code>yield</code> statement\u7684\u51fd\u6570\uff09\u4ea7\u751f\u4e00\u4e2a <code>generator</code> \u5bf9\u8c61\uff0c\u4f46\u4e0d\u4f1a\u6267\u884cgenerator\u51fd\u6570\u7684body\uff1b\u8c03\u7528generator\u51fd\u6570\u540e\uff0c\u6bcf\u6b21\u8c03\u7528\u5bf9\u8be5<code>generator</code>\u5bf9\u8c61\u8c03\u7528next\u51fd\u6570\uff0c\u90fd\u4f1a\u4f7f\u5bf9\u5e94\u7684generator\u51fd\u6570body\u5f00\u59cb\u6267\u884c\uff0c\u76f4\u5230\u9047\u89c1<code>yield</code> statement\uff08\u5373\u8fd4\u56de<code>yield</code>\u540e\u9762\u7684\u8868\u8fbe\u5f0f\u7684\u503c\uff09\uff0c\u6216\u9047\u5230\u6682\u505c\u70b9\uff08\u6bd4\u5982<code>return</code>\uff09\uff1b\u5f53\u6682\u505c\u5728\u67d0\u4e2a <code>yield</code> statement\u65f6\uff0c\u4f1a\u8bb0\u4f4f\u6b64\u65f6\u79bb\u5f00\u7684\u4f4d\u7f6e\u548c\u72b6\u6001\uff0c\u4e0b\u6b21\u7ee7\u7eed\u4ece\u8be5\u6682\u505c\u70b9\u5f00\u59cb\u7ee7\u7eed\u6267\u884cbody</p> <p>\u5982\u679c\u6ca1\u5143\u7d20\u53efyield\u4e86\uff0c\u5219raise <code>StopIteration</code>\uff0c\u4e0eiterator\u7c7b\u4f3c</p> <p>\u4e5f\u53ef\u4ee5\u7528<code>yield from</code> statement\u4ece <code>iterator</code> \u6216 <code>iterable</code> \u4e2dyield\u5143\u7d20\uff0c\u89c1\u4e0b\u4f8b</p> <pre><code>&gt;&gt;&gt; def gen_list(lst):\n...     yield from lst\n...\n&gt;&gt;&gt; g = gen_list([1, 2])\n&gt;&gt;&gt; next(g)\n1\n&gt;&gt;&gt; next(g)\n2\n&gt;&gt;&gt; next(g)\nStopIteration\n</code></pre> OOP <p>Class\u548cinstance\u90fd\u662fobject\uff0c\u524d\u8005\u662f\u6a21\u677f\uff0c\u540e\u8005\u662f\u5b9e\u4f8b\u3002\u7528class\u6a21\u677f\u521b\u5efa\u521b\u5efa\u65b0\u7684instance\u5bf9\u8c61\u7684\u64cd\u4f5c\u79f0\u4e3ainstantiate the class\u3002\uff08\u4e0b\u4ee5Account class\u4e3a\u4f8b\u8bb2\u89e3\uff09</p> <pre><code>&gt;&gt;&gt; class Account:\n        \"\"\"A bank account that has a non-negative balance.\"\"\"\n        interest = 0.02\n        def __init__(self, account_holder):\n            self.balance = 0\n            self.holder = account_holder\n        def deposit(self, amount):\n            \"\"\"Increase the account balance by amount and return the new balance.\"\"\"\n            self.balance = self.balance + amount\n            return self.balance\n        def withdraw(self, amount):\n            \"\"\"Decrease the account balance by amount and return the new balance.\"\"\"\n            if amount &gt; self.balance:\n                return 'Insufficient funds'\n            self.balance = self.balance - amount\n            return self.balance\n</code></pre> <p>attribute\u548cmethod: \u90fd\u662fattribute\uff0c\u524d\u8005\u662fdata\uff0c\u540e\u8005\u662ffunction\u3002attribute\u53c8\u53ef\u4ee5\u5206\u4e3ainstance attribute \u548c class attribute\u3002</p> <ul> <li>instance attribute\uff1a\u72ec\u5c5e\u4e8e\u67d0\u4e2a\u7279\u5b9ainstance\u7684\u5c5e\u6027\uff0c\u4e00\u822c\u4e0e\u540cclass\u7684\u5176\u4ed6instance\u4e0d\u540c\uff0c\u4ee3\u8868\u8be5\u5b9e\u4f8b\u7684identity\u3002\u4e00\u822c\u662f\u5728<code>def class</code>\u4e2d<code>def __init__(self, ...)</code> body\u4e2d\u8fdb\u884c\u521d\u59cb\u5316\u7684\uff0c\u5982</li> <li>class attribute\uff1a\u5728<code>def class</code>\u4e2d\uff0c\u4f46\u5728<code>def __init__(self, ...)</code> \u53ca\u5176\u4ed6method\u4e4b\u5916\u521d\u59cb\u5316\u7684attribute\uff0c\u662f\u540cclass\u7684instance\u5171\u4eab\u7684\u5c5e\u6027</li> </ul> <p>\u5f53instance attribute\u6539\u53d8\u65f6\uff0c\u4ec5\u8be5instance\u6539\u53d8\uff1b\u5f53class attribute\u6539\u53d8\u65f6\uff0c\u6240\u6709instance\u90fd\u4f1a\u6539\u53d8\u5c5e\u6027\u3002</p> <p>\u6b64\u65f6\u5c31\u4f1a\u51fa\u73b0\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u679cinstance attribute\u548cclass attribute\u91cd\u540d\u4e86\u4f1a\u600e\u6837\u5462\uff1f\u8fd9\u5c31\u6d89\u53ca\u5230</p> <ol> <li>attribute name\u7684\u4f30\u503c\u673a\u5236\uff1a\u5bf9\u4e8e<code>&lt;expression&gt; . &lt;name&gt;</code> \u7684<code>name</code>\uff0c\u5148\u4eceinstance attribute\u4e2d\u627e\uff0c\u82e5\u627e\u4e0d\u5230\u5219\u4ececlass attribute\u4e2d\u627e\uff0c\u82e5\u627e\u4e0d\u5230\u5219\u4ecesuper class\u4e2d\u627e......\uff1b\u7136\u540e\u6839\u636e\u627e\u5230\u7684attribute\u4f30\u51fa\u5bf9\u5e94\u7684\u503c\u3002</li> <li>attribute assignment\u673a\u5236\uff1a\u5bf9<code>&lt;expression&gt; . &lt;name&gt;</code>\uff0c</li> <li>\u82e5<code>&lt;expression&gt;</code>\u662finstance\uff0c\u5bf9\u4e8einstance attribute\u4e2d\u6ca1\u6709\u7684<code>name</code>\uff0c\u4f1a\u4e3a\u8be5instance(\u5373\u4e3ainst1)\u521b\u5efa<code>name</code>\u7684instance attribute\u3002\u4ee5\u540e\uff0c\u4e0d\u7ba1class\u4e2d\u662f\u5426\u6709<code>name</code> \u7684\u5c5e\u6027\uff0c<code>inst1.name</code>\u8bbf\u95ee\u7684\u5c31\u4e0d\u662fclass attribute\uff0c\u800c\u662f\u81ea\u5df1\u7684instance attribute\u4e86\u3002</li> <li>\u82e5<code>&lt;expression&gt;</code>\u662fclass\uff0c\u5219\u8be5assignment statement\u4f1a\u4fee\u6539class attribute\u3002</li> </ol> <pre><code># Account\u793a\u4f8b\n&gt;&gt;&gt; Account.interest = 0.04\n&gt;&gt;&gt; spock_account.interest\n0.04\n&gt;&gt;&gt; kirk_account.interest\n0.04\n&gt;&gt;&gt; kirk_account.interest = 0.08 #\u8be5interest\u662fkirk\u7684instance attribute\n&gt;&gt;&gt; kirk_account.interest\n0.08\n&gt;&gt;&gt; spock_account.interest #\u8be5interest\u4ecd\u7136\u4ee3\u8868Account\u7684class attribute\n0.04\n&gt;&gt;&gt; Account.interest = 0.05  # changing the class attribute\n&gt;&gt;&gt; spock_account.interest     # changes instances without like-named instance attributes\n0.05\n&gt;&gt;&gt; kirk_account.interest     # but the existing instance attribute is unaffected\n0.08\n</code></pre> <p>\u5173\u4e8e<code>__init__</code>method: \u88ab\u53eb\u505athe constructor for the class\uff0c\u7136\u800c\u5b83\u5e76\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684constructor\uff0c\u800c\u662f\u521d\u59cb\u5316object\uff0c\u5373\u88ab\u7701\u7565\u7684<code>self</code>\u3002\u5b83\u7684\u53c2\u6570\u8868<code>(self, ...)</code>\u3002\u5728instantiate\u65f6\uff0c<code>self</code>\u88abbind\u5230\u5f53\u524d\u6b63\u5728\u88abinstantiate\u7684object instance</p> <p>bound method\u4e0d\u540c\u4e8e\u666e\u901afunction\u7684\u5730\u65b9\u5728\u4e8e\uff1a\u5b83\u4f1a\u81ea\u52a8\u5c06\u8be5object\u7ed1\u5b9a\u5230<code>self</code>\u5f62\u53c2\u4e2d\u3002\u5bf9\u524d\u8005\uff0cself\u5bf9\u5e94\u7684argument\u81ea\u52a8\u7701\u7565\uff0c\u5bf9\u4e8e\u540e\u8005\uff0c\u5219\u5fc5\u987b\u63d0\u4f9b<code>self</code>\u7684argument value\u3002\u89c1\u4e0bcode\u793a\u4f8b</p> <pre><code>&gt;&gt;&gt; type(Account.deposit)\n&lt;class 'function'&gt;\n&gt;&gt;&gt; type(spock_account.deposit)\n&lt;class 'method'&gt;\n\n&gt;&gt;&gt; Account.deposit(spock_account, 1001)  # The deposit function takes 2 arguments\n1011\n&gt;&gt;&gt; spock_account.deposit(1000)           # The deposit method takes 1 argument\n2011\n</code></pre> <p>Inheritance: \u4ee5base class (parent class, super class)\u4e3a\u57fa\u7840\u5bf9\u4e00\u4e9battribute\u8fdb\u884c\u4fee\u6539 (override) \u5f97\u5230subclass (child class)</p> <p>Inheritance\u7684\u7528\u6cd5\uff1a</p> <pre><code>&gt;&gt;&gt; class CheckingAccount(Account):\n        \"\"\"A bank account that charges for withdrawals.\"\"\"\n        withdraw_charge = 1\n        interest = 0.01\n        def withdraw(self, amount):\n            return Account.withdraw(self, amount + self.withdraw_charge)\n</code></pre> string conversion <p>Two built-in conversion function: \u4ea7\u751f\u4e00\u4e2aobject\u7684string\u8868\u793a</p> <ol> <li>str: human-interpretable text (\u4eba\u770b\u5f97\u61c2\u7684string\u8868\u793a)</li> <li>repr: Python-interpretable expression (Python\u770b\u5f97\u61c2) ;\u4e14\u6709<code>eval(repr(object)) == object</code>;\u82e5\u6ca1\u6709\u80fd\u4f30\u503c\u4e3a\u539fobject value\u7684\u5b57\u7b26\u8868\u793a\uff0c\u5219\u4f1a\u8f93\u51fa\u4e00\u6bb5\u5c16\u62ec\u53f7\u5305\u56f4\u7684\u63cf\u8ff0\uff0c\u5982\uff1a</li> </ol> <pre><code>&gt;&gt;&gt; repr(min)\n'&lt;built-in function min&gt;'\n</code></pre> <p>\u5f53\u5b9a\u4e49\u4e86\u4e00\u4e2aclass\u65f6\uff0c<code>__str__</code>\u548c<code>__repr__</code>\u90fd\u662f\u8be5class\u7684built-in method\u3002\u5f53\u6211\u4eec\u6267\u884c<code>str(obj)</code> \u4ee5\u53ca<code>repr(obj)</code>\u65f6\uff0c\u5b9e\u9645\u4e0a\u662finvoke\u4e86<code>obj</code>\u7684<code>__str__</code>\u548c<code>__repr__</code> method\u3002</p> <p>\u6b64\u5916\uff0c<code>print()</code>\u51fd\u6570\u5b9e\u9645\u4e0a\u8c03\u7528\u4e86<code>obj</code>\u7684<code>__str__</code>\u65b9\u6cd5\u5e76\u5728display\u65f6\u53bb\u6389\u5f15\u53f7\uff1b\u5728interactive mode\u4e0bsimply call the object\u5b9e\u9645\u4e0a\u8c03\u7528\u4e86<code>obj</code>\u7684<code>__repr__</code>\u65b9\u6cd5\u5e76\u5728display\u65f6\u53bb\u6389\u5f15\u53f7\u3002</p> Recursive object 1. Linked List Class <pre><code>&gt;&gt;&gt; class Link:\n        \"\"\"A linked list with a first element and the rest.\"\"\"\n        empty = ()\n        def __init__(self, first, rest=empty):\n            assert rest is Link.empty or isinstance(rest, Link) #built-in function\n            self.first = first\n            self.rest = rest\n        def __getitem__(self, i):\n            if i == 0:\n                return self.first\n            else:\n                return self.rest[i-1]  #recursive call \n        def __len__(self):\n            return 1 + len(self.rest)\n# linked list representation and addition\n&gt;&gt;&gt; def link_expression(s):\n        \"\"\"Return a string that would evaluate to s.\"\"\"\n        if s.rest is Link.empty:\n            rest = ''\n        else:\n            rest = ', ' + link_expression(s.rest)\n        return 'Link({0}{1})'.format(s.first, rest)\n&gt;&gt;&gt; Link.__repr__ = link_expression\n\n&gt;&gt;&gt; def extend_link(s, t):\n        if s is Link.empty:\n            return t\n        else:\n            return Link(s.first, extend_link(s.rest, t))\n&gt;&gt;&gt; Link.__add__ = extend_link # combine two linked list\n\n# linked list comprehension\n&gt;&gt;&gt; def map_link(f, s):\n        if s is Link.empty:\n            return s\n        else:\n            return Link(f(s.first), map_link(f, s.rest))\n&gt;&gt;&gt; def filter_link(f, s):\n        if s is Link.empty:\n            return s\n        else:\n            filtered = filter_link(f, s.rest)\n            if f(s.first):\n                return Link(s.first, filtered)\n            else:\n                return filtered\n#compact string constructor of linked list\n&gt;&gt;&gt; def join_link(s, separator):\n        if s is Link.empty:\n            return \"\"\n        elif s.rest is Link.empty:\n            return str(s.first)\n        else:\n            return str(s.first) + separator + join_link(s.rest, separator)\n&gt;&gt;&gt; join_link(s, \", \")\n'3, 4, 5'\n\n# class version of linked list partition (previously we used ADT tree recursion)\n&gt;&gt;&gt; def partitions(n, m):\n        \"\"\"Return a linked list of partitions of n using parts of up to m.\n        Each partition is represented as a linked list.\n        \"\"\"\n        if n == 0:\n            return Link(Link.empty) # A list containing the empty partition\n        elif n &lt; 0 or m == 0:\n            return Link.empty\n        else:\n            using_m = partitions(n-m, m)\n            with_m = map_link(lambda s: Link(m, s), using_m)\n            without_m = partitions(n, m-1)\n            return with_m + without_m\n\n&gt;&gt;&gt; def print_partitions(n, m):\n        lists = partitions(n, m)\n        strings = map_link(lambda s: join_link(s, \" + \"), lists)\n        print(join_link(strings, \"\\n\"))\n</code></pre> <p>2. Tree Class</p> <pre><code>&gt;&gt;&gt; class Tree:\n        def __init__(self, label, branches=()):\n            self.label = label\n            for branch in branches:\n                assert isinstance(branch, Tree)\n            self.branches = branches\n        def __repr__(self):\n            if self.branches:\n                return 'Tree({0}, {1})'.format(self.label, repr(self.branches))\n            else:\n                return 'Tree({0})'.format(repr(self.label))\n        def is_leaf(self):\n            return not self.branches\n</code></pre> <p>3. Sets\uff08\u96c6\u5408\uff09</p> <p>mutable\uff0c\u4f46\u4e0d\u5305\u542bmutable data types\uff0c\u4e0e\u6570\u5b66\u4e0a\u7684\u96c6\u5408\u5728\u6982\u5ff5\u4e0a\u548c\u8bb0\u53f7\u4e0a\u57fa\u672c\u76f8\u540c\uff0c\u7528{ }\u628a\u5143\u7d20\u62ec\u8d77\u6765\uff0c\u5143\u7d20\u4e0d\u91cd\u590d\uff0c\u65e0\u5e8f\u3002</p> <pre><code>&gt;&gt;&gt; s = {3, 2, 1, 4, 4}\n&gt;&gt;&gt; s\n{1, 2, 3, 4}\n# membership test, length, union, intersection(\u4ea4\u96c6\u548c\u5e76\u96c6)\n&gt;&gt;&gt; 3 in s\nTrue\n&gt;&gt;&gt; len(s)\n4\n&gt;&gt;&gt; s.union({1, 5})\n{1, 2, 3, 4, 5}\n&gt;&gt;&gt; s.intersection({6, 5, 4, 3})\n{3, 4}\n\nisdisjoint(),issubset, and issuperset #\u662f\u5426\u4e0d\u76f8\u4ea4\uff0c\u4e3a\u5b50\u96c6\uff0c\u4e3a\u6bcd\u96c6 \n</code></pre> Disc7 Tree Class Tree constructor and selector functions Tree class Constructing a tree <code>tree(label, branches)</code> <code>Tree(label, branches)</code> (which calls the <code>Tree.__init__</code> method) Label and branches call <code>label(t)</code> or <code>branches(t)</code> respectively <code>t.label</code> or <code>t.branches</code> Mutability immutable because we cannot assign values to call expressions mutable, The <code>label</code> and <code>branches</code> attributes of a <code>Tree</code> instance can be reassigned Checking if a tree is a leaf <code>is_leaf(t)</code> <code>t.is_leaf()</code>"},{"location":"self_learn/cs61a/ch3/","title":"\u7b2c\u4e09\u7ae0","text":"Ch3 Functional Programming : Scheme <ul> <li>expressions: </li> </ul> <ol> <li>prefix operator notation (+  -  *  <code>quotient</code> <code>modulo</code>)</li> <li>Primitive expression : symbols, numbers, booleans</li> <li>evaluation procedure: first evaluate operator and operand, then apply operator to operand</li> <li>boolean value : <code>#f</code> (the only false value)\u548c <code>#t</code></li> <li>\u903b\u8f91\u8fd0\u7b97\u7b26\uff1a\u4e0epython\u7c7b\u4f3c\uff0cshort circuit\u3001\u4f30\u503c\u4e3a\u7b2c\u4e00\u6761\u6ee1\u8db3\u6761\u4ef6\u7684\u8868\u8fbe\u5f0f\u7684\u503c\uff0c\u800c\u672a\u5fc5\u662f\u771f\u5047</li> <li> <p>=, eq?, equal?</p> <ul> <li> <p><code>(= &lt;a&gt; &lt;b&gt;)</code>\u8fd4\u56detrue\uff0c\u82e5\u4e24\u8868\u8fbe\u5f0f\u503c\u76f8\u7b49</p> </li> <li> <p><code>(eq? &lt;a&gt; &lt;b&gt;)</code>\u8fd4\u56detrue\uff0c\u82e5\u4e24\u8868\u8fbe\u5f0f\u503c\u76f8\u7b49\uff0c\u6216\u6307\u5411\u540c\u4e00\u5bf9\u8c61\uff0c\u7c7b\u4f3c\u4e8epython\u4e2d<code>is</code></p> </li> <li> <p><code>(equal? &lt;a&gt; &lt;b&gt;)</code>\u8fd4\u56detrue\uff0c\u5f53<code>a</code>\u548c<code>b</code>\u662fpairs\u65f6\u6bd4\u8f83\u5185\u5bb9\uff0c\u5426\u5219\u7b49\u4ef7\u4e8e<code>eq?</code> <pre><code>&gt;(+ (* 3 5) (- 10 6))\n19\n&gt;(quotient 10 2)\n5\n</code></pre></p> </li> </ul> </li> </ol> <ul> <li>definitions:</li> </ul> <ol> <li> <p>\u5b9a\u4e49\u53d8\u91cf\uff0c\u5982<code>(define pi 3.14)</code>\uff0c\u6ce8\u610f\u8fd9\u65f6<code>define</code>\u8bed\u53e5\u4f1a\u8fd4\u56desymbol <code>pi</code> \u800c\u975e <code>pi</code> \u7684\u503c3.14</p> </li> <li> <p>\u5b9a\u4e49\u51fd\u6570\u683c\u5f0f\uff1a<code>(define (&lt;name&gt; &lt;formal parameters&gt;) &lt;body&gt;)</code>\uff0c\u4f8b\u5982<code>(define (square x) (* x x))</code></p> </li> <li> <p>\u652f\u6301\u5d4c\u5957\u51fd\u6570\u548c\u9012\u5f52</p> </li> <li> <p>lambda \u8868\u8fbe\u5f0f\u683c\u5f0f\uff1a<code>(lambda (&lt;formal-parameters&gt;) &lt;body&gt;)</code></p> </li> </ol> <ul> <li>Compound values</li> </ul> <ol> <li>Pairs : \u7531<code>cons</code>\u6765construct\uff0c\u7528<code>car</code>\u548c<code>cdr</code>\u6765\u53d6\u6536\u9996\u4e2a\u5143\u7d20\u548c\u5269\u4f59\u5143\u7d20\uff0c\u5982<code>(cons 1 2)</code></li> <li>Recursive lists : scheme\u4e2d\u7684 list \u5747\u4e3a linked list\uff0c\u7531pairs\u6784\u9020\u800c\u6210\uff0c\u65e2\u53ef\u7528\u5d4c\u5957<code>cons</code>+\u62ec\u53f7\uff0c\u4e5f\u53ef\u4ee5\u7528<code>list</code>+\u62ec\u53f7\uff0c\u6216 <code>quote</code> +\u62ec\u53f7\uff1b</li> </ol> <pre><code>&gt;(cons 1\n      (cons 2\n            (cons 3\n                  (cons 4 nil)))) #nil represents empty list\n(1 2 3 4)\n&gt;(list 1 2 3 4)\n(1 2 3 4)\n&gt;(define one-through-four (list 1 2 3 4))\n&gt;(car one-through-four)\n1\n&gt;(cdr one-through-four)\n(2 3 4)\n&gt;(cons 10 one-through-four)\n(10 1 2 3 4)\n&gt; (quote (1 x 3))\n(1 x 3)\n</code></pre> <ol> <li> <p>\u53ef\u4ee5\u7528<code>null?</code>\u51fd\u6570\u6765\u5224\u65ad<code>list</code>\u662f\u5426\u4e3aempty list\uff0c\u4ee5\u4e0b\u7528<code>null?</code>+\u9012\u5f52\uff0c\u5b9a\u4e49<code>length</code> \u548c <code>getitem</code>\u51fd\u6570</p> <pre><code>(define (length items)\n  (if (null? items)\n      0\n      (+ 1 (length (cdr items)))))\n(define (getitem items n)\n  (if (= n 0)\n      (car items)\n      (getitem (cdr items) (- n 1))))\n(define squares (list 1 4 9 16 25))\n</code></pre> </li> </ol> <ul> <li> <p>Symbolic data   1. \u88abevaluate\u6210\u5b57\u9762\u7b26\u53f7\u672c\u8eab\uff0c\u800c\u975e\u7b26\u53f7\u6240\u4ee3\u8868\u7684\u503c\uff0c\u79f0\u4e3aquoted\uff1b\u65e2\u53ef\u4ee5\u4f20\u5355\u4e2a\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u4f20compound value\u6bd4\u5982<code>list</code></p> <pre><code>&gt;(define a 1)\n&gt;(define b 2)\n&gt;(list a b)\n(1 2)\n&gt;(list 'a 'b)\n(a b)\n&gt;(car '(a b c))\na\n</code></pre> </li> <li> <p>special forms\uff0c\u975e\u4e00\u822cexpression\u7684\u8bed\u53e5 (control flow\u3001define\u3001let\u3001begin......)</p> </li> </ul> <p>Control flow:</p> <ol> <li> <p><code>if</code>  expression : <code>(if &lt;predicate&gt; &lt;consequent&gt; [alternative])</code>\uff0c<code>alternative</code> is optional\uff1b\u5982\u679c <code>predicate</code> \u4e3a\u771f\uff0c\u4f30\u503c <code>conssequent</code> \u5e76return\u5176\u503c\uff1b\u5426\u5219 <code>alternative</code> \u540c\u7406</p> </li> <li> <p><code>cond</code> expression : \u7c7b\u4f3c\u4e8epython\u4e2d\u7684<code>if</code>\u3001<code>elif</code>\u3001<code>else</code></p> <pre><code>(cond (&lt;pred1&gt; &lt;if-pred1&gt;) (&lt;pred2&gt;  &lt;if-pred2&gt;) ... (&lt;predn&gt; &lt;if-predn&gt;) [(else  &lt;else-expression&gt;)])\n</code></pre> </li> <li> <p><code>let</code> expression : <code>(let ([binding_1] ... [binding_n]) &lt;body&gt; ...)</code>\uff0c\u5176\u4e2d\u6bcf\u4e2a <code>binding</code> \u90fd\u6309\u5f62\u5f0f <code>(&lt;name&gt; &lt;expression&gt;)</code>\u3002\u4f30\u503c\u8fc7\u7a0b\u5982\u4e0b\uff1a</p> <ol> <li>\u4ee5current frame\u4e3aparent\uff0c\u521b\u5efa\u65b0\u7684local frame</li> <li>\u5c06\u6bcf\u4e2a <code>binding</code> \u4e2d\u7684 <code>name</code> \u7ed1\u5230 <code>expression</code> </li> <li>\u6700\u540e\u6267\u884c\uff0c\u5e76return  <code>&lt;body&gt;</code>\u4e2d\u6700\u540e\u4e00\u6761 <code>expression</code> \u7684\u503c</li> </ol> </li> <li> <p><code>begin</code> expression : <code>(begin &lt;body_1&gt; ... &lt;body_n&gt;)</code> \uff0c\u7528\u4e00\u6761<code>begin</code>\u5c06\u591a\u6761\u8868\u8fbe\u5f0f\u6253\u5305\u6210\u4e00\u6761\uff0c\u4f9d\u6b21\u6267\u884c\u6bcf\u6761<code>body</code>\uff0c\u6700\u540ereturn\u672b\u6761\u7684\u503c</p> </li> <li> <p><code>define</code> and <code>lambda</code> expression</p> </li> <li> <p><code>quote</code> expression : the input text is returned without evaluated </p> </li> </ol> Lab 10 <p>tail calls\uff08\u5c3e\u9012\u5f52\uff09: \u82e5\u9012\u5f52\u51fd\u6570\u7684\u6700\u540e\u4e00\u4e2a\u52a8\u4f5c\u662fcall itself\u6216\u8005call another function\uff08\u4e14\u8be5\u51fd\u6570\u4e5f\u662f\u5c3e\u9012\u5f52\u51fd\u6570\uff09\uff0c\u5219\u79f0\u4e3a\u5c3e\u9012\u5f52\u3002</p> <p>\u66f4\u6743\u5a01\u7684\u8868\u8ff0\uff1aa tail recursive way, where all of the recursive calls are tail calls. A tail call occurs when a function calls another function as the last action of the current frame.</p> <p>\u5c3e\u9012\u5f52\u7684\u597d\u5904\uff1a\u6700\u7ec8\u8fd4\u56de\u7684\u503c\u5c31\u662f\u9012\u5f52depth\u6700\u6df1\u7684\u90a3\u6b21\u8c03\u7528return\u7684\u503c\uff0c\u65e0\u9700\u5728\u201c\u5f52\u201d\u65f6\u6709\u989d\u5916\u8ba1\u7b97\uff0c\u65e0\u9700re-visit\u90a3\u4e9bearlier frames\uff0c\u4e8e\u662f\u7ecf\u8fc7\u4f18\u5316\u5c31\u53ef\u4ee5\u8df3\u8fc7\u4e00\u7cfb\u5217\u4e2d\u95f4\u9012\u5f52\u8c03\u7528\uff0c\u6267\u884c\u66f4\u5c11\u6b65\u9aa4\uff1b\u4e5f\u53ef\u4ee5\u9700\u8981\u66f4\u5c11\u7684memory\u6765\u5b58\u653eprevious frames</p> <p>\u5229\u7528\u5c3e\u9012\u5f52\u4f18\u5316\uff1a\u4e00\u822c\u53ef\u4ee5\u5229\u7528helper\u5d4c\u5957\u51fd\u6570\uff0cupdate\u5728current frame\u4e2d\u7684\u67d0\u4e2a\u503c\uff0c\u518d\u5c06\u5176\u4f20\u5165\u65b0\u7684call\u4e2d\u3002\u8fd9\u6837\uff0c\u6240\u6709computation\u90fd\u5728recursion\u4e4b\u524d\u53d1\u751f\u3002\u800cprevious frame\u53ef\u4ee5\u8fdb\u884c\u56de\u6536\u5229\u7528\u3002</p> <p>\u6bd4\u5982\u4e00\u4e2a<code>factorial</code> \u51fd\u6570that is not tail recursive\uff0c\u53ef\u4ee5\u4f18\u5316\u4e3atail recursive function</p> <pre><code>(define (factorial n)\n  (define (fact-tail n result)\n    (if (= n 0)\n        result\n        (fact-tail (- n 1) (* n result))))\n  (fact-tail n 1))\n</code></pre> Interpreters <p>REPL (Read-Eval-Print loop) : </p> <p></p>"},{"location":"self_learn/cs61a/ch4/","title":"\u7b2c\u56db\u7ae0","text":"Ch4 Regular expression / SQL"},{"location":"self_learn/cs61a/ch4/#character-classes","title":"Character Classes","text":"Class Description Matched Example Unmatched Example <code>[abc]</code> Matches a, b, or c a <code>[a-z]</code> Matches any character between a and z x <code>[^A-Z]</code> Matches any character that is not between A and Z. a <code>\\w</code> Matches any \"word\" character. Equivalent to <code>[A-Za-z0-9_]</code>. A, a, 0, _ - + * / ...... <code>\\d</code> Matches any digit. Equivalent to <code>[0-9]</code>. <code>[0-9]</code> Matches a single digit in the range 0 - 9. Equivalent to <code>\\d</code>. 1 <code>\\s</code> Matches any whitespace character (spaces, tabs, line breaks). <code>.</code> Matches any character besides new line. <p>Character classes can be combined, like in <code>[a-zA-Z0-9]</code>.</p>"},{"location":"self_learn/cs61a/ch4/#combining-patterns","title":"Combining Patterns","text":"<p>There are multiple ways to combine patterns together in regular expressions.</p> Combo Description <code>AB</code> A match for A followed immediately by one for B.  Example: <code>x[.,]y</code> matches \"x.y\" or \"x,y\". <code>A|B</code> Matches either A or B.  Example: <code>\\d+|Inf</code> matches either a sequence containing 1 or more digits or \"Inf\". <p>A pattern can be followed by one of these quantifiers to specify how many instances of the pattern can occur.</p> Symbol Description <code>*</code> 0 or more occurrences of the preceding pattern. Example: <code>[a-z]*</code> matches any sequence of lower-case letters or the empty string. <code>+</code> 1 or more occurrences of the preceding pattern. Example: <code>\\d+</code> matches any non-empty sequence of digits. <code>?</code> 0 or 1 occurrences of the preceding pattern. Example: <code>[-+]?</code> matches an optional sign. <code>{1,3}</code> Matches the specified quantity of the preceding pattern. <code>{1,3}</code> will match from 1 to 3 instances. <code>{3}</code> will match exactly 3 instances. <code>{3,}</code> will match 3 or more instances. Example: <code>\\d{5,6}</code> matches either 5 or 6 digit numbers."},{"location":"self_learn/cs61a/ch4/#groups","title":"Groups","text":"<p>\u5706\u62ec\u53f7\u7528\u4e8e\u521b\u5efagroups\uff0c\u548c\u5e73\u5e38\u7684\u7b97\u672f\u8868\u8fbe\u5f0f\u4e2d\u7684\u5706\u62ec\u53f7\u7c7b\u4f3c\u3002 For example, <code>(Mahna)+</code> matches strings with 1 or more \"Mahna\", like \"MahnaMahna\". Without the parentheses, <code>Mahna+</code> would match strings with \"Mahn\" followed by 1 or more \"a\" characters, like \"Mahnaaaa\".</p>"},{"location":"self_learn/cs61a/ch4/#anchors","title":"Anchors","text":"<ul> <li><code>^</code>: Matches the beginning of a string. Example: <code>^(I|You)</code> matches I or You at the start of a string.</li> <li><code>$</code>: Normally matches the empty string at the end of a string or just before a newline at the end of a string. Example: <code>(\\.edu|\\.org|\\.com)$</code> matches .edu, .org, or .com at the end of a string.</li> <li><code>\\b</code>: Matches a \"word boundary\", the beginning or end of a word.  Example: <code>s\\b</code> matches s characters at the end of words, <code>\\bs</code> matches s characters at the beginning of words.</li> </ul>"},{"location":"self_learn/cs61a/ch4/#special-characters","title":"Special Characters","text":"<p>The following special characters are used above to denote types of patterns:</p> <pre><code>\\ / ( ) [ ] { } + * ? | $ ^ .\n</code></pre> <p>That means if you actually want to match one of those characters, you have to escape it using a backslash. For example, <code>\\(1\\+3\\)</code> matches \"(1 + 3)\".</p>"},{"location":"self_learn/efficientml/","title":"Index","text":"<p>\u672c\u7b14\u8bb0\u53c2\u8003\u8fd9\u4f4d\u5b66\u957f\u7684\u535a\u5ba2</p> <ul> <li> <p> deep learning basics</p> </li> <li> <p> pruning/sparse</p> </li> <li> <p> quantization</p> </li> <li> <p> Neural Architecture Search</p> </li> <li> <p> knowledge distillation</p> </li> <li> <p> TinyML</p> </li> <li> <p> Transformer</p> </li> <li> <p> LLM deployment</p> </li> </ul>"},{"location":"self_learn/efficientml/basicDL/","title":"Linear Layer (Fully-Connected Layer)","text":"<p>output neuron is connected to all input neurons</p> <ul> <li> <p>shape of tensors:</p> <ul> <li> <p>Input Features X: \\((n,c_i)\\)</p> </li> <li> <p>Output Features Y: \\((n,c_o)\\)</p> </li> <li> <p>Weights W: \\((c_o,c_i)\\)</p> </li> <li> <p>Bias b: \\((c_o,)\\)</p> </li> </ul> notations meanings n batch size \\(c_i\\) input channels \\(c_o\\) output channels </li> </ul>"},{"location":"self_learn/efficientml/basicDL/#convolution-layer","title":"Convolution Layer","text":"<p>output neuron is connected to input neurons in the receptive field</p> <ul> <li> <p>shape of tensors:</p> 1D conv 2D conv Input Features X \\((n,c_i,w_i)\\) \\((n,c_i,h_i,w_i)\\) Output Features Y \\((n,c_o,w_o)\\) \\((n,c_o,h_o,w_o)\\) Weights W \\((c_o,c_i,k_w)\\) \\((c_o,c_i,k_h,k_w)\\) Bias b \\((c_o,)\\) \\((c_o,)\\) conv3d <p></p> \\[ h_o=h_i-k_h+1 \\\\ w_o=w_i-k_w+1 \\] notations meanings n batch size \\(c_i\\) input channels \\(c_o\\) output channels \\(h_i,h_o\\) input/output height \\(w_i,w_o\\) input/output width \\(k_h\\) kernel height \\(k_w\\) kernel width </li> </ul>"},{"location":"self_learn/efficientml/basicDL/#padding-layer","title":"Padding Layer","text":"<p>Padding can be used to keep the output feature map size is the same as input feature map size</p> padding <p></p>"},{"location":"self_learn/efficientml/basicDL/#strided-convolution-layer","title":"Strided Convolution Layer","text":"\\[ h_o=\\frac{h_i+2p-k_h}{s}+1 \\] <p>\\(s\\) for stride, \\(p\\) for padding</p>"},{"location":"self_learn/efficientml/basicDL/#grouped-convolution-layer","title":"Grouped Convolution Layer","text":"<p>A group of narrower convolutions</p> <ul> <li> <p>shape of tensors:</p> <ul> <li> <p>Input Features X: \\((n,c_i,h_i,w_i)\\)</p> </li> <li> <p>Output Features Y: \\((n,c_o,h_o,w_o)\\)</p> </li> <li> <p>Weights W: \\((g \\cdot c_o/g,c_i/g, k_h,k_w)\\)</p> </li> <li> <p>Bias b: \\((c_o,)\\)</p> </li> </ul> group convolution <p></p> </li> </ul>"},{"location":"self_learn/efficientml/basicDL/#depthwise-convolution-layer","title":"Depthwise Convolution Layer","text":"<p>Independent filter for each channel: \\(g=c_i=c_o\\) in grouped convolution</p> <ul> <li> <p>shape of tensors:</p> <ul> <li> <p>Input Features X: \\((n,c_i,h_i,w_i)\\)</p> </li> <li> <p>Output Features Y: \\((n,c_o,h_o,w_o)\\)</p> </li> <li> <p>Weights W: \\((c,k_h,k_w)\\)</p> </li> <li> <p>Bias b: \\((c_o,)\\)</p> </li> </ul> depthwise convolution <p></p> </li> </ul>"},{"location":"self_learn/efficientml/basicDL/#pooling-layer","title":"Pooling Layer","text":"<p>Downsample the feature map to a smaller size</p> <ul> <li> <p>The output neuron pools the features in the receptive field, similar to convolution</p> <ul> <li>Usually, the stride is the same as the kernel size: \\(s=k\\)</li> </ul> </li> <li> <p>Pooling operates over each channel independently.</p> <ul> <li>No learnable parameters</li> </ul> </li> </ul> pooling <p></p>"},{"location":"self_learn/efficientml/basicDL/#normalization-layer","title":"Normalization Layer","text":"<p>Normalizing the features makes optimization faster</p> normalization <p></p>"},{"location":"self_learn/efficientml/basicDL/#activation-function","title":"Activation Function","text":"<p>typically non-linear functions</p> the last layer of a neural network <p></p> <p>different activation funcs</p> <p></p>"},{"location":"self_learn/efficientml/basicDL/#transformers","title":"Transformers","text":"<p>understand the keys, queries, and values in attention mechanisms?</p>"},{"location":"self_learn/efficientml/deploy/","title":"LLM deployment (lec13)","text":""},{"location":"self_learn/efficientml/deploy/#quantization","title":"Quantization","text":""},{"location":"self_learn/efficientml/deploy/#smoothquant","title":"SmoothQuant","text":""},{"location":"self_learn/efficientml/deploy/#awqtinychat","title":"AWQ/TinyChat","text":""},{"location":"self_learn/efficientml/deploy/#qserve","title":"QServe","text":""},{"location":"self_learn/efficientml/deploy/#pruning","title":"Pruning","text":""},{"location":"self_learn/efficientml/deploy/#wanda-pruning-by-considering-weights-and-activations","title":"Wanda: pruning by considering weights and activations","text":"<ul> <li> <p>\u4e0eAWQ\u76f8\u6bd4\uff0c\u526a\u679d\u4e5f\u6709\u7c7b\u4f3c\u7684\u60f3\u6cd5\uff1a\u5728\u4fee\u526a\u6743\u91cd\u65f6\uff0c\u6211\u4eec\u4e5f\u5e94\u8be5\u8003\u8651\u6fc0\u6d3b\u5206\u5e03\uff0c\u800c\u4e0d\u53ea\u662f\u6743\u91cd\u7684\u5e45\u5ea6\u3002</p> <ul> <li>\u56e0\u6b64\uff0c\u526a\u679d\u6807\u51c6\u5c31\u53d8\u6210\u4e86\u6743\u91cdx\u6fc0\u6d3b\u503c\u3002</li> <li> <p>\u4f8b\u5982\u4e0b\u56fe\u4e2d\uff0c\u5de6\u56fe\u4e3a\u539f\u526a\u679d\uff0c\u53f3\u56fe\u4e3aWanda\uff0c\u91cd\u8981\u6027=\u6743\u91cd\u00d7\u6fc0\u6d3b\uff0c\u56e0\u6b64\u5de6\u53f3\u56fe\u7684\u526a\u679d\u7ed3\u679c\u4e0d\u540c\u3002</p> <p></p> </li> </ul> </li> <li> <p>\u4e0b\u56fe\u7ed3\u679c\u8868\u793a\uff0cWanda\u59cb\u7ec8\u4f18\u4e8e\u57fa\u4e8e\u5e45\u5ea6\u7684\u526a\u679d</p> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#sparsity","title":"Sparsity","text":""},{"location":"self_learn/efficientml/deploy/#dejavu-input-dependent-sparsity","title":"DejaVu (input dependent sparsity)","text":"<ul> <li> <p>\u5982\u4e0b\u56fe\u9759\u6001\u548c\u52a8\u6001\u7a00\u758f\u6027\u5173\u4e8e\u53c2\u6570\u4e0e\u5ef6\u8fdf\u7684\u5bf9\u6bd4\u56fe</p> <ul> <li>\u9759\u6001\u7a00\u758f\u6027(static sparsity)\uff1a\u63d0\u4f9b\u4e2d\u9ad8\u7a0b\u5ea6\u7684\u7a00\u758f\u6027\uff0c\u4f46\u968f\u7740\u79fb\u9664\u66f4\u591a\u53c2\u6570\uff0c\u51c6\u786e\u5ea6\u4e0b\u964d\u6781\u4e3a\u8fc5\u901f\u3002</li> <li> <p>\u4e0a\u4e0b\u6587\u7a00\u758f\u5ea6(contextual sparsity)\uff1a\u5c0f\u7684\u3001\u4f9d\u8d56\u4e8e\u8f93\u5165\u7684\u5197\u4f59\u5934\u548c\u7279\u5f81\u96c6\uff0c\u5373\u4f7f\u8fdb\u884c\u5927\u91cf\u538b\u7f29\uff0c\u4e5f\u5f88\u597d\u7684\u4fdd\u6301\u51c6\u786e\u5ea6\u3002</p> <p></p> </li> </ul> </li> <li> <p>\u300aDeja Vu: Contextual Sparsity for Efficient LLMs at Inference Time \u300b(Liu et al., 2023)</p> <ul> <li> <p>\u5f15\u5165\u4e86\u4e00\u79cd\u5229\u7528\u5f53\u524d\u7279\u5f81\u56fe\u9884\u6d4b\u4e0b\u4e00\u5c42\u6240\u9700\u6ce8\u610f\u529b\u7684\u9884\u6d4b\u5668\uff0c\u5b83\u80fd\u591f\u4e0e\u6ce8\u610f\u529b\u5c42\u6216MLP\u5c42\u7684\u8ba1\u7b97\u5e76\u884c\u8fd0\u884c\uff0c\u4ece\u800c\u4f7f\u9884\u6d4b\u5668\u4e0e\u901a\u4fe1\u8fc7\u7a0b\u5f97\u4ee5\u91cd\u53e0\uff0c\u6700\u7ec8\u5e26\u6765\u663e\u8457\u7684\u52a0\u901f\u3002</p> <p></p> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#mixture-of-experts-moe","title":"Mixture-of-Experts (MoE)","text":"<ul> <li> <p>\u4ec0\u4e48\u662fMoE\uff1f</p> <ul> <li>\u6df7\u5408\u4e13\u5bb6\u6a21\u578b\uff08MoE\uff09\u662f\u4e00\u79cd\u7a00\u758f\u95e8\u63a7\u5236\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff0c\u5b83\u4e3b\u8981\u7531\u4e00\u7ec4\u4e13\u5bb6\u6a21\u578b\u548c\u4e00\u4e2a\u95e8\u63a7\u6a21\u578b\u7ec4\u6210\u3002MoE\u7684\u57fa\u672c\u7406\u5ff5\u662f\u5c06\u8f93\u5165\u6570\u636e\u6839\u636e\u4efb\u52a1\u7c7b\u578b\u5206\u5272\u6210\u591a\u4e2a\u533a\u57df\uff0c\u5e76\u5c06\u6bcf\u4e2a\u533a\u57df\u7684\u6570\u636e\u5206\u914d\u4e00\u4e2a\u6216\u591a\u4e2a\u4e13\u5bb6\u6a21\u578b\u3002\u6bcf\u4e2a\u4e13\u5bb6\u6a21\u578b\u53ef\u4ee5\u4e13\u6ce8\u4e8e\u5904\u7406\u8f93\u5165\u8fd9\u90e8\u5206\u6570\u636e\uff0c\u4ece\u800c\u63d0\u9ad8\u6a21\u578b\u7684\u6574\u4f53\u6027\u80fd\u3002</li> </ul> </li> <li> <p>\u300aSwitch Transformers: Scaling to Trillion Parameter Models with Simple and Efficient Sparsity\u300b</p> <ul> <li>\u8bba\u6587\u5c06MoE\u601d\u60f3\u5e94\u7528\u5230Transformer\u4e2d\uff0c\u63d0\u51fa\u4e86Switch Transformers\u67b6\u6784\u5982\u4e0b\u56fe\uff0c\u4f7f\u7528\u4e00\u4e2a\u7a00\u758f\u7684Switch\u524d\u9988\u7f51\u7edc\u5c42(FFN)\u66ff\u6362\u539f\u672c\u7684\u5bc6\u96c6FFN\u5c42\uff0c\u8be5\u5c42\u72ec\u7acb\u7684\u5bf9\u5e8f\u5217\u4e2d\u7684\u6807\u8bb0\u8fdb\u884c\u64cd\u4f5c\uff0c\u7136\u540e\u8def\u7531\u5230\u591a\u4e2aFFN\u4e13\u5bb6\u4e2d\u3002</li> <li> <p>\u5728MoE\u4e2d\uff0c\u9488\u5bf9\u6bcf\u4e2a\u8f93\u5165token\uff0c\u4e0d\u9700\u8981\u6fc0\u6d3b\u6574\u4e2a\u7f51\u7edc\u3002</p> <p></p> </li> </ul> </li> <li> <p>\u6bcf\u4e2a\u4e13\u5bb6\u53ef\u5904\u7406\u7684token\u5927\u5c0f=\uff08\u603btoken\u6570 / \u4e13\u5bb6\u6570\u91cf\uff09\u00d7 \u5bb9\u91cf\u56e0\u5b50\u3002\u5982\u679ctoken\u5206\u914d\u4e0d\u5747\u5300\uff0c\u90a3\u4e48\u67d0\u4e9b\u4e13\u5bb6\u4f1a\u6ea2\u51fa\uff08\u7528\u865a\u7ebf\u7ea2\u7ebf\u8868\u793a\uff09\uff0c\u5bfc\u81f4\u8fd9\u4e9btoken\u4e0d\u4f1a\u88ab\u8be5\u5c42\u5904\u7406\u3002\u8f83\u5927\u7684\u6269\u5bb9\u56e0\u5b50(capacity factor)\u53ef\u4ee5\u51cf\u8f7b\u8fd9\u79cd\u6ea2\u51fa\u95ee\u9898\uff0c\u4f46\u4e5f\u4f1a\u589e\u52a0\u8ba1\u7b97\u548c\u901a\u4fe1\u6210\u672c\uff08\u7531\u586b\u5145\u7684\u767d\u8272/\u7a7a\u767d\u63d2\u69fd\u8868\u793a\uff09\u3002</p> </li> <li> <p>\u5982\u4e0b\u56fe\uff0c\u5bb9\u91cf\u56e0\u5b50Capacity Factor\u5206\u522b\u4e3a1.0\u548c1.5\u65f6\u8def\u7531\u56fe\u3002</p> <p></p> </li> <li> <p>\u5982\u56fe\uff0cSwitch Transformers\u63d0\u51fa\u4e86\u4e0d\u540c\u7684\u8def\u7531\u673a\u5236\uff0c\u7b2c\u4e00\u79cd\u4ece\u4e13\u5bb6\u7ef4\u5ea6\u4e0a\u5bf9\u6bcf\u4e2atoken\u53d6\u524dK\u4e2a\uff0c\u7b2c\u4e8c\u79cd\u4ecetoken\u7ef4\u5ea6\u4e0a\u5bf9\u6bcf\u4e2a\u4e13\u5bb6\u53d6\u524dK\u4e2a\uff0c\u7b2c\u4e09\u79cd\u4ece\u5168\u5c40\u51b3\u5b9a\u5206\u914d\u3002</p> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#spattentoken-pruning-head-pruning","title":"SpAtten\uff1atoken pruning &amp; head pruning","text":"<ul> <li> <p>\u300aSpAtten: Efficient Sparse Attention Architecture with Cascade Token and Head Pruning\u300b (Wang et al., 2020)</p> </li> <li> <p>SpAtten\u4e2d\u63d0\u51fa\u4e32\u8054 (cascade) token\u548chead pruning\uff0c\u5bf9\u4e0d\u91cd\u8981\u7684token\u548chead\u8fdb\u884c\u526a\u679d (\u6ce8\u610f\u533a\u522b: \u4f20\u7edf\u7684\u526a\u679d\u7b97\u6cd5\uff0c\u51cf\u6389\u7684\u662f\u6743\u91cd\uff0c\u8fd9\u91cc\u51cf\u6389\u7684\u662ftoken\u548chead)\u3002cascade\u7684\u542b\u4e49\u662f\uff0c\u4e00\u65e6\u4e00\u4e2atoken\u6216head\u88ab\u51cf\u6389\u4e86\uff0c\u5728\u4e4b\u540e\u7684\u5c42\u4e2d\uff0c\u8fd9\u4e2atoken\u6216head\u4e5f\u90fd\u4e0d\u590d\u5b58\u5728\u3002</p> <ul> <li> <p>\u5982\u4e0b\u56fe\uff0c\u9010\u5c42\u526a\u679d\uff0c\u5e76\u4e14\u5728\u4e00\u5c42\u91cc\u526a\u53bb\u7684token\u548chead\u4e0d\u5728\u8003\u8651\u3002</p> <p></p> </li> </ul> </li> <li> <p>\u91cd\u8981\u6027\u8861\u91cf\uff1aSpAtten\u63d0\u51fa\u4e86\u7d2f\u8ba1\u91cd\u8981\u6027\u5f97\u5206\uff0c\u5982\u4e0b\u56fe\u4e2d11\u4e2atoken\u7684\u6ce8\u610f\u529b\u56fe\uff0c\u6bcf\u4e2atoken\u7684\u91cd\u8981\u6027\u4e3a\u8be5\u5217\u7684\u6ce8\u610f\u529b\u7d2f\u8ba1\u548c\uff0c\u8f83\u4f4e\u7684\u7d2f\u8ba1\u91cd\u8981\u6027\u5206\u6570\u7684token\u5c06\u88ab\u526a\u679d\u3002</p> <p></p> </li> <li> <p>\u9664\u6b64\u4ee5\u5916\uff0cSpAtten\u8fd8\u63d0\u51fa\u4e86\u4e24\u70b9</p> <ul> <li>V\u526a\u679d\uff1a\u5982\u679cQK\u77e9\u9635\u8f83\u5c0f\uff0c\u5219\u4e0d\u5b58\u53d6V\u77e9\u9635\u3002</li> <li>\u6e10\u8fdb\u5f0f\u91cf\u5316\uff1a\u4ece\u4f4e\u7cbe\u5ea6\u5f00\u59cb\u91cf\u5316\uff0c\u5982\u679c\u6a21\u578b\u4e0d\u591f\u81ea\u4fe1\uff08\u5373softmax\u5206\u5e03\u5e73\u7f13\u67d4\u548c\uff09\uff0c\u5219\u9010\u6e10\u63d0\u9ad8\u91cf\u5316\u7cbe\u5ea6\u3002</li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#h2otoken-pruning-in-kv-cache","title":"H\u200b2\u200bO\uff1atoken pruning in KV cache","text":"<ul> <li>\u57fa\u4e8eattention\u7684\u89c2\u5bdf\uff0c\u5373\u5728\u8ba1\u7b97attention\u5206\u6570\u65f6\uff0c\u4e00\u5c0f\u90e8\u5206token\u8d21\u732e\u4e86\u5927\u90e8\u5206\u4ef7\u503c\u3002\u6211\u4eec\u5c06\u8fd9\u4e9btoken\u79f0\u4e3aheavy Hitter Tokens(\\(\u200bH_2\\)\u200b)\u3002\u901a\u8fc7\u5168\u9762\u7684\u8c03\u67e5\uff0c\u6211\u4eec\u53d1\u73b0 \\(\u200bH_2\\) \u7684\u51fa\u73b0\u662f\u81ea\u7136\u7684\uff0c\u5e76\u4e14\u4e0e\u6587\u672c\u4e2d\u6807\u8bb0\u7684\u9891\u7e41\u5171\u73b0\u5bc6\u5207\u76f8\u5173\uff0c\u5220\u9664\u5b83\u4eec\u4f1a\u5bfc\u81f4\u6027\u80fd\u663e\u7740\u4e0b\u964d\u3002</li> <li> <p>\u57fa\u4e8e\u8fd9\u4e9b\u89c1\u89e3\uff0c\u63d0\u51fa\u4e86 Heavy Hitter Oracle (\\(\u200bH_2O\\))\uff0c\u8fd9\u662f\u4e00\u79cd KV \u7f13\u5b58\u9a71\u9010\u7b56\u7565\uff08\u8d2a\u5a6a\u7b97\u6cd5\uff09\uff0c\u53ef\u52a8\u6001\u4fdd\u6301\u6700\u8fd1token\u548c \\(\u200bH_2\\)\u200b token\u7684\u5e73\u8861\u3002</p> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#efficient-inference-systems-for-llms","title":"Efficient inference systems for LLMs","text":"Important Metrics for LLM Serving <ul> <li> <p>Time To First Token (TTFT)</p> <p>Measures how quickly users begin to see model output after submitting a query.</p> <ul> <li>Crucial for real-time interactions.</li> <li>Driven by prompt processing time and the generation of the first token.</li> </ul> </li> <li> <p>Time Per Output Token (TPOT)</p> <p>Time taken to generate each output token.</p> <ul> <li>Impacts user perception of speed (e.g., 100 ms/token = 10 tokens/second, ~450 words/minute).</li> </ul> </li> <li> <p>Latency</p> <p>Latency = (TTFT) + (TPOT * the number of tokens to be generated).</p> <ul> <li>Total time to generate the complete response.</li> </ul> </li> <li> <p>Throughput</p> <p>Number of tokens generated per second across all requests by the inference server.</p> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#vllm","title":"vLLM","text":"<ul> <li> <p>\u5206\u6790KV\u9ad8\u901f\u7f13\u5b58\u4f7f\u7528\u60c5\u51b5\u4e2d\u7684\u6d6a\u8d39\uff1a</p> <ul> <li>\u5185\u90e8\u788e\u7247\uff1a\u7531\u4e8e\u672a\u77e5\u7684\u8f93\u51fa\u957f\u5ea6\u800c\u8fc7\u5ea6\u5206\u914d\u3002</li> <li>\u4fdd\u7559\uff1a\u672a\u5728\u5f53\u524d\u6b65\u9aa4\u4e2d\u4f7f\u7528\uff0c\u4f46\u5c06\u5728\u5c06\u6765\u4f7f\u7528\u3002</li> <li> <p>\u5916\u90e8\u788e\u7247\uff1a\u7531\u4e8e\u4e0d\u540c\u7684\u5e8f\u5217\u957f\u5ea6\u3002</p> <p></p> </li> </ul> </li> <li> <p>vLLM\u63d0\u51fa\u4e86Paged Attention\uff0c\u6765\u81ea\u64cd\u4f5c\u7cfb\u7edf\uff08OS\uff09\u7684\u7075\u611f\u6765\u6e90\uff1a\u865a\u62df\u5185\u5b58\u548c\u5206\u9875\u529f\u80fd\uff01</p> <ul> <li> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u5728\u6b64\u5904\u8bbe\u7f6e\u4e00\u5c42\u95f4\u63a5\u5bfb\u5740\uff0c\u7c7b\u4f3c\u4e8e\u9875\u8868\u7684\u673a\u5236\uff0c\u5e76\u5229\u7528\u8fd9\u4e2ablock table\uff0c\u5b9e\u73b0\u52a8\u6001\u5206\u914d\u3002\u6bcf\u6b21\u5206\u914d\u5757\u65f6\uff0c\u4ea7\u751f\u7684\u6700\u5927\u6d6a\u8d39\u5373\u4e3a\u5757\u7684\u5927\u5c0f\uff0c\u800c\u975e\u5728KV\u7f13\u5b58\u4e2d\u5927\u91cf\u6d6a\u8d39\u5185\u5b58\uff0c\u5c24\u5176\u662f\u5728\u4e3a\u8bf7\u6c42\u957f\u5ea6\u5404\u5f02\u7684\u591a\u4e2a\u7528\u6237\u63d0\u4f9b\u670d\u52a1\u65f6\u3002</p> <p></p> <p> + Paged Attention\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f     + \u4e0eOS\u7c7b\u4f3c\uff0c\u6709\u4e00\u4e2a\u903b\u8f91KV\u7f13\u5b58\u5757\uff0c\u4e00\u4e2a\u5757\u8868\uff0c\u4e00\u4e2a\u7269\u7406KV\u7f13\u5b58\u5757\uff0c\u4e0eOS\u7684\u865a\u62df\u5185\u5b58\u51e0\u4e4e\u4e00\u81f4\uff0c\u5757\u8868\u8d1f\u8d23\u4ece\u903b\u8f91\u5230\u7269\u7406\u7684\u6620\u5c04\uff0c\u6bcf\u4e2a\u5757\u53ef\u4ee5\u5b58\u50a84\u4e2atoken\u3002 + \u5bf9\u4e00\u4e2aPrompt\uff0c\u5b83\u5728\u903b\u8f91\u5730\u5740\u4e0a\u662f\u8fde\u7eed\u7684\uff0c\u800c\u5728\u7269\u7406\u5730\u5740\u4e0a\u662f\u53ef\u4ee5\u4e0d\u8fde\u7eed\u7684\u3002 + \u52a8\u6001\u5757\u6620\u5c04\u652f\u6301\u5728\u5e76\u884c\u91c7\u6837\u4e2d\u8fdb\u884c\u5373\u65f6\u5171\u4eab\uff0c\u5982\u4e0b\u56fe\u3002     + \u5e76\u884c\u91c7\u6837\uff1a\u6307\u5728\u7ed9\u5b9a\u63d0\u793a\u7684\u60c5\u51b5\u4e0b\u9884\u6d4b\u672a\u6765\uff0c\u8fd9\u4e9b\u9884\u6d4b\u53ef\u4ee5\u5728\u4e0d\u540c\u7684\u5e8f\u5217\u95f4\u5171\u4eab\u3002</p> <p></p> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#streamingllm","title":"StreamingLLM","text":"<ul> <li> <p>\u5728\u6d41\u5a92\u4f53\u5e94\u7528\u7a0b\u5e8f\u4e2d\u8feb\u5207\u9700\u8981llm\uff0c\u5982\u591a\u8f6e\u5bf9\u8bdd\uff0c\u5176\u4e2d\u9700\u8981\u957f\u65f6\u95f4\u7684\u4ea4\u4e92\u3002</p> <ul> <li>\u6311\u6218\uff1a\u9996\u5148\uff0c\u5728\u89e3\u7801\u9636\u6bb5\uff0c\u7f13\u5b58\u5148\u524dtokens\u7684\u952e\u548c\u503c\u72b6\u6001\uff08KV\uff09\u4f1a\u6d88\u8017\u5927\u91cf\u5185\u5b58\u3002\u5176\u6b21\uff0c\u6d41\u884c\u7684LLMs\u65e0\u6cd5\u6cdb\u5316\u5230\u8d85\u51fa\u8bad\u7ec3\u5e8f\u5217\u957f\u5ea6\u7684\u66f4\u957f\u6587\u672c\u3002</li> </ul> </li> <li> <p>\u4e09\u79cd\u73b0\u6709\u65b9\u6cd5\u7684\u4e0d\u8db3\u4e4b\u5904</p> <ul> <li>\u5bc6\u96c6\u6ce8\u610f\u529b\uff1a\u5177\u6709O(T2)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u4e0d\u65ad\u589e\u52a0\u7684\u7f13\u5b58\u5927\u5c0f\u3002\u5f53\u9884\u6d4b\u6587\u672cT\u8fdc\u8fdc\u5927\u4e8e\u9884\u8bad\u7ec3\u6587\u672c\u957f\u5ea6L\uff08T&gt;&gt;L\uff09,\u56f0\u60d1\u5ea6\u4e0a\u5347\u6027\u80fd\u4e0b\u964d\u3002\u6df1\u84dd\u8272\u65b9\u5757\u662f\u4e0d\u505c\u65b0\u589etoken\u8ba1\u7b97\u6ce8\u610f\u529b\uff0c\u91cd\u65b0\u8ba1\u7b97softmax, \u7136\u540ecache\u5230\u5185\u5b58\u4e2d(\u6d45\u84dd\u8272\u65b9\u5757)\u3002\u76f4\u8fbe\u8fbe\u5230L\u662f\u65b0\u4e00\u4e2atoken\u5c31\u4f1a\u5f00\u59cb\u6548\u679c\u53d8\u5dee\u3002\u7b80\u5355\u601d\u60f3\u53ef\u4ee5\u7406\u89e3\u53ea\u9700\u8981\u8ba1\u7b97\u6df1\u84dd\u8272score\u6240\u5728\u884c\uff0ccache\u6d45\u84dd\u8272\u540e\uff0csoftmax\u91cd\u65b0\u66f4\u65b0\u5f53\u524dtoken\u5411\u91cf(\u6700\u540e\u4e00\u884c)</li> <li>\u7a97\u53e3\u6ce8\u610f\u529b\uff1a\u53ea\u7ef4\u62a4\u6700\u65b0\u7684token\u7684KV\u72b6\u6001\u7684\u56fa\u5b9a\u5927\u5c0f\u7684\u6ed1\u52a8\u7a97\u53e3\u3002\u95ee\u9898\u5f88\u660e\u663e\u867d\u7136\u5728\u7f13\u5b58\u6700\u521d\u586b\u6ee1\u540e\u786e\u4fdd\u4e86\u6052\u5b9a\u7684\u5185\u5b58\u4f7f\u7528\u548c\u89e3\u7801\u901f\u5ea6\uff0c\u4f46\u4e00\u65e6\u5e8f\u5217\u957f\u5ea6\u8d85\u8fc7\u7f13\u5b58\u5927\u5c0f\uff0c\u5373\u4f7f\u53ea\u662f\u9010\u51fa\u7b2c\u4e00\u4e2atoken\u7684KV\uff0c\u6a21\u578b\u4e5f\u4f1a\u5d29\u6e83\u3002</li> <li> <p>\u91cd\u65b0\u8ba1\u7b97\u6ed1\u52a8\u7a97\u53e3\uff1a\u53d1\u653e\u4e3a\u6bcf\u4e2a\u751f\u6210\u7684token\u91cd\u5efa\u6700\u65b0token\u7684KV\u72b6\u6001\uff08\u8fd9\u6837\u4e00\u76f4\u4fdd\u6301\u6709\u521d\u59cbtoken\uff09\u3002\u867d\u7136\u5b83\u5728\u957f\u6587\u672c\u4e0a\u8868\u73b0\u826f\u597d\uff0c\u4f46\u5b83\u7684O(T*L2)\u590d\u6742\u6027(\u6e90\u4e8e\u4e0a\u4e0b\u6587\u91cd\u65b0\u8ba1\u7b97\u4e2d\u7684\u4e8c\u6b21\u6ce8\u610f\u529b)\u4f7f\u5f97\u5b83\u76f8\u5f53\u6162\uff08\u6d41\u5e94\u7528\u65f6\u4e0d\u884c\uff09\u3002</p> <p></p> </li> </ul> </li> <li> <p>Attention Sink\u6ce8\u610f\u529b\u6c47\u805a\u73b0\u8c61</p> <ul> <li>\u521d\u59cbtoken\u6709\u5f88\u5927\u7684\u6ce8\u610f\u529b\u5206\u6570\uff0c\u5373\u4f7f\u5b83\u4eec\u5728\u8bed\u4e49\u4e0a\u5e76\u4e0d\u663e\u8457\uff0c\u6211\u4eec\u79f0\u5176\u4e3a\u6ce8\u610f\u529b\u6c47\u805a\u70b9\u3002</li> <li>\u80cc\u540e\u7684\u539f\u7406--Softmax<ul> <li>SoftMax\u64cd\u4f5c\u5728\u521b\u5efaAttention Sink\u65b9\u9762\u7684\u4f5c\u7528\u2014\u2014\u6240\u6709\u4e0a\u4e0b\u6587\u4ee4\u724c\u7684\u6ce8\u610f\u529b\u5206\u6570\u5fc5\u987b\u5408\u8ba1\u4e3a1\u3002</li> <li>\u521d\u59cbtoken\u5bf9\u4e8esink\u73b0\u8c61\u7684\u63a8\u52a8\uff0c\u662f\u7531\u4e8e\u5b83\u4eec\u5bf9\u540e\u7eed\u6807\u8bb0\u7684\u53ef\u89c1\u6027\uff0c\u6839\u6e90\u4e8e\u81ea\u56de\u5f52\u8bed\u8a00\u5efa\u6a21\uff0c\u5bfc\u81f4\u540e\u7eed\u6240\u6709token\u90fd\u4f1a\u5173\u6ce8\u7b2c\u4e00\u4e2atoken\u3002</li> <li>\u7531\u4e8esoftmax\u5fc5\u987b\u6c42\u548c\u4e3a1\uff0c\u5982\u679c\u67d0\u4e2a\u90e8\u5206\u4e0d\u592a\u76f8\u5173\uff0c\u795e\u7ecf\u7f51\u7edc\u5c31\u4f1a\u51b3\u5b9a\u5c06\u6240\u6709\u6ce8\u610f\u529b\u5206\u6570\u96c6\u4e2d\u5230\u7b2c\u4e00\u4e2a\u6807\u8bb0\u4e0a\u3002</li> <li> <p>\u521d\u59cbtoken\u7684\u91cd\u8981\u6027\u662f\u6765\u81ea\u4e8e\u5b83\u4eec\u7684\u4f4d\u7f6e\u8fd8\u662f\u5b83\u4eec\u7684\u8bed\u4e49\uff1f</p> <ul> <li>\u6211\u4eec\u53d1\u73b0\u5728\u524d\u9762\u6dfb\u52a0\u521d\u59cb\u56db\u4e2a\u201c\\n\u201d\uff0c\u4e5f\u4f1a\u6709\u5f88\u5927\u7684\u6ce8\u610f\u529b\u5206\u6570\u3002</li> <li>\u56e0\u6b64\uff0c\u5b83\u4eec\u7684\u4f4d\u7f6e\u66f4\u91cd\u8981\uff0c\u8bed\u4e49\u65e0\u5173\u3002</li> </ul> <p></p> </li> </ul> </li> </ul> </li> <li> <p>StreamingLLM\u5173\u952e\u601d\u60f3\uff1a\u59cb\u7ec8\u5982\u4e00\u5730\u91cd\u65b0\u6dfb\u52a0\u7b2c\u4e00\u5217\uff0c\u59cb\u7ec8\u4fdd\u6301\u6ce8\u610f\u529b\u540c\u6b65\uff0c\u968f\u540e\u518d\u5bf9\u6ce8\u610f\u529b\u8fdb\u884c\u7a97\u53e3\u5316\u5904\u7406\u3002</p> <p></p> </li> <li> <p>\u7531\u4e8e\u56fa\u5b9a\u4e86\u521d\u59cbtoken\u5728\u9ad8\u901f\u7f13\u5b58\u4e2d\uff0c\u56e0\u6b64\u9700\u8981\u91cd\u65b0\u8fdb\u884c\u4f4d\u7f6e\u7f16\u7801\u3002</p> <ul> <li>\u4f7f\u7528\u9ad8\u901f\u7f13\u5b58\u4e2d\u7684\u4f4d\u7f6e\uff0c\u800c\u4e0d\u662f\u539f\u59cb\u6587\u672c\u4e2d\u7684\u4f4d\u7f6e\uff08\u7edd\u5bf9\u4f4d\u7f6e\uff09\u3002</li> </ul> <p></p> </li> <li> <p>\u6027\u80fd\u6bd4\u8f83</p> <ul> <li>\u6bd4\u8f83dense attention, window attention, and sliding window w/ re-computation\u3002</li> <li>StreamingLLM\u663e\u793a\u51fa\u7a33\u5b9a\u7684\u6027\u80fd\uff1b\u56f0\u60d1\u63a5\u8fd1\u6ed1\u52a8\u7a97\u53e3\u4e0e\u91cd\u65b0\u8ba1\u7b97\u57fa\u7ebf\u3002</li> <li> <p>\u4ece\u7b2c\u4e00\u5e45\u56fe\u53ef\u4ee5\u770b\u51fasliding window w/ re-computation\u548cStreamingLLM\u90fd\u6709\u4e0d\u9519\u7684\u56f0\u60d1\u5ea6\uff0c\u4f46\u662fsliding window w/ re-computation\u8ba1\u7b97\u590d\u6742\u5ea6\u5f88\u9ad8\uff0c\u4ece\u7b2c\u4e8c\u5e45\u56fe\u53ef\u4ee5\u770b\u51fa\u5ef6\u8fdf\u63d0\u9ad8\u4e8622.2\u00d7\u3002</p> <p></p> <p></p> </li> </ul> </li> <li> <p>Why 4 attention sinks?</p> <ul> <li>\u5728\u6240\u6709\u8bad\u7ec3\u6837\u672c\u5f00\u59cb\u65f6\u5f15\u5165\u4e00\u4e2a\u989d\u5916\u7684\u53ef\u5b66\u4e60token\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u4e13\u95e8\u7684attention sink\u3002</li> <li> <p>\u8fd9\u4e2a\u9884\u5148\u8bad\u7ec3\u8fc7\u7684\u6a21\u578b\u5728\u53ea\u4f7f\u7528\u8fd9\u4e2a\u5355\u4e2asink token\u7684\u6d41\u5a92\u4f53\u60c5\u51b5\u4e0b\u4fdd\u6301\u4e86\u6027\u80fd\uff0c\u8fd9\u4e0e\u9700\u8981\u591a\u4e2a\u521d\u59cb\u4ee4\u724c\u7684\u666e\u901a\u6a21\u578b\u5f62\u6210\u4e86\u5bf9\u6bd4\u3002</p> <p></p> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#flashattention","title":"FlashAttention","text":"<ul> <li>\u4f7f\u7528\u5e73\u94fa\u6765\u9632\u6b62\u5927\u578b\ud835\udc41\u00d7\ud835\udc41\u6ce8\u610f\u77e9\u9635\u7684\u7269\u5316\uff08\u6307\u5b9e\u9645\u5b58\u50a8\u5728HBM\u4e2d\uff09\uff0c\u4ece\u800c\u907f\u514d\u4f7f\u7528\u7f13\u6162\u7684HBM\uff1b\u5185\u6838\u878d\u5408\u3002</li> <li> <p>\u5982\u4e0b\u56fe\u4e2d\uff0c\u5c06QKV\u5b9e\u65f6\u8ba1\u7b97\u90e8\u5206\u5728SRAM\u4e2d\u6267\u884c\uff0c\u800c\u7eff\u8272\u90e8\u5206\u7684\u6570\u636e\u5b58\u50a8\u5728HBM\u4e2d\uff0c\u4e14\u8f93\u51fa\u5230HBM\u4e2d\u3002\u5b83\u53ef\u4ee5\u663e\u8457\u7684\u63d0\u9ad8\u901f\u5ea6\u3002</p> <p></p> </li> <li> <p>\u4e0b\u56fe\u5c55\u793a\u4e86\u65e0\u56e0\u679c\u63a9\u7801\u548c\u6709\u56e0\u679c\u63a9\u7801\u65f6\u7684\u901f\u5ea6\u5bf9\u6bd4\u3002</p> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#speculative-decoding","title":"Speculative decoding\u968f\u673a\u91c7\u6837","text":"<ul> <li>LLM\u7684\u89e3\u7801\u9636\u6bb5\u901a\u8fc7\u4ee4\u724c\u751f\u6210\u8f93\u51fa\u4ee4\u724c\uff0c\u8fd9\u662f\u9ad8\u5ea6\u5185\u5b58\u9650\u5236(memory bound)\u7684\uff08\u7279\u522b\u662f\u5728\u5c0f\u6279\u5904\u7406\u5927\u5c0f\u65f6\uff09\u3002</li> <li>\u5728\u63a8\u6d4b\u89e3\u7801\u4e2d\u6709\u4e24\u79cd\u6a21\u578b\uff1a<ul> <li>Draft\u6a21\u578b\uff1a\u4e00\u4e2a\u5c0f\u578bLLM\uff08\u4f8b\u5982\uff0c7B\uff0c\u6bd4\u539f\u59cb\u76ee\u6807\u6a21\u578b\u5c0f\u5f97\u591a\u7684\u8fd1\u4f3c\u6a21\u578b\uff09</li> <li>Target\u6a21\u578b\uff1a\u4e00\u4e2a\u5927\u578bLLM\uff08\u4f8b\u5982\uff0c175B\uff0c\u6211\u4eec\u6b63\u5728\u8bd5\u56fe\u52a0\u901f\u7684\u90a3\u4e2a\u539f\u59cb\u76ee\u6807\u6a21\u578b\uff09</li> </ul> </li> <li> <p>\u8fc7\u7a0b\uff1a</p> <ul> <li>\u8349\u6848\u6a21\u578b\u5c06\u81ea\u52a8\u56de\u5f52\u89e3\u7801token\u3002</li> <li>\u5c06\u751f\u6210\u7684token\u5e76\u884c\u8f93\u5165\u76ee\u6807\u6a21\u578b\uff0c\u5e76\u5f97\u5230\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u9884\u6d4b\u6982\u7387\u3002</li> <li> <p>\u51b3\u5b9a\u6211\u4eec\u662f\u60f3\u4fdd\u7559\u4ee4\u724c\u8fd8\u662f\u62d2\u7edd\u5b83\u4eec\u3002</p> <p></p> </li> </ul> </li> <li> <p>\u4e0b\u56fe\u5c55\u793a\u968f\u673a\u91c7\u6837\u7684\u5de5\u4f5c\u65b9\u5f0f\u3002\u4e0b\u56fe\u4e2d\uff0c\u6bcf\u4e00\u884c\u4ee3\u8868\u4e00\u6b21\u8fed\u4ee3\u3002\u7eff\u8272\u7684\u6807\u8bb0\u662f\u7531\u8fd1\u4f3c\u6a21\u578b\u63d0\u51fa\u7684token\u5efa\u8bae\uff0c\u800c\u76ee\u6807\u6a21\u578b\u5224\u65ad\u662f\u5426\u63a5\u53d7\u4e86\u8fd9\u4e9btoken\u751f\u6210\u7684\u5efa\u8bae\u3002\u7ea2\u8272\u548c\u84dd\u8272\u7684\u6807\u8bb0\u5206\u522b\u8868\u793a\u88ab\u62d2\u7edd\u548c\u5176\u4fee\u6b63\u3002</p> <ul> <li>\u4f8b\u5982\u7b2c\u4e00\u884c\uff0c\u5c0f\u6a21\u578b\u751f\u6210\u7684'bond'\u88ab\u5927\u6a21\u578b\u62d2\u7edd\uff0c\u5e76\u7ed9\u51fa\u5efa\u8bae'n'\u3002</li> <li>\u7b2c\u4e8c\u884c\u4e2d\uff0c\u5c0f\u6a21\u578b\u751f\u6210'nikkei 22'\uff0c\u88ab\u5927\u6a21\u578b\u63a5\u53d7\u3002</li> <li> <p>\u4ee5\u6b64\u7c7b\u63a8\uff0c\u7531\u4e8e\u7528\u5927\u6a21\u578b\u5bf9\u8f93\u5165\u5e8f\u5217\u5e76\u884c\u5730\u6267\u884c\uff0c\u5927\u6a21\u578b\u53eaforward\u4e869\u6b21\uff0c\u5c31\u751f\u6210\u4e8637\u4e2atokens\u3002\u5c3d\u7ba1\u603b\u7684\u5927\u6a21\u578b\u7684\u8ba1\u7b97\u91cf\u4e0d\u53d8\uff0c\u4f46\u662f\u5927\u6a21\u578b\u63a8\u7406\u4e00\u4e2a1\u4e2atoken\u548c5\u4e2atoken\u5ef6\u8fdf\u7c7b\u4f3c\uff0c\u8fd9\u8fd8\u662f\u6bd4\u5927\u6a21\u578b\u4e00\u4e2a\u4e00\u4e2a\u8e66\u8bcd\u7684\u901f\u5ea6\u8981\u5feb\u5f88\u591a\u3002</p> <p></p> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#batching","title":"Batching","text":"<ul> <li>Why Batching?     Running multiple inputs simultaneously maximizes throughput by fully utilizing the GPU resources, avoiding idle time.</li> </ul>"},{"location":"self_learn/efficientml/deploy/#no-batching","title":"No Batching","text":"<ul> <li>Each request processed individually.</li> <li>Leads to underutilization of GPU resources.</li> </ul>"},{"location":"self_learn/efficientml/deploy/#static-batching","title":"Static Batching","text":"<ul> <li>Waits for a full batch of requests before processing.</li> <li>Good for scheduled tasks (can be processed offline).</li> <li>Increases the latency for online tasks.</li> </ul>"},{"location":"self_learn/efficientml/deploy/#dynamic-batching","title":"Dynamic Batching","text":"<ul> <li>Batches are processed when full or after a set time delay.</li> <li> <p>Balances throughput and latency.</p> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#continuous-batching-aka-in-flight-batching","title":"Continuous Batching (a.k.a., In-Flight Batching)","text":"<ul> <li>Processes requests token-by-token.</li> <li>Ideal for LLMs.</li> <li> <p>Improves GPU utilization by eliminating idle time waiting for the longest response.</p> <p></p> </li> </ul> <p>\u6709\u70b9\u7c7b\u4f3c\u4e8e\u6d41\u6c34\u7ebf</p>"},{"location":"self_learn/efficientml/deploy/#efficient-fine-tuning-for-llms","title":"Efficient fine-tuning for LLMs","text":""},{"location":"self_learn/efficientml/deploy/#lora","title":"LoRA","text":"<ul> <li> <p>\u300aLoRA: Low-Rank Adaptation of Large Language Models\u300b (Hu et al., 2021)</p> </li> <li> <p>\u5927\u578b\u8bed\u8a00\u6a21\u578b/\u6269\u6563\u6a21\u578b\u7684\u4f4e\u79e9\u81ea\u9002\u5e94\uff08Low-rank adaptation\uff09</p> </li> <li> <p>\u6838\u5fc3\u601d\u60f3\uff1a\u4e0e\u5176\u66f4\u65b0\u5b8c\u6574\u7684\u6a21\u578b\u6743\u91cd\uff0c\u4e0d\u5982\u66f4\u65b0\u4e00\u4e2a\u5c0f\u7684\u4f4e\u79e9\u7ec4\u4ef6\u3002</p> </li> <li> <p>\u4f18\u52bf\uff1a</p> <ul> <li>\u901a\u8fc7\u8df3\u8fc7\u68af\u5ea6\u8ba1\u7b97\u6765\u52a0\u5feb\u5fae\u8c03\u901f\u5ea6\u3002</li> <li>\u901a\u8fc7\u51cf\u5c11optimizer\u7684\u72b6\u6001\u6765\u8282\u7701\u5fae\u8c03\u5185\u5b58\u3002</li> <li>\u9632\u6b62\u707e\u96be\u6027\u9057\u5fd8\u3002</li> <li>\u4f4e\u79e9\u7684\u6743\u503c\u53ef\u4ee5\u88ab\u878d\u5408\u3002</li> </ul> </li> <li> <p>\u4e0b\u56fe\u4e3a\u5bf9GPT-3\u4f7f\u7528\u51e0\u79cd\u5fae\u8c03\u65b9\u6cd5\u540e\uff0c\u53c2\u6570\u5927\u5c0f\u548c\u51c6\u786e\u6027\u7684\u6548\u679c\u56fe\uff1a</p> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#qlora","title":"QLoRA","text":"<ul> <li> <p>\u300aQLORA: Efficient Finetuning of Quantized LLMs\u300b (Dettmers et al., 2023)</p> </li> <li> <p>QLoRA\u662f\u4e00\u79cd\u65b0\u7684\u5fae\u8c03\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u65b9\u6cd5\uff0c\u5b83\u80fd\u591f\u5728\u8282\u7701\u5185\u5b58\u7684\u540c\u65f6\u4fdd\u6301\u901f\u5ea6\u3002\u5176\u5de5\u4f5c\u539f\u7406\u662f\u9996\u5148\u5c06LLM\u8fdb\u884c4\u4f4d\u91cf\u5316\uff0c\u4ece\u800c\u663e\u8457\u51cf\u5c11\u6a21\u578b\u7684\u5185\u5b58\u5360\u7528\u3002\u63a5\u7740\uff0c\u4f7f\u7528\u4f4e\u9636\u9002\u914d\u5668\uff08LoRA\uff09\u65b9\u6cd5\u5bf9\u91cf\u5316\u7684LLM\u8fdb\u884c\u5fae\u8c03\u3002LoRA\u4f7f\u5f97\u6539\u8fdb\u540e\u7684\u6a21\u578b\u80fd\u591f\u4fdd\u7559\u539f\u59cbLLM\u7684\u5927\u90e8\u5206\u51c6\u786e\u6027\uff0c\u540c\u65f6\u5177\u6709\u66f4\u5c0f\u7684\u4f53\u79ef\u548c\u66f4\u5feb\u7684\u901f\u5ea6\u3002</p> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/deploy/#adapter","title":"Adapter","text":""},{"location":"self_learn/efficientml/deploy/#real-implementation-tensorrt-llm-public-release","title":"Real implementation: TensorRT-LLM Public Release","text":""},{"location":"self_learn/efficientml/kd/","title":"Knowledge Distillation (lec9)","text":""},{"location":"self_learn/efficientml/kd/#_1","title":"\u5b9a\u4e49","text":"<ul> <li> <p>\u5b9a\u4e49\uff1a\u77e5\u8bc6\u84b8\u998f\u662f\u4e00\u79cd\u4ece\u4e00\u4e2a\u66f4\u5927\u7684\u6a21\u578b\u4e2d\u5b66\u4e60\u7684\u8fc7\u7a0b\uff0c\u65e8\u5728\u5c06\u591a\u4e2a\u6a21\u578b\u7684\u77e5\u8bc6\u84b8\u998f\u5230\u4e00\u4e2a\u66f4\u5c0f\u7684\u6a21\u578b\u4e2d\u3002\u8fd9\u79cd\u65b9\u6cd5\u7684\u5173\u952e\u662f\u5c06\u5927\u6a21\u578b\u7684\u77e5\u8bc6\u4f20\u9012\u7ed9\u5c0f\u6a21\u578b\uff0c\u4ece\u800c\u521b\u5efa\u53ef\u4ee5\u5728\u8fb9\u7f18\u8bbe\u5907\u4e0a\u4f7f\u7528\u7684\u66f4\u5c0f\u6a21\u578b\u3002</p> </li> <li> <p>\u66f4\u5927\u66f4\u590d\u6742\u7684\u6a21\u578b\u4f5c\u4e3a\u6559\u5e08\u7f51\u7edc\uff0c\u800c\u66f4\u5c0f\u66f4\u7b80\u5355\u7684\u6a21\u578b\u4f5c\u4e3a\u5b66\u751f\u6a21\u578b\u3002\u5b66\u751f\u6a21\u578b\u901a\u8fc7\u77e5\u8bc6\u84b8\u998f\u6765\u5b66\u4e60\u6559\u5e08\u6a21\u578b\u7684\u903b\u8f91\uff0c\u63a5\u8fd1\u5176\u7c7b\u6982\u7387\u5206\u5e03\uff0c\u4ee5\u8fbe\u5230\u5728\u51c6\u786e\u6027\u4e0a\u63a5\u8fd1\u6559\u5e08\u6a21\u578b\u3002</p> </li> </ul> <p></p> <ul> <li> <p>\u77e5\u8bc6\u84b8\u998f\u4e2d\u5f15\u5165\u4e86\u6e29\u5ea6T\u7684\u6982\u5ff5</p> <ul> <li>\u539f\u672c\u903b\u8f91\u548c\u5206\u7c7b\u6982\u7387\u7684\u5173\u7cfb\u5982\u4e0b \\(\u200bp(z_i\u200b)=exp(z_i\u200b)/\\sum_j\u200bexp(z_j\u200b)\\)</li> <li>\u5f15\u5165\u6e29\u5ea6T\u540e\uff0c\\(\u200bp(z_i\u200b,T)=exp(z_i\u200b/T)/\\sum_j\u200bexp(z_j\u200b/T)\\)</li> <li> <p>\u6e29\u5ea6T\u901a\u5e38\u8bbe\u7f6e\u4e3a1\u3002</p> <p></p> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/nas/","title":"NAS (lec7-8)","text":""},{"location":"self_learn/efficientml/nas/#primitive-operations","title":"Primitive operations","text":"<p>\u4e0d\u540c\u5c42\u7684MAC(multiply accumulation)\u8ba1\u7b97</p> <p></p>"},{"location":"self_learn/efficientml/nas/#classic-building-blocks","title":"Classic Building Blocks","text":"<p>\u6784\u5efa\u6a21\u5757\u7531\u82e5\u5e72\u5c42\u7ec4\u6210\uff0c\u4eba\u4eec\u5de7\u5999\u5730\u5c06\u5b83\u4eec\u7ec4\u5408\u8d77\u6765\uff0c\u4ee5\u5e73\u8861\u51c6\u786e\u6027\u4e0e\u8ba1\u7b97\u91cf\u3002</p>"},{"location":"self_learn/efficientml/nas/#resnet50-bottleneck-block","title":"ResNet50: bottleneck block","text":"<ul> <li>ResNet50\u7531\u4e09\u5c42\u6784\u6210\uff0c\u9996\u5c3e\u4e24\u4e2a \\(1\\times1\\) \u5c42\u548c\u4e2d\u95f4\u4e00\u4e2a \\(3\\times3\\) \u5c42\u3002</li> </ul> <p>\u95ee\uff1a\u4e3a\u4ec0\u4e48\u4e0d\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a 3\u00d73 \u5c31\u884c\uff1f \u7b54\uff1a\u76f8\u540c\u901a\u9053\u6570\u7684 1\u00d71 \u5c42\u548c\u4e00\u4e2a 3\u00d73 \u5c42\uff0cFLOPs\u76f8\u5dee\u4e5d\u500d\u3002\u56e0\u6b64\u4f7f\u7528\u4e24\u4e2a 1\u00d71 \u5c42\u5728\u9996\u5c3e\u53ef\u4ee5\u51cf\u5c11\u901a\u9053\u6570\uff0c\u4ee5\u964d\u4f4eMAC\u6570\u91cf\u3002\u5982\u4e0b\u56fe\u8ba1\u7b97\uff0c\u8fd9\u79cd\u8bbe\u8ba1\u76f8\u6bd4\u76f4\u63a5\u4f7f\u7528\u4e00\u4e2a 3\u00d73 \u5c42\u8ba1\u7b97\u91cf\u53ef\u4ee5\u51cf\u5c0f8.5\u500d\u3002</p> <p></p>"},{"location":"self_learn/efficientml/nas/#resnext-grouped-convolution","title":"ResNeXt: grouped convolution","text":"<ul> <li>\u7528 3\u00d73 \u5206\u7ec4\u5377\u79ef\u66ff\u6362 3\u00d73 \u5377\u79ef\u3002</li> <li>ResNeXt\u7684\u5173\u952e\u601d\u60f3\u662f\u7528\u4e00\u4e2a\u79f0\u4e3a\u201c\u57fa\u6570\u74f6\u9888\u201d\u7684\u65b0\u6a21\u5757\u66ff\u6362ResNet\u4e2d\u7684\u74f6\u9888\u8bbe\u8ba1\u3002\u8be5\u6a21\u5757\u5f15\u5165\u4e86\u4e00\u4e2a\u540d\u4e3a\u201c\u57fa\u6570\u201d\u7684\u65b0\u7ef4\u5ea6\uff0c\u8868\u793a\u7f51\u7edc\u4e2d\u7684\u5e76\u884c\u8def\u5f84\u6570\u91cf\u3002</li> <li>\u57fa\u6570\u74f6\u9888\u6a21\u5757\u5305\u542b\u591a\u4e2a\u5e76\u884c\u7684\u8def\u5f84\uff0c\u6bcf\u4e2a\u8def\u5f84\u7531\u4e00\u7ec4\u5377\u79ef\u5c42\u7ec4\u6210\u3002\u8fd9\u4e9b\u5e76\u884c\u8def\u5f84\u6355\u6349\u8f93\u5165\u6570\u636e\u7684\u4e0d\u540c\u65b9\u9762\uff0c\u5e76\u4f7f\u6a21\u578b\u80fd\u591f\u5b66\u4e60\u66f4\u591a\u6837\u5316\u548c\u7ec6\u7c92\u5ea6\u7684\u7279\u5f81\u3002\u7136\u540e\uff0c\u901a\u8fc7\u6c42\u548c\u6216\u8fde\u63a5\u8fd9\u4e9b\u8def\u5f84\u7684\u8f93\u51fa\uff0c\u63d0\u4f9b\u66f4\u5168\u9762\u7684\u8f93\u5165\u8868\u793a</li> </ul>"},{"location":"self_learn/efficientml/nas/#mobilenet-depthwise-separable-block","title":"MobileNet: depthwise-separable block","text":"<ul> <li>\u4eba\u4eec\u8bbe\u8ba1\u4e86MobileNet\uff0c\u65e8\u5728\u5c06\u8fd9\u4e9b\u795e\u7ecf\u7f51\u7edc\u90e8\u7f72\u5728\u624b\u673a\u548c\u79fb\u52a8\u8bbe\u5907\u4e0a\uff0c\u5176\u4e2d\u8981\u6c42\u6a21\u578b\u53c2\u6570\u6570\u91cf\u8f83\u5c11\u3002</li> <li>MobileNet\u5f15\u5165\u4e86\u6df1\u5ea6\u53ef\u5206\u79bb\u5377\u79ef\uff0c\u8fd9\u662f\u5206\u7ec4\u5377\u79ef\u7684\u4e00\u79cd\u6781\u7aef\u60c5\u51b5\uff0c\u5373\u5206\u7ec4\u6570\u7b49\u4e8e\u8f93\u5165\u901a\u9053\u7684\u6570\u91cf\u3002</li> <li> <p>MobileNet\u901a\u8fc7\u5c06\u6807\u51c6\u7684\u5377\u79ef\u64cd\u4f5c\u5206\u89e3\u4e3a\u4e24\u4e2a\u72ec\u7acb\u7684\u6b65\u9aa4\u6765\u51cf\u5c11\u53c2\u6570\u91cf\u548c\u8ba1\u7b97\u91cf\uff1a</p> <ul> <li>\u6df1\u5ea6\u5377\u79ef\uff08depthwise convolution\uff09\uff1a\u5728\u6bcf\u4e2a\u8f93\u5165\u901a\u9053\u4e0a\u5e94\u7528\u4e00\u4e2a\u72ec\u7acb\u7684\u5377\u79ef\u6838\uff0c\u8fd9\u6837\u53ef\u4ee5\u6709\u6548\u5730\u6355\u6349\u8f93\u5165\u6570\u636e\u7684\u7a7a\u95f4\u7279\u5f81\u3002\u8fd9\u4e00\u6b65\u9aa4\u5728\u4e0d\u5f15\u5165\u989d\u5916\u53c2\u6570\u7684\u60c5\u51b5\u4e0b\uff0c\u5b9e\u73b0\u4e86\u53c2\u6570\u5171\u4eab\u548c\u7279\u5f81\u63d0\u53d6\u3002</li> <li>\u9010\u70b9\u5377\u79ef\uff08pointwise convolution\uff09\uff1a\u5728\u6bcf\u4e2a\u4f4d\u7f6e\u4e0a\u5e94\u7528\u4e00\u4e2a1x1\u7684\u5377\u79ef\u6838\uff0c\u7528\u6765\u5c06\u6df1\u5ea6\u5377\u79ef\u7684\u8f93\u51fa\u7279\u5f81\u8fdb\u884c\u7ebf\u6027\u7ec4\u5408\uff0c\u5f97\u5230\u6700\u7ec8\u7684\u8f93\u51fa\u7279\u5f81\u3002\u9010\u70b9\u5377\u79ef\u4e3b\u8981\u7528\u6765\u8fdb\u884c\u7279\u5f81\u878d\u5408\u548c\u964d\u4f4e\u7279\u5f81\u7684\u7ef4\u5ea6\u3002</li> </ul> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/nas/#mobilenetv2-inverted-bottleneck-block","title":"MobileNetV2: inverted bottleneck block","text":"<ul> <li>\u7531\u4e8e 3\u00d73 \u7684\u6df1\u5ea6\u5377\u79ef\u5bb9\u91cf\u4e0d\u8db3\uff0c\u4e3a\u4e86\u8865\u507f\u5bb9\u91cf\uff0c\u5fc5\u987b\u589e\u52a0\u901a\u9053\u6570\u91cf\uff0c\u56e0\u6b64MobileNetV2\u91c7\u7528\u4e00\u4e2a\u6269\u5f20\u5377\u79ef\u3002</li> <li>MobileNetV2\u7684\u5404\u5c42\u5982\u4e0b\uff1a<ul> <li>Expansion layer\uff08\u6269\u5f20\u5c42\uff09\uff1a\u8be5\u5c42\u4f7f\u7528 \\(1\\times1\\) \u7684\u9010\u70b9\u5377\u79ef\u6765\u6269\u5c55\u901a\u9053\u6570\u91cf\u3002\u8fd9\u4e2a\u6b65\u9aa4\u6709\u52a9\u4e8e\u589e\u52a0\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\u548c\u975e\u7ebf\u6027\u80fd\u529b\u3002</li> <li>Depthwise convolution layer\uff08\u6df1\u5ea6\u5377\u79ef\u5c42\uff09\uff1a\u8be5\u5c42\u4f7f\u7528depthwise convolution\u6765\u5bf9\u7279\u5f81\u8fdb\u884c\u7a7a\u95f4\u4e0a\u7684\u5377\u79ef\uff0c\u4ee5\u51cf\u5c11\u8ba1\u7b97\u91cf\u3002depthwise convolution\u4f1a\u5bf9\u6bcf\u4e2a\u8f93\u5165\u901a\u9053\u5355\u72ec\u8fdb\u884c\u5377\u79ef\u64cd\u4f5c\uff0c\u7136\u540e\u518d\u901a\u8fc7\u9010\u70b9\u5377\u79ef\u5c06\u901a\u9053\u8fdb\u884c\u6574\u5408\u3002</li> <li>Pointwise convolution layer\uff08\u9010\u70b9\u5377\u79ef\u5c42\uff09\uff1a\u8be5\u5c42\u4f7f\u7528 \\(1\\times1\\) \u7684\u9010\u70b9\u5377\u79ef\u6765\u8fdb\u884c\u901a\u9053\u7684\u964d\u7ef4\u3002\u8fd9\u4e2a\u6b65\u9aa4\u6709\u52a9\u4e8e\u51cf\u5c11\u8ba1\u7b97\u91cf\u548c\u6a21\u578b\u53c2\u6570\u7684\u6570\u91cf\u3002</li> </ul> </li> <li>\u4e0e\u4ec5\u4f7f\u7528\u4e00\u5c42 \\(3\\times3\\) \u5377\u79ef\u7684\u60c5\u51b5\u8fdb\u884c\u6bd4\u8f83\uff0cMACs\u548cParams\u6570\u91cf\u90fd\u6709\u6240\u589e\u52a0(1 : 1.37)\u3002\u56e0\u6b64\u4eba\u4eec\u53d1\u73b0\u4e0e\u5176\u4f7f\u7528\u4e09\u5c42\u7ed3\u6784\uff0c\u9700\u8981\u8bb0\u5fc6\u4e09\u79cd\u4e0d\u540c\u7684\u6fc0\u6d3b\u51fd\u6570\uff0c\u4e0d\u5982\u4ec5\u91c7\u7528\u4e00\u4e2a\u5355\u4e00\u7684\u5bc6\u96c6\u5c42\uff0c\u5373\u5e38\u89c4\u7684 \\(3\\times3\\) \u5377\u79ef\u3002</li> </ul> <ul> <li>\u968f\u7740GPU\u6216DSP\u7b49\u9ad8\u5e76\u884c\u786c\u4ef6\u7684\u53d1\u5c55\uff0c\u6df1\u5ea6\u5377\u79ef\u7684\u4f7f\u7528\u8d8a\u6765\u8d8a\u5c11\u3002\u5e38\u89c4\u7684 3\u00d73 \u5377\u79ef\u6709\u65f6\u66f4\u52a0\u9ad8\u6548\uff0c\u5b83\u80fd\u66f4\u597d\u5730\u5229\u7528\u786c\u4ef6\u4e2d\u7684\u5e76\u884c\u6027\uff0c\u540c\u65f6\u8ba1\u7b97\u66f4\u4e3a\u89c4\u5219\uff0c\u5e76\u975e\u603b\u662fMobileNet\u624d\u9ad8\u6548\u3002</li> <li>\u5982\u56fe\u4e2d\u5bf9ResNet\u548cMobileNetV2\u7684\u63a8\u7406\u548c\u8bad\u7ec3\u6bd4\u8f83\uff0c\u9996\u5148\u5c06MobileNetV2\u5f52\u7ea6\u81f33/4\u4f7f\u5f97\u4e24\u8005\u5728\u6570\u636e\u96c6ImageNet\u51c6\u786e\u5ea6\u76f8\u540c\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u867d\u7136MobileNetV2\u7684\u6a21\u578b\u53c2\u6570\u5927\u5e45\u51cf\u5c0f\uff0c\u4f46\u662f\u5cf0\u503c\u6fc0\u6d3b\u5e76\u6ca1\u6709\u660e\u663e\u964d\u4f4e\uff0c\u6fc0\u6d3b\u6210\u4e3a\u4e86\u6a21\u578b\u90e8\u7f72\u5230\u8bbe\u5907\u7684\u74f6\u9888\u3002</li> </ul>"},{"location":"self_learn/efficientml/nas/#shufflenet-1x1-group-convolution-channel-shuffle","title":"ShuffleNet: 1x1 group convolution &amp; channel shuffle","text":"<ul> <li>ShuffleNet\u4e0eMobileNetV2\u6240\u505a\u7684\u5de5\u4f5c\u975e\u5e38\u7c7b\u4f3c\uff0c\u9996\u5c3e\u4f7f\u7528 1\u00d71 \u5377\u79ef\uff0c\u5e76\u4e14\u90fd\u91c7\u7528\u4e86\u5206\u7ec4\u5377\u79ef\u65e8\u5728\u51cf\u5c11\u6210\u672c\u3002</li> <li>MobileNetV2\u4e2d\u4e0d\u540c\u5206\u7ec4\u4e4b\u95f4\u4ece\u4e0d\u8fdb\u884c\u4fe1\u606f\u4ea4\u6d41\uff0c\u800cShuffleNet\u901a\u8fc7\u901a\u9053\u91cd\u6392(channel shuffle)\u5728\u4e0d\u540c\u7684\u7ec4\u4e4b\u95f4\u4ea4\u6362\u4fe1\u606f\u3002<ul> <li>\u901a\u9053\u91cd\u6392\u662fShuffleNet\u7684\u91cd\u8981\u7ec4\u4ef6\uff0c\u5b83\u7684\u4f5c\u7528\u662f\u5728\u9010\u901a\u9053\u5206\u7ec4\u5377\u79ef\u4e4b\u540e\uff0c\u5c06\u4e0d\u540c\u7ec4\u7684\u7279\u5f81\u8fdb\u884c\u6df7\u6d17\u3002\u8fd9\u6837\u505a\u7684\u76ee\u7684\u662f\u4e3a\u4e86\u589e\u52a0\u7279\u5f81\u4e4b\u95f4\u7684\u4ea4\u6d41\u548c\u4fe1\u606f\u4f20\u9012\uff0c\u4ece\u800c\u63d0\u5347\u6a21\u578b\u7684\u8868\u793a\u80fd\u529b\u3002</li> <li>\u901a\u9053\u91cd\u6392\u9700\u8981\u9ad8\u6548\u5b9e\u73b0\uff0c\u4ee5\u907f\u514d\u6570\u636e\u79fb\u52a8\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u91cd\u6392\u4e0d\u6d89\u53ca\u5230\u8ba1\u7b97\uff0c\u4e0d\u589e\u52a0MAC\u3002</li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/nas/#transformer-multi-head-self-attention-mhsa","title":"Transformer: Multi-Head Self-Attention (MHSA)","text":"<ul> <li>MHSA\u6838\u5fc3\u601d\u60f3\uff1a\u662f\u5c06\u8f93\u5165\u5e8f\u5217\u5206\u522b\u6620\u5c04\u4e3a\u591a\u4e2a\u67e5\u8be2\u3001\u952e\u548c\u503c\u5411\u91cf\uff0c\u7136\u540e\u901a\u8fc7\u8ba1\u7b97\u5b83\u4eec\u4e4b\u95f4\u7684\u76f8\u4f3c\u5ea6\u5f97\u5230\u6ce8\u610f\u529b\u6743\u91cd\uff0c\u5e76\u5c06\u503c\u5411\u91cf\u52a0\u6743\u6c42\u548c\u5f97\u5230\u8f93\u51fa\u3002\u8fd9\u6837\u7684\u64cd\u4f5c\u53ef\u4ee5\u7406\u89e3\u4e3a\u6a21\u578b\u5728\u5bf9\u8f93\u5165\u5e8f\u5217\u8fdb\u884c\u5904\u7406\u65f6\uff0c\u901a\u8fc7\u5173\u6ce8\u4e0d\u540c\u7684\u8bed\u4e49\u4fe1\u606f\u6765\u63d0\u5347\u6a21\u578b\u7684\u8868\u8fbe\u80fd\u529b\u3002</li> <li>\u6bcf\u4e2a\u5934\u90fd\u6709\u81ea\u5df1\u7684\u67e5\u8be2\u3001\u952e\u548c\u503c\u6620\u5c04\u3002\u6bcf\u4e2a\u5934\u90fd\u53ef\u4ee5\u5173\u6ce8\u8f93\u5165\u5e8f\u5217\u4e2d\u4e0d\u540c\u7684\u5c40\u90e8\u7ed3\u6784\u548c\u8bed\u4e49\uff0c\u901a\u8fc7\u5e76\u884c\u8ba1\u7b97\u591a\u4e2a\u5934\u7684\u6ce8\u610f\u529b\u6743\u91cd\uff0c\u6a21\u578b\u53ef\u4ee5\u66f4\u5168\u9762\u5730\u6355\u6349\u8f93\u5165\u5e8f\u5217\u7684\u4fe1\u606f\u5e76\u63d0\u5347\u8868\u793a\u80fd\u529b\u3002</li> </ul>"},{"location":"self_learn/efficientml/nas/#introduction-to-neural-architecture-search-nas","title":"Introduction to neural architecture search (NAS)","text":""},{"location":"self_learn/efficientml/nas/#what-is-nas","title":"What is NAS?","text":"<ul> <li>\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0c\u6211\u4eec\u9700\u8981\u8bbe\u8ba1\u4f17\u591a\u7ef4\u5ea6\uff0c\u4f8b\u5982\u5c42\u6570\u3001\u6838\u6570\u91cf\u3001\u6838\u5927\u5c0f\u3001\u901a\u9053\u6570\u3001\u8fde\u63a5\u6027\u548c\u5206\u8fa8\u7387\u3002\u56e0\u6b64\u6211\u4eec\u5e0c\u671b\u5229\u7528\u673a\u5668\u6765\u81ea\u52a8\u8bbe\u8ba1\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u3002</li> <li>\u5982\u4e0b\u56fe\u662f\u4e0d\u540c\u6a21\u578b\u5728ImageNet\u4e0a\u7684\u51c6\u786e\u6027-\u6548\u7387\u6743\u8861\uff0c\u5e26\u661f\u53f7\u7684\u662f\u4f7f\u7528\u81ea\u52a8\u673a\u5668\u5b66\u4e60AutoML\u8bbe\u8ba1\u7684\u6a21\u578b\uff0c\u663e\u7136\u4f18\u4e8e\u4eba\u5de5\u8bbe\u8ba1\u7684\u6a21\u578b\uff0c\u56e0\u5176\u5177\u5907\u66f4\u5c0f\u7684\u8ba1\u7b97\u91cf\u548c\u66f4\u9ad8\u7684\u51c6\u786e\u6027\u3002</li> </ul> <ul> <li>NAS\u7684\u76ee\u6807\u662f\u5728\u641c\u7d22\u7a7a\u95f4\u4e2d\u627e\u5230\u6700\u4f73\u7684\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\uff0c\u6700\u5927\u5316\u7279\u5b9a\u76ee\u6807\u51fd\u6570\u3002</li> </ul>"},{"location":"self_learn/efficientml/nas/#search-space","title":"Search space","text":"<ul> <li>\u641c\u7d22\u7a7a\u95f4\u662f\u4e00\u7ec4\u5019\u9009\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u3002</li> <li>\u641c\u7d22\u7a7a\u95f4\u5206\u4e3a\u4e0b\u5217\u4e24\u79cd\uff1a<ul> <li>Cell-level\u5355\u5143\u7ea7\u641c\u7d22\u7a7a\u95f4</li> <li>Network-level\u7f51\u7edc\u7ea7\u641c\u7d22\u7a7a\u95f4</li> </ul> </li> </ul> <ol> <li> <p>\u5355\u5143\u7ea7\u641c\u7d22\u7a7a\u95f4</p> <ul> <li>\u5728\u5355\u5143\u7ea7\u641c\u7d22\u7a7a\u95f4\u4e2d\uff0c\u795e\u7ecf\u7f51\u7edc\u88ab\u5212\u5206\u4e3a\u4e00\u4e2a\u4e2a\u57fa\u672c\u5355\u5143\uff08cell\uff09\uff0c\u6bcf\u4e2a\u57fa\u672c\u5355\u5143\u7531\u4e00\u4e9b\u9884\u5b9a\u4e49\u7684\u64cd\u4f5c\u7ec4\u6210\uff0c\u4f8b\u5982\u5377\u79ef\u3001\u6c60\u5316\u3001\u6b8b\u5dee\u8fde\u63a5\u7b49\u3002\u641c\u7d22\u7b97\u6cd5\u4f1a\u5728\u8fd9\u4e9b\u9884\u5b9a\u4e49\u7684\u64cd\u4f5c\u4e2d\u9009\u62e9\u5408\u9002\u7684\u7ec4\u5408\u65b9\u5f0f\uff0c\u4ee5\u6784\u5efa\u51fa\u66f4\u9ad8\u6548\u548c\u5f3a\u5927\u7684\u795e\u7ecf\u7f51\u7edc\u7ed3\u6784\u3002</li> <li>\u5982\u4e0b\u56fe\uff0c\u4f7f\u7528\u4e00\u4e2aRNN\u63a7\u5236\u5668\u6765\u751f\u6210\u5019\u9009\u5355\u5143\u683c\uff0c\u901a\u8fc7\u5faa\u73af\u6267\u884c\u4ee5\u4e0b\u4e09\u6b65\uff1a<ul> <li>\u9009\u62e9\u4e24\u4e2a\u8f93\u5165\u9690\u85cf\u72b6\u6001\uff08\u4f8b\u5982\uff0c\u6765\u81ea\u524d\u4e00\u5c42/\u66f4\u524d\u4e00\u5c42\uff09</li> <li>\u9009\u62e9\u4e24\u4e2a\u8f93\u5165\u8f6c\u6362\u64cd\u4f5c\uff08\u4f8b\u5982\uff0c\u5377\u79ef/\u6c60\u5316/\u6807\u8bc6\uff09</li> <li>\u6700\u540e\u9009\u62e9\u6574\u5408\u7ed3\u679c\u7684\u65b9\u6cd5\uff08\u4f8b\u5982\uff0c\u52a0\u6cd5\u64cd\u4f5c/\u62fc\u63a5\uff09</li> </ul> </li> <li>\u56fe\u7684\u5de6\u4fa7\u662f\u751f\u6210\u8fc7\u7a0b\u793a\u610f\uff0c\u53f3\u4fa7\u662f\u4f5c\u4e3a\u751f\u6210\u793a\u4f8b\u3002</li> </ul> <p></p> <p>\u95ee\u9898\uff1a\u5047\u8bbe\u6211\u4eec\u6709\u4e24\u4e2a\u5019\u9009\u8f93\u5165\uff0cM\u4e2a\u5019\u9009\u64cd\u4f5c\u6765\u8f6c\u6362\u8f93\u5165\uff0cN\u4e2a\u6f5c\u5728\u64cd\u4f5c\u6765\u7ec4\u5408\u9690\u85cf\u72b6\u6001\uff0c\u5982\u679c\u6211\u4eec\u6709B\u5c42\uff0cNASNet\u4e2d\u641c\u7d22\u7a7a\u95f4\u7684\u5927\u5c0f\u662f\u591a\u5c11\uff1f \u7b54\u6848\uff1a\\((2\\times2\\times M\\times M\\times N)^B=4^BM^{2B}N^B\\)</p> </li> <li> <p>\u7f51\u7edc\u7ea7\u641c\u7d22\u7a7a\u95f4</p> <ul> <li>\u5728\u627e\u5230\u6bcf\u4e2a\u5355\u72ec\u7684\u6a21\u5757\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u6784\u5efa\u8fd9\u4e2a\u7f51\u7edc\u5c42\u7ea7\u7684\u641c\u7d22\u7a7a\u95f4\u3002</li> <li>\u7f51\u7edc\u5c42\u9762\u7684\u641c\u7d22\u7a7a\u95f4\u5305\u62ec\uff1a\u6838\u5927\u5c0f\u3001\u6df1\u5ea6\u3001\u5bbd\u5ea6\u3001\u5206\u8fa8\u7387\u548c\u62d3\u6251\u8fde\u63a5\u3002</li> <li> <p>\u5bf9\u4e8e\u62d3\u6251\u8fde\u63a5\u4ee3\u8868\u4e3a\u8bba\u6587\u300aAuto-DeepLab: Hierarchical Neural Architecture Search for Semantic Image Segmentation\u300b\u3002\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u901a\u8fc7\u5c42\u6b21\u5316\u7684\u795e\u7ecf\u67b6\u6784\u641c\u7d22\u6765\u8fdb\u884c\u8bed\u4e49\u56fe\u50cf\u5206\u5272\u7684\u65b9\u6cd5\u3002</p> <ul> <li>\u5982\u4e0b\u56fe\u4e2d\uff0c\u5de6\u4fa7\u662f\u7f51\u7edc\u7ea7\u641c\u7d22\u7a7a\u95f4\u56fe\uff0c\u53f3\u4fa7\u662f\u4f7f\u7528\u8be5\u65b9\u6cd5\u6765\u8868\u793a\u4ee3\u8868\u6027\u7684\u624b\u5de5\u8bbe\u8ba1\u6a21\u578b\u3002</li> <li>\u7f51\u7edc\u7684\u5f00\u59cb\u662f\u4e00\u4e2a\u4e24\u5c42\u7684\u201cstem\u201d\u7ed3\u6784\uff0c\u4e4b\u540e\u662fL\u5c42\u672a\u77e5\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\u3002</li> <li>\u6bcf\u4e00\u6b21\u4ee5\u5e45\u5ea62\u00d7\u6765\u6539\u53d8\u7a7a\u95f4\u5206\u8fa8\u7387\uff0c\u4e0b\u4e00\u5c42\u7684\u5206\u8fa8\u7387\u8981\u4e48\u662f2\u00d7\u5927\uff0c2\u00d7\u5c0f\uff0c\u6216\u8005\u4e0d\u53d8\u3002\u6700\u5c0f\u7684\u7a7a\u95f4\u5206\u8fa8\u7387\u4e3a\u4e0b\u91c7\u683732\u00d7\u3002</li> <li>\u6cbf\u7740\u84dd\u8272\u8282\u70b9\u7684\u6bcf\u6761path\u90fd\u5bf9\u5e94\u4e8e\u641c\u7d22\u7a7a\u95f4\u4e2d\u7684\u4e00\u4e2a\u7f51\u7edc\u67b6\u6784\uff0c\u6211\u4eec\u7684\u76ee\u6807\u662f\u627e\u5230\u4e00\u4e2a\u8f83\u597d\u7684path\u3002</li> </ul> <p></p> </li> </ul> </li> </ol>"},{"location":"self_learn/efficientml/nas/#design-the-search-space","title":"Design the search space","text":"<ul> <li>\u6839\u636e\u524d\u9762\u53ef\u4ee5\u77e5\u9053\u8fd9\u662f\u4e00\u4e2a\u76f8\u5f53\u5e9e\u5927\u7684\u641c\u7d22\u7a7a\u95f4\uff0c\u6211\u4eec\u5e0c\u671b\u5229\u7528\u4e00\u4e9b\u542f\u53d1\u5f0f\u6216\u66f4\u5de7\u5999\u7684\u65b9\u6cd5\u7f29\u5c0f\u641c\u7d22\u7a7a\u95f4\uff0c\u4ee5\u4fbf\u5728\u8d44\u6e90\u7ea6\u675f\u4e0b\u7684\u6267\u884c\u6a21\u578b\u4e13\u4e1a\u5316\u3002</li> <li>\u52a8\u673a\uff1a\u5bf9\u4e8e\u624b\u673a\u3001\u5fae\u63a7\u5236\u5668\u3001\u7269\u8054\u7f51\u8bbe\u5907\u7b49\u8fb9\u7f18\u8bbe\u5907\uff0c\u5177\u6709\u5ef6\u8fdf\u3001\u80fd\u8017\u548c\u5185\u5b58\u9650\u5236\u3002\u5c24\u5176\u662f\u7269\u8054\u7f51\u8bbe\u5907\uff0c\u4e0d\u540c\u4e8e\u624b\u673a4GB/8GB\u7684\u5185\u5b58\uff0c\u7269\u8054\u7f51\u8bbe\u5907\u7684\u5185\u5b58\u548c\u5b58\u50a8\u6781\u5c0f\uff0c\u8d44\u6e90\u9650\u5236\u66f4\u52a0\u4e25\u91cd\u3002</li> </ul> <ul> <li>\u5982\u4f55\u4e3aTinyML\u8bbe\u8ba1\u641c\u7d22\u7a7a\u95f4\uff1f</li> <li>\u8bad\u7ec3\u6210\u672c\u9ad8\u6602\uff0c\u5e94\u8be5\u5c06\u8bad\u7ec3\u6210\u672c\u7eb3\u5165\u8003\u8651\uff0c\u56e0\u6b64\u4ec5\u51ed\u51c6\u786e\u7387\u8bc4\u4f30\u6a21\u578b\u4f18\u52a3\u662f\u4e0d\u591f\u7684\u3002<ul> <li>\u5728\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\uff0c\u8ba1\u7b97\u662f\u5ec9\u4ef7\u7684\uff0c\u800c\u5185\u5b58\u6570\u636e\u79fb\u52a8\u662f\u6602\u8d35\u7684\u3002</li> <li>\u56e0\u6b64\u5047\u8bbe\u5185\u5b58\u4e0d\u53d8\uff0c\u5373\u4fdd\u8bc1\u6a21\u578b\u6570\u636e\u79fb\u52a8\u76f8\u540c\u7684\u524d\u63d0\u4e0b\uff0c\u82e5\u6a21\u578b\u80fd\u591f\u62e5\u6709\u66f4\u591a\u7684FLOPs-&gt;\u5219\u8868\u660e\u66f4\u5927\u7684\u6a21\u578b\u5bb9\u91cf-&gt;\u66f4\u6709\u53ef\u80fd\u8fbe\u5230\u66f4\u9ad8\u7684\u51c6\u786e\u7387\u3002</li> <li>\u5047\u8bbe\u5b58\u5728\u5185\u5b58\u9650\u5236\uff0c\u6bd4\u8f83\u4e0d\u540c\u8bbe\u8ba1\u7a7a\u95f4\u80fd\u591f\u5bb9\u7eb3\u7684\u6700\u5927\u6d6e\u70b9\u8fd0\u7b97\u6b21\u6570</li> </ul> </li> <li> <p>\u300aMCUNet: Tiny Deep Learning on IoT Devices\u300b\u4e2d\u7edf\u8ba1\u4e86\u4e0d\u540c\u7684\u5bbd\u5ea6\u548c\u5206\u8fa8\u7387\u8bbe\u8ba1\u7a7a\u95f4\uff0c\u5728\u76f8\u540c\u5185\u5b58\u9650\u5236\u7684\u6761\u4ef6\u4e0b\u7684FLOPs\u6b21\u6570\u3002\u5e76\u7ed8\u5236\u4e86\u5982\u4e0b\u56fe\u66f2\u7ebf\uff0cFLOPs\u6b21\u6570\u7684CDF\u7d2f\u8ba1\u5206\u5e03\u51fd\u6570\u3002</p> <ul> <li>\u53ef\u4ee5\u770b\u51fa\u7ea2\u8272\u5b9e\u7ebf\u4f18\u4e8e\u9ed1\u8272\u5b9e\u7ebf\uff0c\u540c\u4e00\u5185\u5b58\u4e0b\uff0c\u7ea2\u8272\u8bbe\u8ba1\u7a7a\u95f4\u80fd\u591f\u8fbe\u5230\u66f4\u9ad8\u7684FLOPs\u6b21\u6570\u3002\u7ea2\u8272\u524d20%\u7684\u6a21\u578bFLOPs\u5927\u4e8e50.3M\uff0c\u6700\u9ad8\u51c6\u786e\u738778.7%\uff1b\u800c\u9ed1\u8272\u524d20%\u7684\u6a21\u578bFLOPs\u5927\u4e8e32.3M\uff0c\u6700\u9ad8\u51c6\u786e\u7387\u4ec574.2%\u3002</li> </ul> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/nas/#search-strategy","title":"Search strategy","text":"<ul> <li>\u641c\u7d22\u7b56\u7565\u5305\u62ec\uff1a\u7f51\u683c\u641c\u7d22\u3001\u968f\u673a\u641c\u7d22\u3001\u5f3a\u5316\u5b66\u4e60\u3001\u68af\u5ea6\u4e0b\u964d\u4ee5\u53ca\u8fdb\u5316\u7814\u7a76\u3002</li> </ul>"},{"location":"self_learn/efficientml/nas/#_1","title":"\u7f51\u683c\u641c\u7d22","text":"<ul> <li>\u7f51\u683c\u641c\u7d22\u662f\u4e00\u79cd\u4f20\u7edf\u7684\u8d85\u53c2\u6570\u4f18\u5316\u65b9\u6cd5\u3002\u6574\u4e2a\u8bbe\u8ba1\u7a7a\u95f4\u8868\u793a\u4e3a\u5355\u7ef4\u8bbe\u8ba1\u7a7a\u95f4\u7684\u7b1b\u5361\u5c14\u79ef\u3002</li> <li>\u57fa\u672c\u601d\u60f3\uff1a\u5c06\u53c2\u6570\u7a7a\u95f4\u5212\u5206\u4e3a\u4e00\u4e2a\u7f51\u683c\uff0c\u7136\u540e\u904d\u5386\u7f51\u683c\u4e2d\u7684\u6bcf\u4e2a\u70b9\u6765\u8bc4\u4f30\u6a21\u578b\u7684\u6027\u80fd\u3002\u5bf9\u4e8e\u6bcf\u4e2a\u53c2\u6570\u7ec4\u5408\uff0c\u90fd\u4f1a\u8fdb\u884c\u4e00\u6b21\u6a21\u578b\u8bad\u7ec3\u548c\u8bc4\u4f30\uff0c\u7136\u540e\u6839\u636e\u5b9a\u4e49\u7684\u6027\u80fd\u6307\u6807\u9009\u62e9\u6700\u4f73\u7684\u53c2\u6570\u7ec4\u5408\u3002</li> </ul>"},{"location":"self_learn/efficientml/nas/#_2","title":"\u968f\u673a\u641c\u7d22","text":"<ul> <li>\u901a\u8fc7\u5728\u53c2\u6570\u7a7a\u95f4\u5185\u968f\u673a\u9009\u62e9\u53c2\u6570\u7ec4\u5408\u6765\u5bfb\u627e\u6700\u4f73\u6a21\u578b\u914d\u7f6e\u7684\u65b9\u6cd5\u3002\u4e0e\u7f51\u683c\u641c\u7d22\u4e0d\u540c\uff0c\u968f\u673a\u641c\u7d22\u4e0d\u9700\u8981\u7a77\u4e3e\u6240\u6709\u53ef\u80fd\u7684\u53c2\u6570\u7ec4\u5408\uff0c\u800c\u662f\u5728\u7ed9\u5b9a\u7684\u53c2\u6570\u8303\u56f4\u5185\u968f\u673a\u9009\u62e9\u4e00\u7ec4\u53c2\u6570\u8fdb\u884c\u6a21\u578b\u8bad\u7ec3\u548c\u8bc4\u4f30\u3002</li> </ul>"},{"location":"self_learn/efficientml/nas/#_3","title":"\u5f3a\u5316\u5b66\u4e60","text":"<ul> <li>\u6a21\u578b\u795e\u7ecf\u7ed3\u6784\u8bbe\u8ba1\u4f5c\u4e3a\u4e00\u4e2a\u987a\u5e8f\u51b3\u7b56\u95ee\u9898\uff0c\u53ef\u4ee5\u4f7f\u7528\u5f3a\u5316\u5b66\u4e60\u6765\u8bad\u7ec3\u7528RNN\u5b9e\u73b0\u7684\u63a7\u5236\u5668\u3002</li> <li>\u8fd9\u79cd\u65b9\u6cd5\u8f83\u7f13\u6162\uff0c\u56e0\u4e3a\u9700\u8981\u8fed\u4ee3\u83b7\u5f97\u5956\u52b1\u8fdb\u884c\u8bad\u7ec3\u3002</li> <li>\u5982\u4e0b\u56fe\uff0c\u6309\u7167\u6982\u7387p\u91c7\u6837\u67b6\u6784\uff0c\u8bad\u7ec3\u8fd9\u4e2a\u8bd5\u9a8c\u7f51\u7edc\u83b7\u5f97\u51c6\u786e\u7387R\uff0c\u63a5\u7740\u8ba1\u7b97\u6982\u7387p\u7684\u68af\u5ea6\u5e76\u5c06\u5176\u4e58\u4ee5R\u4ee5\u66f4\u65b0\u63a7\u5236\u5668\u3002</li> </ul>"},{"location":"self_learn/efficientml/nas/#_4","title":"\u68af\u5ea6\u4e0b\u964d\u6cd5","text":"<ul> <li>\u8fd9\u79cd\u65b9\u6cd5\u65e0\u9700\u8fc7\u591a\u8fed\u4ee3\uff0c\u8ba1\u7b97\u6548\u7387\u66f4\u9ad8\u3002</li> <li>\u7f3a\u70b9\uff1a\u9700\u8981\u5c06\u6240\u6709\u9009\u9879\u4fdd\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5927\u5e45\u589e\u52a0GPU\u5185\u5b58\u5360\u7528\u3002</li> <li>\u5982\u4e0b\u56fe\uff0c\u5bf9\u4e8e\u57fa\u4e8e\u68af\u5ea6\u7684\u641c\u7d22\uff0c\u4e5f\u53ef\u4ee5\u8003\u8651\u5ef6\u8fdf\u3002<ul> <li>F\u662f\u4e00\u4e2a\u5ef6\u8fdf\u9884\u6d4b\u6a21\u578b\uff08\u901a\u5e38\u662f\u4e00\u4e2a\u56de\u5f52\u53d8\u91cf\u6216\u4e00\u4e2a\u67e5\u627e\u8868\uff09\uff0c\u53ef\u4ee5\u9884\u5148\u9884\u6d4b\u6bcf\u4e2a\u6784\u5efa\u5757\u7684\u5ef6\u8fdf\u3002</li> <li>\u4f4d\u4e8e\u5757\u5185\u7684 \\(\\alpha,\\beta,\\gamma\\) \u53c2\u6570\uff0c\u4ee3\u8868\u91c7\u6837\u6bcf\u6761\u8def\u5f84\u7684\u6982\u7387\u3002</li> <li>\u56e0\u6b64\u53ef\u4ee5\u8ba1\u7b97\u51fa\u5ef6\u8fdf\u7684\u671f\u671b\u503c \\(\\text{E}[latency]\\)\u3002</li> <li>\u6709\u4e86\u635f\u5931\u51fd\u6570\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u4ece\u5ef6\u8fdf\u60e9\u7f5a\u9879\u4e2d\u8ba1\u7b97\u51fa\u4f53\u7cfb\u7ed3\u6784\u53c2\u6570\u7684\u9644\u52a0\u68af\u5ea6\u3002</li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/nas/#evolutionary-search","title":"\u6f14\u5316\u641c\u7d22(Evolutionary search)","text":"<ul> <li>\u6784\u5efa\u5927\u578b\u7f51\u7edc\uff0c\u9009\u53d6\u4e00\u4e2a\u5b50\u7f51\u7edc\u6837\u672c\uff0c\u68c0\u9a8c\u5176\u901f\u5ea6\u662f\u5426\u8db3\u591f\u5feb\uff0c\u5982\u679c\u6548\u679c\u826f\u597d\u5c31\u4fdd\u7559\uff0c\u5426\u5219\u901a\u8fc7\u53d8\u5f02\u548c\u4ea4\u53c9\u91cd\u65b0\u91c7\u6837\uff0c\u91cd\u590d\u6b64\u8fc7\u7a0b\u76f4\u81f3\u627e\u5230\u6700\u4f73\u4e2a\u4f53\u3002</li> <li>\u5982\u4f55\u53d8\u5f02\uff1f<ul> <li>\u5728\u6df1\u5ea6\u4e0a\u53d8\u5f02\uff08\u5982\u6df1\u5ea6\u53d8\u5927\u53d8\u5c0f\uff09\u3001\u5bf9\u7b97\u5b50\u53d8\u5f02\uff08\u59825\u00d75\u5377\u79ef\u53d8\u5f02\u62103\u00d73\u5377\u79ef\uff09\u3002</li> </ul> </li> <li>\u5982\u4f55\u4ea4\u53c9\uff1f<ul> <li>\u5728\u6bcf\u4e00\u5c42\u7684\u4e24\u4e2a\u9009\u62e9\u4e2d\uff08\u7236\u9009\u9879\u4e2d\uff09\u4e2d\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u7b97\u5b50\u3002</li> </ul> </li> <li>\u7ecf\u8fc7\u53d8\u5f02\u4ea4\u53c9\u540e\uff0c\u6211\u4eec\u53ef\u4ee5\u9009\u62e9\u6700\u5408\u9002\u8005\u4f5c\u4e3a\u4e0b\u4e00\u4ee3\u7684\u4eb2\u672c\u91cd\u590d\u4e0a\u8ff0\u8fc7\u7a0b\uff0c\u76f4\u81f3\u627e\u5230\u6700\u4f73\u6a21\u578b\u3002</li> </ul>"},{"location":"self_learn/efficientml/nas/#efficient-and-hardware-aware-nas","title":"Efficient and Hardware-aware NAS","text":""},{"location":"self_learn/efficientml/nas/#accuracy-estimation-strategy","title":"Accuracy estimation strategy","text":"<ul> <li>\u51c6\u786e\u5ea6\u4f30\u8ba1\u7b56\u7565 (Accuracy estimation strategy) \u5b9a\u4e49\u4e86\u5982\u4f55\u5728\u8bbe\u8ba1\u7a7a\u95f4\u4e2d\u4f30\u8ba1/\u9884\u6d4b\u4e00\u4e2a\u7ed9\u5b9a\u7684\u795e\u7ecf\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u7684\u51c6\u786e\u5ea6\u3002</li> <li> <p>Train from scratch(\u4ece\u5934\u8bad\u7ec3)</p> <ul> <li>\u5728\u8bad\u7ec3\u96c6\u4e0a\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\u7ed9\u5b9a\u7684\u6a21\u578b\u3002</li> <li>\u5728\u9a8c\u8bc1\u96c6\u4e0a\u8bc4\u4f30\u8bad\u7ec3\u540e\u7684\u6a21\u578b\uff0c\u5f97\u5230\u51c6\u786e\u5ea6R\u3002</li> <li>\u7f3a\u70b9\uff1a\u9ad8\u6602\u7684\u57f9\u8bad\u6210\u672c\uff0c\u4f8b\u5982\u5bf9\u4e8eCIFAR10\u6570\u636e\u96c6\u9700\u8981\u8bad\u7ec312800\u4e2a\u6a21\u578b\u67b6\u6784\u3002</li> </ul> <p></p> </li> <li> <p>Inherit weight(\u7ee7\u627f\u6743\u91cd)</p> <ul> <li>\u4ece\u7236\u6a21\u578b\u4e2d\u7ee7\u627f\u6743\u91cd\uff0c\u4ee5\u964d\u4f4e\u8bad\u7ec3\u6210\u672c\uff0c\u800c\u4e0d\u662f\u4ece\u5934\u5f00\u59cb\u8fdb\u884c\u8bad\u7ec3\u3002</li> <li>\u8bba\u6587Net2Wider\u4e2d\uff1a\u4e3a\u4e86\u6269\u5c55\u5bbd\u5ea6\uff0c\u53ef\u4ee5\u5c06\u53c2\u6570f\u62c6\u5206\u4e3a\u4e24\u4e2af/2\uff0c\u4f7f\u5f97\u795e\u7ecf\u5143\u6570\u91cf\u88c2\u53d8\uff0c\u7a84\u7f51\u7edc\u53d8\u6210\u5bbd\u7f51\u7edc\u3002</li> <li>\u8bba\u6587Net2Deeper\u4e2d\uff1a\u4e3a\u4e86\u6269\u5c55\u6df1\u5ea6\uff0c\u53ef\u4ee5\u63d2\u5165\u4e00\u4e2aIdentity Mapping(\u6052\u7b49\u5c42)\uff0c\u6d45\u7f51\u7edc\u53d8\u6210\u6df1\u7f51\u7edc\u3002</li> <li>\u901a\u8fc7\u91c7\u7528\u8fd9\u79cd\u7ee7\u627f\u6743\u91cd\u7684\u65b9\u5f0f\uff0c\u6211\u4eec\u4e0d\u518d\u6bcf\u6b21\u63d0\u51fa\u65b0\u67b6\u6784\u65f6\u90fd\u8981\u6d89\u53ca\u4f17\u591a\u53c2\u6570\uff0c\u800c\u662f\u751f\u6210\u4ecenet-to-net\u7684\u53d8\u6362\u66f4\u65b0\u64cd\u4f5c\u3002</li> </ul> <p></p> </li> <li> <p>Hypernetwork\u8d85\u7f51\u7edc</p> <ul> <li>\u8d85\u7f51\u7edc\u7531\u5171\u4eabMLP\u6784\u6210\uff0c\u7528\u4e8e\u9884\u6d4b\u76ee\u6807\u7f51\u7edc\u7684\u6743\u91cd\u3002</li> <li>\u9884\u6d4b\u5668\u57fa\u4e8e\u6a21\u578b\u7684\u67b6\u6784\u5d4c\u5165\u6784\u5efa\uff0c\u5982\u53c2\u6570NCHW\u683c\u5f0f\u3001\u4e0d\u540c\u5c3a\u5bf8\u7b49\uff0c\u901a\u8fc7\u591a\u5c42\u56fe\u795e\u7ecf\u7f51\u7edc\u5c06\u521d\u59cb\u67b6\u6784\u5d4c\u5165\u8f6c\u6362\u4e3a\u6700\u7ec8\u67b6\u6784\u5d4c\u5165\u3002</li> <li>\u5982\u4f55\u8bad\u7ec3\u8d85\u7f51\u7edc\uff1f\u5229\u7528\u68af\u5ea6\u4e0b\u964d\u6cd5\u66f4\u65b0\u8d85\u7f51\u7edc\u7684\u6743\u503c\u3002</li> </ul> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/nas/#zero-shot-nas","title":"Zero-shot NAS","text":"<ul> <li>\u96f6\u6837\u672c(Zero-shot)\u5141\u8bb8\u6a21\u578b\u5728\u6ca1\u6709\u5bf9\u7279\u5b9a\u4efb\u52a1\u8fdb\u884c\u4efb\u4f55\u8bad\u7ec3\u6216\u5b66\u4e60\u6837\u672c\u7684\u60c5\u51b5\u4e0b\uff0c\u901a\u8fc7\u89e3\u51b3\u76f8\u5173\u4efb\u52a1\u7684\u65b9\u6cd5\u6765\u8fdb\u884c\u6a21\u578b\u9884\u6d4b\u3002\u7b80\u800c\u8a00\u4e4b\uff0cZero-shot\u5b66\u4e60\u8ba9\u6a21\u578b\u80fd\u591f\u5229\u7528\u5df2\u6709\u7684\u77e5\u8bc6\uff0c\u5bf9\u4ece\u672a\u89c1\u8fc7\u7684\u201c\u672a\u77e5\u201d\u6837\u672c\u8fdb\u884c\u9884\u6d4b\u6216\u5206\u7c7b\uff0c\u5373\u4f7f\u8fd9\u4e9b\u6837\u672c\u5728\u8bad\u7ec3\u9636\u6bb5\u4ece\u672a\u51fa\u73b0\u8fc7\u3002</li> <li>\u5bf9\u4e8eNAS\u95ee\u9898\uff0c\u96f6\u6837\u672c\u795e\u7ecf\u67b6\u6784\u641c\u7d22(Zero-shot NAS)\u4ec5\u901a\u8fc7\u76ee\u6d4b\u5206\u6790\u67b6\u6784\u6765\u4f30\u7b97\u51c6\u786e\u5ea6\uff0c\u4e0d\u8fdb\u884c\u8bad\u7ec3\u3002</li> <li> <p>ZenNAS</p> <ul> <li>ZenNAS\u8bd5\u56fe\u8868\u8fbe\u7684\u662f\uff0c\u5e0c\u671b\u5bf9\u8f93\u5165\u65bd\u52a0\u4e00\u70b9\u5fae\u5c0f\u7684\u6270\u52a8\uff0c\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e94\u8be5\u80fd\u591f\u611f\u53d7\u8fd9\u79cd\u53d8\u5316\uff0c\u5e76\u7ed9\u51fa\u53d8\u5316\u660e\u663e\u7684\u8f93\u51fa\uff0c\u5373\u5bf9\u6270\u52a8\u654f\u611f\u3002</li> <li>ZenNAS\u4e2d\u4f7f\u7528Zen-score\u6765\u4ee3\u66ff\u51c6\u786e\u5ea6\u9884\u6d4b\u5668\uff0c\u56e0\u6b64\u5176\u4e0d\u9884\u6d4b\u6a21\u578b\u51c6\u786e\u5ea6\uff0c\u800c\u662f\u76f4\u63a5\u786e\u5b9a\u7f51\u7edc\u7684\u6a21\u578b\u590d\u6742\u5ea6\uff0c\u5e76\u4e14\u4e0d\u9700\u8981\u8bad\u7ec3\u5176\u53c2\u6570\u3002\u5176\u8ba1\u7b97\u65b9\u6cd5\u5982\u4e0b\u56fe\u6240\u793a\uff1a</li> </ul> <p></p> </li> <li> <p>GradSign</p> <ul> <li> <p>\u4e00\u4e2a\u597d\u7684\u6a21\u578b\u5e94\u8be5\u5177\u6709\u66f4\u5bc6\u96c6\u7684\u6837\u672c\u7ea7\u5c40\u90e8\u6781\u5c0f\u503c\uff0c\u5373\u4e0d\u540c\u7684\u5c40\u90e8\u6700\u5c0f\u503c\u4e4b\u95f4\u7684\u8ddd\u79bb\u5e94\u8be5\u66f4\u63a5\u8fd1\u3002</p> <p></p> </li> <li> <p>\u4e00\u4e2a\u4f18\u79c0\u7684\u6a21\u578b\u5e94\u5f53\u5bf9\u8f93\u5165\u6270\u52a8\u654f\u611f\uff0c\u4f46\u662f\u5bf9\u8f93\u5165\u6270\u52a8\u654f\u611f\u7684\u6a21\u578b\u4e0d\u4e00\u5b9a\u5c31\u662f\u597d\u6a21\u578b\u3002</p> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/nas/#hardware-aware-nas","title":"Hardware-aware NAS","text":"<ul> <li>\u51c6\u786e\u5ea6\u4ec5\u4ec5\u662fNAS\u7684\u4e00\u90e8\u5206\uff0c\u6211\u4eec\u9700\u8981\u4f7f\u5176\u5177\u5907\u786c\u4ef6\u611f\u77e5\u80fd\u529b\uff0c\u4e0d\u4ec5\u8981\u83b7\u53d6\u51c6\u786e\u6027\u4fe1\u606f\uff0c\u8fd8\u8981\u83b7\u53d6\u5ef6\u8fdf\u7b49\u3002</li> </ul>"},{"location":"self_learn/efficientml/nas/#proxylessnas","title":"ProxylessNAS","text":"<ul> <li>\u4ee5\u524d\u7684\u795e\u7ecf\u7ed3\u6784\u641c\u7d22\uff08NAS\uff09\u662f\u975e\u5e38\u6602\u8d35\u7684\u3002\u56e0\u6b64\uff0c\u4ee5\u524d\u7684\u5de5\u4f5c\u5fc5\u987b\u5229\u7528\u4ee3\u7406\u4efb\u52a1\uff0c\u4f8b\u5982\uff1a\u5c0f\u578b\u6570\u636e\u96c6\u3001\u8f83\u5c0f\u7684\u67b6\u6784\u641c\u7d22\u7a7a\u95f4\u3001\u8f83\u5c11\u7684\u8bad\u7ec3\u5468\u671f\u548c\u53c2\u6570\u6d41\u3002</li> <li>\u800cProxylessNAS\u76f4\u63a5\u8bad\u7ec3\u771f\u5b9e\u7684\u6570\u636e\u96c6\u3001\u89e3\u9501\u6240\u6709\u5c42\u3001\u76f4\u63a5\u5bf9\u5176\u8fdb\u884c\u641c\u7d22\uff0c\u5e76\u91c7\u7528\u5ef6\u8fdf\u800c\u975eFLOPs\u4f5c\u4e3a\u53cd\u9988\uff0c\u76f4\u63a5\u5728\u76ee\u6807\u786c\u4ef6\u4e0a\u5b66\u4e60\u76ee\u6807\u4efb\u52a1\u3002<ul> <li>\u9996\u5148\u6784\u5efa\u4e00\u4e2a\u8fc7\u53c2\u6570\u5316\u7f51\u7edc\uff0c\u5305\u542b\u4f17\u591a\u4e0d\u540c\u9009\u62e9\uff0c\u5373\u6240\u6709\u5019\u9009\u7c7b\u522b\u3002</li> <li>\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u7b80\u5316\u4e3a\u5355\u4e00\u8bad\u7ec3\u8fc7\u7a0b\uff0c\u76f8\u8f83\u4e8e\u4f60\u8bad\u7ec3\u6a21\u578b\u3001\u8bc4\u4f30\u51c6\u786e\u5ea6\u3001\u518d\u6b21\u8bad\u7ec3\u6a21\u578b\u3001\u8bc4\u4f30\u51c6\u786e\u5ea6\u3001\u8bad\u7ec3\u53e6\u4e00\u4e2a\u6a21\u578b\u7b49\u591a\u79cd\u8bad\u7ec3\u8fed\u4ee3\u8fc7\u7a0b\uff0c\u73b0\u5728\u6211\u4eec\u5e0c\u671b\u5c06\u5176\u7b80\u5316\u4e3a\u4e00\u4e2a\u8fc7\u53c2\u6570\u5316\u7f51\u7edc\u7684\u5355\u4e00\u8bad\u7ec3\u8fc7\u7a0b\u3002</li> <li>\u8fd9\u79cd\u7f51\u7edc\u62e5\u6709\u4e24\u7c7b\u53c2\u6570\uff0c\u4e00\u662f\u6743\u91cd\u53c2\u6570\uff0c\u53e6\u4e00\u4e2a\u662f\u67b6\u6784\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u8fed\u4ee3\u5730\u66f4\u65b0\u6743\u91cd\u53c2\u6570\u548c\u67b6\u6784\u53c2\u6570\u3002\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4e0d\u540c\u8def\u5f84\u8868\u793a\u4e0d\u540c\u67b6\u6784\uff0c\u800c\u53c2\u6570\u8868\u793a\u9009\u62e9\u6982\u7387\u3002</li> <li>\u5728\u63a8\u7406\u9636\u6bb5\uff0c\u6211\u4eec\u53ef\u91c7\u6837\u6700\u5927\u6982\u7387\uff0c\u5e76\u6839\u636e\u8fd9\u4e9b\u67b6\u6784\u53c2\u6570\u8bc1\u660e\u90a3\u4e9b\u5197\u4f59\u8def\u5f84\u3002</li> <li>\u6700\u7ec8\u786e\u5b9a\u4e86\u67b6\u6784\u540e\uff0c\u4e3a\u786e\u4fdd\u5185\u5b58\u4e2d\u4ec5\u6709\u4e00\u6761\u6fc0\u6d3b\u8def\u5f84\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001\uff0c\u4f7f\u7528\u4e8c\u503c\u5316\u53c2\u6570\u5373\u4ec5\u542b0\u548c1\u3002</li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/nas/#macs","title":"MACs==\u771f\u5b9e\u7684\u786c\u4ef6\u6548\u7387\uff1f","text":"<ul> <li> <p>\u4e0b\u56fe\u4e2dMobileNetV2\u7684MACs\u66f4\u5927\uff0c\u4f46\u662f\u5ef6\u8fdf\u66f4\u4f4e\uff1b\u800cAmoebaNet-A\u7684MACs\u66f4\u5c0f\uff0c\u4f46\u662f\u5ef6\u8fdf\u66f4\u9ad8\u3002</p> <ul> <li>\u56e0\u6b64\u90a3\u4e9b\u4f20\u7edf\u7684NAS\u65b9\u6cd5\u5c3d\u7ba1\u4e0e\u4eba\u5de5\u8bbe\u8ba1\u76f8\u6bd4\u5177\u6709\u76f8\u4f3c\u7684MACs\uff0c\u4f46\u5b9e\u9645\u4e0a\u5374\u5f15\u5165\u4e86\u66f4\u9ad8\u7684\u5ef6\u8fdf\u3002</li> <li>\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u77e5\u9053\uff0cMACs \u4e0d\u7b49\u4e8e\u771f\u5b9e\u7684\u786c\u4ef6\u6548\u7387\u3002</li> </ul> <p></p> </li> <li> <p>\u5982\u56fe\u4e3a\u5206\u522b\u5bf9\u9690\u85cf\u5c42\u7ef4\u5ea6\u548c\u5c42\u6570\u8fdb\u884c\u7f29\u653e\u65f6\uff0c\u5ef6\u8fdf\u4e0eMACs\u7684\u53d8\u5316\u60c5\u51b5\u3002</p> <ul> <li>\u4e24\u8005\u5177\u6709\u76f8\u540c\u8d77\u70b9\uff0c\u4f46\u662f\u968f\u7740MACs\u7684\u589e\u5927\uff0c\u5ef6\u8fdf\u53d8\u5316\u60c5\u51b5\u5206\u5316\u3002</li> <li>\u5f53\u6269\u5c55\u795e\u7ecf\u7f51\u7edc\u7684\u7ef4\u5ea6\u65f6\uff0c\u5b9e\u9645\u4e0a\u5ef6\u8fdf\u5e76\u4e0d\u4f1a\u663e\u8457\u589e\u52a0\uff0c\u56e0\u4e3aGPU\u5177\u6709\u6781\u9ad8\u7684\u5e76\u884c\u6027\uff0c\u5373\u4f7f\u589e\u52a0\u5de5\u4f5c\u8d1f\u8f7d\u6269\u5927\u901a\u9053\u6570\uff0c\u5ef6\u8fdf\u4e5f\u4e0d\u4f1a\u660e\u663e\u4e0a\u5347\u3002</li> </ul> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/nas/#_5","title":"\u5ef6\u8fdf\u9884\u6d4b","text":"<ul> <li>\u7531\u4e8eMACs\u4e0d\u80fd\u5f88\u597d\u7684\u53cd\u5e94\u786c\u4ef6\u6548\u7387\uff0c\u56e0\u6b64\u5ef6\u8fdf\u7684\u53cd\u9988\u6781\u4e3a\u5173\u952e\u3002\u800c\u5728\u8bbe\u5907\u4e0a\u76f4\u63a5\u6d4b\u91cf\u5ef6\u8fdf\u901f\u5ea6\u8f83\u6162\u4e14\u6210\u672c\u6602\u8d35\uff0c\u56e0\u6b64\u53ef\u4ee5\u6784\u5efa\u4e00\u4e2a\u5ef6\u8fdf\u6a21\u578b\uff0c\u901a\u8fc7\u9996\u5148\u6536\u96c6\u5ef6\u8fdf\u6570\u636e\u96c6\u6765\u9884\u6d4b\u5ef6\u8fdf\uff0c\u8f93\u5165\u4e3a\u67b6\u6784\u8868\u793a\uff0c\u8f93\u51fa\u4e3a\u9884\u6d4b\u7684\u5ef6\u8fdf\u65f6\u95f4\u3002</li> <li> <p>\u5ef6\u8fdf\u9884\u6d4b\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u7c7b\u522b</p> <ol> <li> <p>\u5206\u5c42\u5ef6\u8fdf\u5206\u6790\uff1a\u5ef6\u8fdf\u67e5\u627e\u8868</p> <ul> <li>\u5206\u5c42\u5ef6\u8fdf\u5206\u6790\u7684\u524d\u63d0\uff1a\u5bf9\u4e8e\u795e\u7ecf\u7f51\u7edc\uff0c\u5ef6\u8fdf\u57fa\u672c\u4e0a\u662f\u5404\u5c42\u5ef6\u8fdf\u7684\u603b\u548c\uff0c\u5373\u662f\u53ef\u52a0\u7684\u3002</li> <li>\u57fa\u4e8e\u524d\u63d0\u53ef\u77e5\uff0c\u8be5\u65b9\u6cd5\u5e76\u4e0d\u9002\u7528\u4e8e\u4efb\u610f\u7f51\u7edc\uff0c\u4f8b\u5982\u591a\u4e2a\u5c42\u540c\u65f6\u8fdb\u884c\u90e8\u5206\u63a8\u7406\u65f6\u65e0\u6cd5\u76f4\u63a5\u76f8\u52a0\u3002</li> <li>\u795e\u7ecf\u7f51\u7edc\u5177\u6709\u4e0d\u540c\u7684\u5c42\uff0c\u4e0d\u540c\u5c42\u5177\u6709\u4e0d\u540c\u4e14\u6709\u9650\u7684\u9009\u62e9\u3002\u6211\u4eec\u53ef\u4ee5\u9884\u5148\u8ba1\u7b97\u5e76\u6d4b\u91cf\u6bcf\u4e2a\u9009\u62e9\u7684\u5ef6\u8fdf\uff0c\u6784\u5efa\u4e00\u4e2a\u67e5\u627e\u8868\u3002\u5bf9\u4e8e\u67e5\u627e\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528\u64cd\u4f5c\u7b26\u4e0e\u5ef6\u8fdf\u4e00\u4e00\u5bf9\u5e94\uff0c\u66f4\u5feb\u9884\u6d4b\u5ef6\u8fdf\u3002</li> <li>\u4e0b\u56fe\u5c55\u793a\u4e86\u4f7f\u7528\u5ef6\u8fdf\u67e5\u627e\u8868\u8fdb\u884c\u9884\u6d4b\u7684\u6548\u679c\uff0c\u5b9e\u9645\u7ed3\u679c\u4e0e\u9884\u6d4b\u5341\u5206\u63a5\u8fd1\u3002</li> </ul> <p></p> </li> <li> <p>\u7f51\u7edc\u7ea7\u5ef6\u8fdf\u5206\u6790\uff1a\u5ef6\u8fdf\u9884\u6d4b\u6a21\u578b </p> <ul> <li>\u66f4\u901a\u7528\u7684\u6a21\u578b\uff0c\u4ece\u7f51\u7edc\u67b6\u6784\u5c42\u7ea7\u9884\u6d4b\u3002</li> <li>\u8f93\u5165\u7279\u5f81\u5305\u542b\u5377\u79ef\u6838\u5927\u5c0f\u3001\u5bbd\u5ea6\u3001\u5206\u8fa8\u7387\u7b49\u7edd\u5927\u90e8\u5206\u8d85\u53c2\u6570\uff0c\u901a\u8fc7\u591a\u5c42\u7684\u611f\u77e5\u673aMLP\u4f5c\u4e3a\u8fde\u63a5\u5c42\uff0c\u8f93\u51fa+ \u9884\u6d4b\u7684\u5ef6\u8fdf\u65f6\u95f4\u3002\u5176\u4e2dMLP\u4e5f\u53ef\u4ee5\u6362\u6210\u66f4\u52a0\u590d\u6742\u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u7b49\u3002</li> <li>\u4e0b\u56fe\u5c55\u793a\u4e86\u7f51\u7edc\u7ea7\u5ef6\u8fdf\u9884\u6d4b\u6a21\u578b\u7684\u6548\u679c\uff0c\u6765\u81ea\u300aHAT: Hardware-Aware Transformers for Efficient Natural Language Processing\u300b[Wang et al., ACL 2020]\u3002</li> </ul> <p></p> </li> </ol> </li> </ul>"},{"location":"self_learn/efficientml/nas/#_6","title":"\u4e0d\u540c\u786c\u4ef6\u7684\u4e13\u7528\u6a21\u578b","text":"<ul> <li>\u901a\u8fc7\u8fc5\u901f\u7ed3\u5408\u9884\u6d4b\u5ef6\u8fdf\u548c\u51c6\u786e\u5ea6\u6d4b\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e13\u4e1a\u5316\u7684\u6a21\u578b(Specialized Models)\u3002</li> <li>\u5982\u56fe\uff0c\u9488\u5bf9\u4e0d\u540c\u786c\u4ef6\u8fdb\u884c\u4e13\u4e1a\u5316\u540e\u7684\u6a21\u578b\uff0c\u5728\u4e0d\u540c\u786c\u4ef6\u4e0a\u8fd0\u884c\u901f\u5ea6\u4e5f\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u5728\u5bf9\u5e94\u786c\u4ef6\u4e0a\u5ef6\u8fdf\u6700\u4f4e\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981\u9488\u5bf9\u4e0d\u540c\u786c\u4ef6\u8fdb\u884c\u4e13\u4e1a\u5316NAS\u3002</li> </ul>"},{"location":"self_learn/efficientml/nas/#once-for-all-networkofa","title":"Once-for-All Network(OFA\u7f51\u7edc)","text":"<ul> <li>\u5bf9\u4e8e\u6bcf\u4e00\u6b21\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\u4e00\u4e2a\u7f51\u7edc\u5e76\u83b7\u53d6\u5ef6\u8fdf\u548c\u51c6\u786e\u6027\uff0c\u6210\u672c\u8f83\u6602\u8d35\u3002</li> <li>\u56e0\u6b64\u53ef\u4ee5\u8bad\u7ec3\u4e00\u4e2aOFA\u7f51\u7edc\uff0cOFA\u7f51\u7edc\u5305\u542b\u8bb8\u591a\u88ab\u7a00\u758f\u6fc0\u6d3b\u7684\u5b50\u7f51\u7edc\uff0c\u8fed\u4ee3\u4ece\u4e2d\u6311\u9009\u5b50\u7f51\u7edc\u4ee5\u53ca\u6743\u91cd\uff08\u901a\u5e38\u968f\u673a\u91c7\u6837\uff09\uff0c\u518d\u83b7\u53d6\u5ef6\u8fdf\u548c\u51c6\u786e\u6027\u8fdb\u884c\u8bad\u7ec3\uff0c\u6210\u672c\u8f83\u4fbf\u5b9c\u3002</li> <li>\u5173\u952e\u601d\u8def\u662f\uff1a\u4e00\u6b21\u8bad\u7ec3\uff0c\u591a\u91cd\u5229\u7528\uff0c\u4ee5\u964d\u4f4e\u8bbe\u8ba1\u6210\u672c\uff0c\u9002\u5e94\u4e0d\u540c\u7684\u786c\u4ef6\u7ea6\u675f\uff0c\u4ece\u800c\u4e3a\u65b0\u578b\u786c\u4ef6\u5e73\u53f0\u83b7\u53d6\u66f4\u5927\u7684\u5b50\u7f51\u7edc\uff0c\u4e3a\u65e7/\u6027\u80fd\u8f83\u5f31\u7684\u786c\u4ef6\u5e73\u53f0\u83b7\u53d6\u66f4\u5c0f\u7684\u5b50\u7f51\u7edc\u3002</li> </ul> <ul> <li> <p>\u5982\u4f55\u8bad\u7ec3OFA\u7f51\u7edc\u5462\uff1f</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u6e10\u8fdb\u5f0f\u6536\u7f29\u7684\u65b9\u6cd5\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u786c\u4ef6\u5e73\u53f0\uff0c\u5bf9\u5e94\u4e8eOFA\u7f51\u7edc\u4e2d\u7684\u4e0d\u540c\u5b50\u7f51\u7edc\uff0c\u6bcf\u4e00\u4e2a\u5b50\u7f51\u7edc\u7684\u5377\u79ef\u6838\u5927\u5c0f\u3001\u5c42\u6570\u3001\u901a\u9053\u6570\u90fd\u4e0d\u4e00\u6837\uff0c\u91c7\u7528\u6e10\u8fdb\u5f0f\u6536\u7f29\u7684\u65b9\u6cd5\uff0c\u6bcf\u4e00\u6b21\u6536\u7f29\u540e\u5bf9\u5e94\u4e8e\u4e00\u4e2a\u66f4\u5c0f\u7684\u5b50\u7f51\u7edc\u3002</li> <li>\u4f8b\u5982\u56fe\u4e2d\uff0c\u5bf9\u4e8eO1\u662f\u56db\u5c42\uff0c\u800c\u5bf9\u4e8eO3\u662f\u4e24\u5c42\u3002</li> </ul> <p></p> </li> <li> <p>\u5982\u4e0b\u56fe\uff0cOFA\u7f51\u7edc\u7528\u4e8e\u5404\u79cd\u8bbe\u5907\u65f6\uff0c\u5ef6\u8fdf\u4e0eTop-1\u51c6\u786e\u7387\u4e4b\u95f4\u7684\u5173\u7cfb\u3002</p> </li> </ul> <p></p>"},{"location":"self_learn/efficientml/nas/#neural-hardware-architecture-co-search","title":"Neural-hardware architecture co-search","text":"<p>TBD</p>"},{"location":"self_learn/efficientml/nas/#nas-applications","title":"NAS applications","text":"<p>TBD</p>"},{"location":"self_learn/efficientml/prune/","title":"Neural Network Pruning","text":"<p>Make neural network smaller by removing synapses and neurons</p>"},{"location":"self_learn/efficientml/prune/#pruning-at-different-granularities","title":"Pruning at Different Granularities","text":""},{"location":"self_learn/efficientml/prune/#pruning-criterion","title":"Pruning Criterion","text":""},{"location":"self_learn/efficientml/prune/#selection-of-synapses-to-prune","title":"Selection of Synapses to Prune","text":"<ul> <li>When removing neurons from a neural network model, <ul> <li>the less useful the neurons being removed are, </li> <li>the better the performance of pruned neural network is.</li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/prune/#magnitude-based-pruning","title":"Magnitude-based Pruning","text":""},{"location":"self_learn/efficientml/prune/#second-order-based-pruning","title":"Second-Order-based Pruning","text":""},{"location":"self_learn/efficientml/prune/#percentage-of-zero-based-pruning","title":"Percentage-of-Zero-Based Pruning","text":""},{"location":"self_learn/efficientml/prune/#regression-based-pruning","title":"Regression-based Pruning","text":""},{"location":"self_learn/efficientml/prune/#finding-pruning-ratios","title":"Finding Pruning Ratios","text":"<p>Analyze the sensitivity of each layer</p> <p></p>"},{"location":"self_learn/efficientml/prune/#automatic-pruning","title":"Automatic Pruning","text":""},{"location":"self_learn/efficientml/prune/#fine-tuning-training","title":"Fine-tuning / Training","text":""},{"location":"self_learn/efficientml/quantize/","title":"quantize (lec5-6)","text":""},{"location":"self_learn/efficientml/quantize/#k-means-based-quantization","title":"K-Means-based Quantization","text":"<p>\u5c06\u6743\u91cd\u5b58\u50a8\u4e3a </p>"},{"location":"self_learn/efficientml/quantize/#fine-tuning-quantized-weights","title":"Fine-tuning Quantized Weights","text":""},{"location":"self_learn/efficientml/quantize/#huffman-encoding","title":"Huffman Encoding","text":"<ul> <li>infrequent weights: use more bits to represent</li> <li>frequent weights: use less bits to represent</li> </ul> <p>K-Means-based Quantization only saves storage cost, All the computation and memory access are still floating-point</p>"},{"location":"self_learn/efficientml/quantize/#summary-of-deep-compression","title":"Summary of deep compression","text":""},{"location":"self_learn/efficientml/quantize/#linear-quantization","title":"Linear Quantization","text":"<p>Linear Quantization is an affine mapping of integers to real numbers</p> <p></p> <ul> <li> <p>\u5982\u4f55\u786e\u5b9a\u4e24\u4e2a\u672a\u77e5\u6570Z\u548cS\uff1f</p> <ul> <li> <p>\u5df2\u77e5 \\(\u200br_{\\min}\\), \\(r_{\\max}\\)\u200b\uff08\u539f\u59cb\u6570\u636e\uff09\u4e0e \\(\u200bq_{\\min}\\), \\(q_{\\max}\\)\uff08\u91cf\u5316\u6570\u636e\uff09\u200b\uff0c\u4ee5\u53ca\u6620\u5c04\u5173\u7cfb\u3002</p> </li> <li> <p>\u53ef\u4ee5\u5f97\u5230 \\(\u200bS=(r_{\\max}\u200b\u2212r_{\\min}\u200b)/(q_{\\max}\u200b\u2212q_{\\min}\u200b)\\) \u4e0e \\(\u200bZ={\\rm{round}}(q_{\\min}\u200b\u2212r_{\\min\u200b}/S)\\)</p> </li> </ul> \u8ba1\u7b97Z\u548cS <p> </p> <ul> <li>\u8003\u8651\u4e0b\u9762\u7684\u77e9\u9635\u4e58\u6cd5 \\(\u200bY=WX\\)</li> <li>\u6839\u636e\u7ecf\u9a8c\uff0c\u7f29\u653e\u56e0\u5b50 \u200b\\(S_W\u200bS_X\u200b/S_Y\\)\u200b \u603b\u662f\u5728\u533a\u95f4 (0,1) \u5185\u3002</li> <li>\\(\u200bZ_W\\)\u200b\u662f\u4e2d\u5fc3\u5bf9\u79f0\u5206\u5e03\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5\u8ba4\u4e3a\u662f0\uff0c\u5c06 \\(\u200bZ_W\\)\u200b \u6d88\u53bb\u3002</li> </ul> <p></p> <ul> <li> <p>\u5bf9\u4e8e\u5e26\u504f\u7f6e\u7684\u5168\u8fde\u63a5\u5c42\u8fdb\u884c\u7ebf\u6027\u91cf\u5316 \\(\u200bY=W_X+b\\)</p> <ul> <li>\u7531\u4e8e\u6743\u91cd\u5bf9\u79f0\u548c\u504f\u7f6e\u5bf9\u79f0\uff0c\u4e3a\u4e86\u7b80\u5316\u5f0f\u5b50\u540c\u6837\u53ef\u8bbe \\(\u200bZ_W\u200b=0\\) \u548c \\(\u200bZ_b\u200b=0\\) ,\u5e76\u4ee4 \\(\u200bS_b\u200b=S_W\u200bS_X\u200b\\)</li> <li>\u518d\u4ee4 \\(\u200bq_{bias}\u200b=q_b\u200b\u2212Z_X\u200bq_W\\)</li> </ul> <p></p> </li> <li> <p>\u5bf9\u4e8e\u5377\u79ef\u5c42\u4e2d\u7ebf\u6027\u91cf\u5316\uff0c \\(\u200bY={\\rm{Conv}}(W,X)+b\\) \uff0c\u7b80\u5316\u8fc7\u7a0b\u7c7b\u4f3c</p> <p></p> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/quantize/#post-training-quantizationptq","title":"Post-Training Quantization(PTQ)","text":""},{"location":"self_learn/efficientml/quantize/#quantization-granlularity","title":"Quantization Granlularity \u91cf\u5316\u7c92\u5ea6","text":"<p>\u6709\u4ee5\u4e0b\u91cf\u5316\u7c92\u5ea6\u53ef\u9009</p> <ul> <li>Per-Tensor Quantization\u9010\u5411\u91cf\u91cf\u5316</li> <li>Per-Channel Quantization\u9010\u901a\u9053\u91cf\u5316</li> <li>Group Quantization\u5206\u7ec4\u91cf\u5316<ul> <li>Pre-Vector Quantization\u9010\u5411\u91cf\u91cf\u5316</li> <li>Shared Micro-exponent (MX) data type\u5171\u4eab\u5fae\u6307\u6570</li> </ul> </li> </ul> <p></p> <ol> <li> <p>Per-Tensor Quantization\u9010\u5f20\u91cf\u91cf\u5316</p> <ul> <li> <p>\u5f20\u91cf\u91cf\u5316\u4e2d\uff0c\u53d6\u6743\u91cd\u7684\u6700\u5927\u7edd\u5bf9\u503c\u4e3a \\(\u200b|r|_{\\max}\u200b\\)\uff0c \u56e0\u6b64 \\(\u200b|r|_{\\max}=W_{\\max}\u200b\\)\u200b\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u6574\u4e2a\u5f20\u91cf\u4f7f\u7528\u540c\u4e00\u4e2a\u7f29\u653e\u56e0\u5b50S\uff0c\u5bf9\u4e8e\u5927\u6a21\u578b\u6bd4\u8f83\u9002\u7528\uff0c\u4f46\u662f\u5bf9\u4e8e\u5c0f\u6a21\u578b\u4f1a\u7cbe\u5ea6\u4e0b\u964d\u3002</p> </li> <li> <p>\u9020\u6210\u4e0a\u8ff0\u5931\u8d25\u7684\u539f\u56e0\u901a\u5e38\u662f\uff1a\u4e0d\u540c\u8f93\u51fa\u901a\u9053\u7684\u6743\u91cd\u8303\u56f4\u7684\u5927\u5dee\u5f02\uff08\u8d85\u8fc7100\u500d\uff09\u3002</p> </li> <li> <p>\u89e3\u51b3\uff1a\u4f7f\u7528\u9010\u901a\u9053\u91cf\u5316Per-Channel Quantization\uff0c\u5373\u6bcf\u4e2a\u901a\u9053\u4f7f\u7528\u5355\u72ec\u7684\u7f29\u653e\u56e0\u5b50\u3002</p> </li> </ul> </li> <li> <p>Per-Channel Quantization\u9010\u901a\u9053\u91cf\u5316</p> <ul> <li>\u6bcf\u4e2a\u901a\u9053\u4f7f\u7528\u5355\u72ec\u7684\u7f29\u653e\u56e0\u5b50\u3002</li> <li>\u4f18\u70b9\uff1a\u76f8\u6bd4\u4e8ePer-Tensor Quantization\u66f4\u7ec6\u7c92\u5ea6\uff0c\u91cf\u5316\u8bef\u5dee\u66f4\u5c0f\uff0c\u5728\u89c6\u89c9\u6a21\u578b\u4e2d\u8868\u73b0\u51fa\u8272\u3002</li> <li>\u7f3a\u70b9\uff1a\u9700\u8981\u989d\u5916\u7684\u5185\u5b58\u6765\u5b58\u50a8\u6bcf\u4e2a\u901a\u9053\u7684\u7f29\u653e\u56e0\u5b50\u3002</li> </ul> <p>\uff08\u6ce8\u610f\uff1a\u4e0b\u56fe\u4e2d\u4e24\u4e2aQuantization\u77e9\u9635\u6709\u4e00\u5904\u4e0d\u4e00\u6837\uff0c\u56e0\u4e3a\u7f29\u653e\u56e0\u5b50\u4e0d\u4e00\u6837\u3002</p> <p></p> </li> <li> <p>VS-Quant: Per-vector Scaled Quantization\u9010\u5411\u91cf\u91cf\u5316</p> <ul> <li> <p>\u5206\u7ec4\u91cf\u5316\u662f\u66f4\u7ec6\u7c92\u5ea6\u7684\u91cf\u5316\uff0c\u5bf9\u540c\u4e00\u4e2a\u901a\u9053\u91cc\u6bcf\u591a\u5c11\u4e2a\u5143\u7d20\u5206\u7ec4\u505a\u76f8\u540c\u7684\u91cf\u5316\u5904\u7406\u3002</p> </li> <li> <p>\u539f\u65b9\u7a0b \\(\u200br=S(q\u2212Z)\\) \u53d8\u4e3a \\(\u200br=\\gamma\u2217S_q\u200b(q\u2212z)\\)</p> <p>\u200b\\(\\gamma\\) \u662f\u4e00\u4e2a\u6d6e\u70b9\u6570\u7c97\u7c92\u5ea6\u7f29\u653e\u56e0\u5b50\uff0c\u4e00\u4e2a\u5f20\u91cf\uff08\u77e9\u9635\uff09\u5171\u4eab\u4e00\u4e2a \u200b\\(\\gamma\\) \uff1b \u200b\\(S_q\\)\u200b \u662f\u4e00\u4e2a\u6574\u6570\u7f29\u653e\u56e0\u5b50\uff0c\u6bcf\u4e2a\u5411\u91cf\u90fd\u6709\u4e00\u4e2a\u5355\u72ec\u7684 \\(\u200bS_q\\)\u200b\u3002</p> </li> <li> <p>\u7ec6\u7c92\u5ea6\u91c7\u7528\u66f4\u4fbf\u5b9c\u7684\u6574\u6570\u7f29\u653e\u56e0\u5b50\uff0c\u800c\u7c97\u7c92\u5ea6\u4f7f\u7528\u66f4\u6602\u8d35\u7684\u6d6e\u70b9\u6570\u7f29\u653e\u56e0\u5b50\uff0c\u4ee5\u6b64\u5b9e\u73b0\u7cbe\u786e\u7387\u548c\u786c\u4ef6\u6548\u7387\u7684\u5e73\u8861\u3002</p> </li> <li> <p>\u4f8b\u5b50\uff1a\u5982\u4f55\u8ba1\u7b97\u5b58\u50a8\u51ef\u5f00\u9500\uff1f</p> <p>\u7ed9\u5b9a\u4e00\u4e2a4\u4f4d\u91cf\u5316\uff0c\u5373\u6bcf\u4e2a\u91cf\u5316\u6570\u636e\u5143\u7d20\u67094\u4f4d\u5bbd\u5ea6\u3002\u6bcf16\u4e2a\u5143\u7d20\u4e3a\u4e00\u7ec4\u5171\u4eab\u4e00\u4e2a4\u4f4d\u7684\u7f29\u653e\u56e0\u5b50\uff0c\u5219\u6709\u6548\u4f4d\u5bbd\u5ea6\u4e3a \u200b4+4/16=4.25 \u4f4d\u3002</p> </li> </ul> <p></p> </li> <li> <p>Shared Micro-exponent (MX) data type\u5171\u4eab\u5fae\u6307\u6570</p> <ul> <li>\u5fae\u8f6f\u4f7f\u7528MX Data Type\u7528\u4e8e\u5206\u7ec4\u91cf\u5316\uff0c\u5206\u4e3aMX4\u3001MX6\u548cMX9\u4e09\u79cd\uff0c\u4e09\u8005\u5c3e\u6570\u4f4d\u4e0d\u540c\u62e5\u6709\u4e0d\u540c\u7684\u7cbe\u5ea6\u3002</li> <li>\u5982\u4e0b\u56fe\u4e94\u79cd\u5206\u7ec4\u91cf\u5316\uff1a<ul> <li>Per-Channel Quant\uff1a\u4f7f\u7528INT4\u7f16\u7801\u91cf\u5316\u540e\u7684\u6743\u91cd\uff1b\u200bL0 \u5206\u7ec4\u6309\u901a\u9053\u5206\u7ec4\u4e14\u7f29\u653e\u56e0\u5b50\u7528FP16\u7f16\u7801\u3002</li> <li>VSQ\uff1a\u4f7f\u7528INT4\u7f16\u7801\u91cf\u5316\u540e\u7684\u6743\u91cd\uff1b\u200bL0 \u6309\u6bcf16\u4e2a\u5143\u7d20\u5206\u7ec4\uff0c\u4f7f\u7528UNIT4\u7f16\u7801\u7f29\u653e\u56e0\u5b50\uff1b\u200bL1\u6309\u901a\u9053\u5206\u7ec4\uff0c\u4f7f\u7528FP16\u7f16\u7801\u7f29\u653e\u56e0\u5b50\u3002</li> <li>MX\uff1a\u4f7f\u7528S1M2/S1M4/S1M7\u7f16\u7801\u91cf\u5316\u540e\u7684\u6743\u91cd\uff0c\u5176\u4e2dS\u662f\u7b26\u53f7\u4f4d\uff0cM\u662f\u5c3e\u6570\u4f4d\uff1b\u200bL0 \u6309\u6bcf2\u4e2a\u5143\u7d20\u5206\u7ec4\uff0c\u4f7f\u7528E1M0\u5206\u7ec4\uff1b\u200bL1\u6309\u6bcf16\u4e2a\u5143\u7d20\u5206\u7ec4\uff0c\u4f7f\u7528E8M0\u5206\u7ec4\u3002<ul> <li>\u6ce8\u610f \u200bL0 \u548c \u200bL1 \u53ea\u6709\u6307\u6570\u4f4d\uff0c\u200bL1 \u4f7f\u752816\u4f4d\u6307\u6570\u4f4d\u62e5\u6709\u66f4\u9ad8\u7684\u52a8\u6001\u8303\u56f4\u3002</li> <li>MX\u540e\u9762\u7684\u6570\u5b57\u8868\u793a\u6709\u6548\u4f4d\u5bbd\uff0c\u5177\u4f53\u8ba1\u7b97\u89c1\u4e0b\u56fe\u3002</li> </ul> </li> </ul> </li> </ul> <p></p> </li> </ol>"},{"location":"self_learn/efficientml/quantize/#dynamic-range-clipping","title":"Dynamic Range Clipping\u52a8\u6001\u8303\u56f4\u88c1\u526a","text":"<ul> <li>\u4e0e\u6743\u91cd\u4e0d\u540c\uff0c\u6fc0\u6d3b\u8303\u56f4\u56e0\u8f93\u5165\u800c\u5f02\u3002</li> <li>\u8981\u786e\u5b9a\u6d6e\u70b9\u8303\u56f4\uff0c\u5c06\u5728\u90e8\u7f72\u6a21\u578b\u4e4b\u524d\u6536\u96c6\u6fc0\u6d3b\u7edf\u8ba1\u4fe1\u606f\u3002</li> <li> <p>\u91c7\u7528\u6fc0\u6d3b\u91cf\u5316\u7684\u65f6\u523b\u5206\u4e3a\u4e24\u79cd\uff1a</p> <ul> <li> <p>\u7c7b\u578b\u4e00\uff1a\u8bad\u7ec3\u671f\u95f4</p> <ul> <li>\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u8ddf\u8e2a\u6307\u6570\u79fb\u52a8\u5e73\u5747\u503c\u3002</li> <li>\u4f8b\u5982\uff1a\u5728\u6bcf\u4e2aepoch\u7ed3\u675f\u540e\uff0c\u68c0\u67e5\u8be5\u7279\u5b9a\u6279\u6b21\u7684 \u200b\\(R_{\\min}\u200b\\) \u548c \\(\u200bR_{\\max}\\)\u200b\uff0c\u6309\u7167\u4e0b\u5217\u516c\u5f0f\u8fdb\u884c\u66f4\u65b0\u3002\u7ecf\u8fc7\u6570\u5343\u4e2aepoch\u540e\u53d8\u5f97\u8303\u56f4\u7a33\u5b9a\u5e73\u6ed1\u3002</li> </ul> <p></p> </li> <li> <p>\u7c7b\u578b\u4e8c\uff1a\u5728\u8fd0\u884c\u65f6</p> <ul> <li>\u4f7f\u7528\u5c11\u91cf\u6821\u51c6\u6570\u636e\u96c6\u6765\u786e\u5b9aR\u7684\u6700\u5927\u503c\u6700\u5c0f\u503c\uff0c\u8fd9\u79cd\u65b9\u5f0f\u4e0d\u9700\u8981\u5927\u91cf\u7684\u8bad\u7ec3.</li> <li> <p>\u7b2c\u4e00\u79cd\u5047\u8bbe\u6fc0\u6d3b\u503c\u9075\u5faa\u9ad8\u65af\u6216\u62c9\u666e\u62c9\u65af\u51fd\u6570\u5206\u5e03\u89c4\u5f8b\u3002\u6700\u5c0f\u5316\u5747\u65b9\u8bef\u5dee \\(\u200b\\min_{|r|_{\\max}}\u200b\u200bE[(X\u2212Q(X))^2]\\)\u3002\u4f8b\u5982\u5bf9\u4e8e\u62c9\u666e\u62c9\u65af \u200b(0\uff0cb) \u5206\u5e03\uff0c\u6700\u4f73\u524a\u6ce2\u503c\u53ef\u4ee5\u6570\u503c\u6c42\u89e3\u4e3a\uff1a\u8bbe\u4e3a \\(\u200b|r|_{\\max}\u200b=2.83b,3.89b,5.03b\\) \u4ee5\u9002\u914d \u200b2,3,4bits \u7684\u91cf\u5316\u3002</p> <p></p> </li> <li> <p>\u7b2c\u4e8c\u79cd\u82e5\u6fc0\u6d3b\u503c\u4e0d\u9075\u5faa\u51fd\u6570\u5206\u5e03\u89c4\u5f8b\u3002\u4e3a\u4e86\u6700\u5c0f\u5316\u4fe1\u606f\u635f\u5931\uff0c\u53ef\u4ee5\u5229\u7528KL\u6563\u5ea6\uff0c\u56e0\u4e3aKL\u6563\u5ea6\u53ef\u4ee5\u6d4b\u91cf\u5728\u8fd1\u4f3c\u7ed9\u5b9a\u7f16\u7801\u65f6\u4e22\u5931\u7684\u4fe1\u606f\u91cf\uff0c\u4ee5\u6b64\u6765\u786e\u5b9a\u6700\u4f73\u7684\u526a\u679d\u4f4d\u7f6e\u3002\u4f7f\u7528KL\u6563\u5ea6\u8fdb\u884c\u88c1\u526a\u6fc0\u6d3b\u91cf\u5316\u7684\u6548\u679c\u5982\u4e0b\u56fe\uff1a</p> <p></p> </li> <li> <p>\u7b2c\u4e09\u79cd\u4f7f\u7528Newton-Raphson\u65b9\u6cd5\u6700\u5c0f\u5316\u5747\u65b9\u8bef\u5dee\u3002\u5b9a\u4e49MSE\u4e3a\u76ee\u6807\u51fd\u6570\uff0c\u8fed\u4ee3\u4e0d\u540c\u7684\u88c1\u526a\u529b\u5ea6\uff0c\u5bfb\u627e\u6700\u5c0f\u7684\u5747\u65b9\u8bef\u5dee\u3002\u53ef\u4ee5\u770b\u5230\u56fe\u4e2d\uff0c\u968f\u7740\u88c1\u526a\u6807\u91cf\u7684\u589e\u5927\uff0cMSE\u5148\u51cf\u540e\u589e\u3002</p> <p></p> </li> </ul> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/quantize/#rounding","title":"Rounding\u820d\u5165","text":"<ul> <li> <p>\u56db\u820d\u4e94\u5165(Rounding-to-nearest)</p> <ul> <li>\u6743\u91cd\u662f\u76f8\u4e92\u5173\u8054\u7684\u3002\u5bf9\u6bcf\u4e2a\u6743\u503c\u56db\u820d\u4e94\u5165\u6ca1\u6709\u8003\u8651\u5176\u4ed6\u5f20\u91cf\uff0c\u56e0\u6b64\u4e0d\u662f\u6574\u4e2a\u5f20\u91cf\u7684\u6700\u4f73\u820d\u5165</li> </ul> </li> <li> <p>\u81ea\u9002\u5e94\u820d\u5165(Adaptive Rounding)</p> <ul> <li>\u4e0d\u540c\u4e8e\u56db\u820d\u4e94\u5165\u7684\\(\\lfloor w \\rceil\\)\uff0cAdaRound\u5b66\u4e60\u4ece\\(\\{ \\lfloor w \\rfloor,  \\lceil w \\rceil\\}\\)\u200b\u4e2d\u8fdb\u884c\u9009\u62e9\uff0c\u4ee5\u5f97\u5230\u6700\u597d\u7684\u91cd\u5efa\u6548\u679c\u3002</li> <li>\u91c7\u7528\u4e00\u79cd\u57fa\u4e8e\u5b66\u4e60\u7684\u65b9\u6cd5\u6765\u5bfb\u627e\u91cf\u5316\u7684\u503c\uff0c\\(\\tilde w=\\lfloor\\lfloor w \\rfloor+\\delta\\rceil, \\delta\\in[0,1]\\)</li> <li>\u5728\u81ea\u9002\u5e94\u820d\u5165\u4e2d\uff0c\u4e0d\u5728\u610f\u5355\u4e2a\u6743\u91cd\uff0c\u901a\u8fc7\u6743\u91cd\u8f93\u51fa\u7684\u5dee\u5f02\u6765\u8861\u91cf\u820d\u5165\u7684\u5f71\u54cd\u8bbe\u8ba1\u4e86\u4ee5\u4e0b\u65b9\u7a0b\uff1a<ul> <li>\u5176\u4e2dx\u662f\u8be5\u5c42\u7684\u8f93\u5165\uff0cV\u662f\u76f8\u540c\u5f62\u72b6\u7684\u968f\u673a\u53d8\u91cf\u3002</li> <li>h()\u662f\u4e00\u4e2a\u6620\u5c04\u5230(0,1)\u7684\u51fd\u6570\uff0c\u7c7b\u4f3c\u4e8esigmoid\u51fd\u6570\u3002</li> <li>\u200bfreg\u200b(V) \u662f\u6b63\u5219\u5316\u9879\uff0c\u9f13\u52b1 \u200bh(V) \u4e8c\u5206\uff0c\u5373\u9f13\u52b1 \u200bh(V) \u8f93\u51fa0\u62161\u3002</li> </ul> </li> </ul> \\[ \\arg\\min\u200b_V||W_x\u2212\\lfloor\\lfloor W\\rfloor+h(V)\\rceil x||^2_F\u200b+\\lambda f_{reg}\u200b(V) \\] <p></p> </li> </ul>"},{"location":"self_learn/efficientml/quantize/#quantization-aware-training-qat","title":"Quantization-Aware Training (QAT)\u91cf\u5316\u611f\u77e5\u8bad\u7ec3","text":"<ul> <li> <p>\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u76f4\u63a5\u91cf\u5316\u4e00\u4e2a\u6a21\u578b\uff0c\u5176\u7cbe\u5ea6\u5c06\u4f1a\u4e0b\u964d\u3002QAT\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u6a21\u62df\u91cf\u5316\u7684\u6548\u679c\uff08\u4f2a\u91cf\u5316\u56e0\u5b50\uff09\uff0c\u4f7f\u5f97\u6a21\u578b\u80fd\u591f\u9002\u5e94\u91cf\u5316\u5e26\u6765\u7684\u4fe1\u606f\u635f\u5931\uff0c\u6062\u590d\u7cbe\u5ea6\u635f\u5931\u3002</p> </li> <li> <p>\u5bf9\u9884\u5148\u8bad\u7ec3\u7684\u6d6e\u70b9\u6a21\u578b\u8fdb\u884c\u5fae\u8c03\u6bd4\u4ece\u5934\u5f00\u59cb\u8bad\u7ec3\u63d0\u4f9b\u66f4\u597d\u7684\u7cbe\u5ea6\u3002</p> </li> </ul> <p>\u201c\u53c8\u53ef\u79f0\u4e4b\u4e3a\u5728\u7ebf\u91cf\u5316\u3002QAT\u548cPTQ\u6700\u5927\u7684\u533a\u522b\u662fQAT\u9700\u8981\u6570\u636e\u8bad\u7ec3\uff0c\u53ef\u4ee5\u7406\u89e3\u4e3a\u62ff\u7740\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u53c8\u505a\u4e86\u4e00\u6b21\u5fae\u8c03\u3002\u800cPTQ\u53ea\u662f\u62ff\u5c11\u91cf\u6821\u51c6\u6570\u636e\u8c03\u6574\u4e00\u4e9b\u53c2\u6570\u3002PTQ\u7684\u4f18\u70b9\u5c31\u662f\u5f88\u5feb\uff0c\u7f3a\u70b9\u5c31\u662f\u8fd8\u662f\u6709\u4e00\u4e9b\u7cbe\u5ea6\u635f\u5931\uff0c\u6548\u679c\u4e0d\u5982QAT\u7b97\u6cd5\u3002\u4e3a\u4e86\u964d\u4f4e\u91cf\u5316\u540e\u51c6\u786e\u7387\u7684\u635f\u5931\uff0c\u4e0d\u5c11\u65b9\u6cd5\u4f1a\u5728\u8bad\u7ec3\u65f6\u5f15\u5165\u91cf\u5316\u64cd\u4f5c\uff0c\u8ba9\u91cf\u5316\u4e4b\u540e\u7684\u6743\u91cd\u548c\u6fc0\u6d3b\u503c\u53bb\u53c2\u4e0e\u7f51\u7edc\u7684\u8bad\u7ec3\uff0c\u8fd9\u79cd\u65b9\u5f0f\u79f0\u4e4b\u4e3a\u91cf\u5316\u611f\u77e5\u8bad\u7ec3\u5373QAT\u3002\u201d</p> <ul> <li> <p>\u6a21\u62df\u91cf\u5316\uff1a\u5728\u6a21\u578b\u7684\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u5c06\u6743\u91cd\u548c\u6fc0\u6d3b\u503c\u901a\u8fc7\u91cf\u5316\u548c\u53cd\u91cf\u5316\u7684\u8fc7\u7a0b\uff0c\u6a21\u62df\u91cf\u5316\u5728\u5b9e\u9645\u90e8\u7f72\u4e2d\u7684\u6548\u679c\uff0c\u5373\u6743\u91cd\u548c\u6fc0\u6d3b\u503c\u5148\u88ab\u91cf\u5316\u5230\u4f4e\u4f4d\u5bbd\u7684\u6574\u6570\u8868\u793a\uff0c\u7136\u540e\u518d\u88ab\u53cd\u91cf\u5316\u56de\u6d6e\u70b9\u6570\u3002\u5728\u524d\u5411\u4f20\u64ad\u65f6\u6743\u91cd\u4f1a\u88ab\u91cf\u5316\u4e3a8\u4f4d\u6574\u6570\uff0c\u4f46\u5728\u53cd\u5411\u4f20\u64ad\u65f6\u4ecd\u7136\u4f7f\u7528\u539f\u59cb\u7684\u6d6e\u70b9\u6570\u8fdb\u884c\u68af\u5ea6\u8ba1\u7b97\uff0c\u4f7f\u5f97\u6a21\u578b\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u201c\u611f\u77e5\u201d\u5230\u91cf\u5316\u6240\u5e26\u6765\u7684\u8bef\u5dee\u3002</p> </li> <li> <p>\u53cd\u5411\u4f20\u64ad\u8c03\u6574\uff1a\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u5047\u91cf\u5316\u8282\u70b9\u4f1a\u8ba1\u7b97\u91cf\u5316\u8bef\u5dee\uff0c\u5e76\u5c06\u5176\u7eb3\u5165\u5230\u68af\u5ea6\u8ba1\u7b97\u4e2d\u3002\u8fd9\u6837\uff0c\u6a21\u578b\u7684\u6743\u91cd\u4f1a\u9010\u6e10\u8c03\u6574\uff0c\u4ee5\u9002\u5e94\u91cf\u5316\u540e\u7684\u8868\u73b0\u3002</p> </li> </ul>"},{"location":"self_learn/efficientml/quantize/#straight-through-estimator-ste","title":"Straight-Through Estimator (STE)","text":"<ul> <li>\u5728\u795e\u7ecf\u7f51\u7edc\u8bad\u7ec3\u4e2d\uff0c\u53cd\u5411\u4f20\u64ad\u7b97\u6cd5\u4f9d\u8d56\u4e8e\u94fe\u5f0f\u6cd5\u5219\uff0c\u9700\u8981\u5bf9\u635f\u5931\u51fd\u6570\u76f8\u5bf9\u4e8e\u6bcf\u4e00\u5c42\u53c2\u6570\u8fdb\u884c\u68af\u5ea6\u8ba1\u7b97\u3002\u7136\u800c\uff0c\u91cf\u5316\u51fd\u6570\u901a\u5e38\u662f\u4e0d\u53ef\u5fae\u7684\uff08\u4f8b\u5982\u53d6\u6574\u51fd\u6570\uff09\uff0c\u8fd9\u5c31\u4f7f\u5f97\u76f4\u63a5\u8ba1\u7b97\u68af\u5ea6\u53d8\u5f97\u56f0\u96be\u3002\u56e0\u6b64\uff0cSTE \u88ab\u5f15\u5165\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002</li> <li>STE \u7684\u6838\u5fc3\u601d\u60f3\uff1a\u5728\u524d\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u5b9e\u9645\u7684\u91cf\u5316\u51fd\u6570\uff0c\u800c\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0c\u901a\u8fc7\u4e00\u79cd\u8fd1\u4f3c\u65b9\u6cd5\u6765\u8ba1\u7b97\u68af\u5ea6\uff0c\u4ece\u800c\u4f7f\u8bad\u7ec3\u8fc7\u7a0b\u80fd\u591f\u987a\u5229\u8fdb\u884c\u3002</li> <li>\u5728\u53cd\u5411\u4f20\u64ad\u8fc7\u7a0b\u4e2d\uff0cSTE \u8fd1\u4f3c\u5730\u5c06\u91cf\u5316\u51fd\u6570\u7684\u68af\u5ea6\u89c6\u4e3a\u6052\u7b49\u51fd\u6570\u7684\u68af\u5ea6\uff08\u539f\u672c\u91cf\u5316\u51fd\u6570\u7684\u68af\u5ea6\u5e94\u8be5\u662f\u6052\u4e3a0\uff09\u3002\u8fd9\u610f\u5473\u7740\uff0c\u867d\u7136\u524d\u5411\u4f20\u64ad\u4f7f\u7528\u4e86\u91cf\u5316\u51fd\u6570\uff0c\u4f46\u5728\u53cd\u5411\u4f20\u64ad\u65f6\uff0c\u6211\u4eec\u5047\u8bbe\u91cf\u5316\u51fd\u6570\u5bf9\u8f93\u5165\u7684\u68af\u5ea6\u4e3a1\u3002</li> </ul> \\[ g_w=\\frac{\\partial L}{\\partial W}=\\frac{\\partial L}{\\partial Q(W)}\\cdot\\frac{\\partial Q(W)}{\\partial W}=\\frac{\\partial L}{\\partial Q(W)} \\] <p>\u5982\u4e0b\u56fe\uff0c\u7ecf\u8fc7QAT\u540e\u51c6\u786e\u7387\u63d0\u5347\u6548\u679c\u663e\u8457\u3002\u5c24\u5176\u662f\u5bf9\u4e8ePer-Tensor\u7ecf\u8fc7QAT\u540e\u51c6\u786e\u7387\u4ece0.1%\u63d0\u5347\u81f370%\u3002</p> <p></p>"},{"location":"self_learn/efficientml/tinyml/","title":"TinyML (lec10-11)","text":""},{"location":"self_learn/efficientml/tinyml/#tinyml","title":"TinyML","text":""},{"location":"self_learn/efficientml/tinyml/#tinyml_1","title":"TinyML\u7684\u6311\u6218","text":"<ul> <li> <p>\u6743\u91cd\u548c\u6fc0\u6d3b\u5728\u5185\u5b58\u65b9\u9762\u7684\u7ea6\u675f\u6761\u4ef6\u662f\u4ec0\u4e48\uff1f</p> <ul> <li>\u8f93\u5165\u6fc0\u6d3b\u548c\u8f93\u51fa\u6fc0\u6d3b\uff0c\u6211\u4eec\u5fc5\u987b\u5c06\u5176\u5b58\u50a8\u5728\u53ef\u8bfb\u5199\u7684\u5185\u5b58\uff08SRAM\uff09\u4e2d</li> <li> <p>\u4f46\u5bf9\u4e8e\u6838\u548c\u6743\u91cd\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u4eec\u5b58\u50a8\u5728\u95ea\u5b58\u4e2d\uff08\u4e5f\u53ef\u4ee5\u5728DRAM\uff0c\u4f46\u662f\u5fae\u63a7\u5236\u5668\u901a\u5e38\u6ca1\u6709DRAM\uff09</p> <p></p> </li> </ul> </li> <li> <p>Flash\u7528\u9014</p> <ul> <li>=\u6a21\u578b\u5927\u5c0f</li> <li>\u9759\u6001\u7684\uff0c\u9700\u8981\u4fdd\u6301\u6574\u4e2a\u6a21\u578b</li> </ul> </li> <li>SRAM\u7528\u9014<ul> <li>=\u8f93\u5165\u6fc0\u6d3b+\u8f93\u51fa\u6fc0\u6d3b</li> <li>\u52a8\u6001\u7684\uff0c\u6bcf\u4e00\u5c42\u5927\u5c0f\u90fd\u4e0d\u540c</li> <li>\u7531\u4e8e\u6bcf\u4e00\u5c42\u90fd\u9700\u8981\u8ba1\u7b97\u65b0\u7684\u6fc0\u6d3b\u503c\uff0c\u56e0\u6b64\u5173\u6ce8\u5cf0\u503cSRAM</li> <li>\u6743\u91cd\u4e0d\u8ba1\u7b97\uff0c\u56e0\u4e3a\u5b83\u4eec\u53ef\u4ee5\u90e8\u5206\u5b58\u53d6</li> </ul> </li> <li> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u4e0d\u4ec5\u5e0c\u671b\u51cf\u5c0f\u6a21\u578b\u5927\u5c0f\uff0c\u4e5f\u5e0c\u671b\u51cf\u5c0f\u6fc0\u6d3b\u5927\u5c0f\u3002</p> <ul> <li>\u4e24\u8005\u5e76\u4e0d\u662f\u540c\u4e00\u4e2a\u95ee\u9898\uff0c\u5982\u56fe\u4e2d\u6a21\u578b\u5927\u5c0f\u51cf\u5c0f4.6\u00d7\uff0c\u4f46\u662f\u6fc0\u6d3b\u5927\u5c0f\u53cd\u800c\u589e\u52a0\u4e861.8\u00d7</li> <li>\u672clecture\u5373\u5c06\u4ecb\u7ecd\u7684MCUNet\u4e0d\u4ec5\u51cf\u5c11\u6a21\u578b\u5927\u5c0f\uff0c\u800c\u4e14\u51cf\u5c11\u6fc0\u6d3b\u5927\u5c0f\u3002</li> </ul> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#_1","title":"\u5fae\u578b\u795e\u7ecf\u7f51\u7edc\u8bbe\u8ba1","text":""},{"location":"self_learn/efficientml/tinyml/#mcunet-system-algorithm-co-design","title":"MCUNet: System-Algorithm Co-design","text":"<ul> <li> <p>\u4e09\u4e2a\u7814\u7a76\u65b9\u5411</p> <ol> <li>\u5728\u7ed9\u5b9a\u7684\u63a8\u7406\u5e93\u57fa\u7840\u4e0a\uff0c\u76ee\u6807\u5bfb\u627e\u80fd\u591f\u5feb\u901f\u8fd0\u884c\u7684\u6700\u4f73\u6a21\u578b\u67b6\u6784(NAS)\u3002</li> <li>\u9488\u5bf9\u7ed9\u5b9a\u795e\u7ecf\u7f51\u7edc\uff0c\u76ee\u6807\u5f00\u53d1\u8bbe\u8ba1\u63a8\u7406\u5e93\u4e0e\u63a8\u7406\u5f15\u64ce\u3002</li> <li>\u795e\u7ecf\u67b6\u6784\u641c\u7d22\u548c\u63a8\u7406\u5f15\u64ce\u5171\u540c\u8bbe\u8ba1\u3002<ul> <li>\u795e\u7ecf\u67b6\u6784\u641c\u7d22\u4e3a\u63a8\u7406\u5f15\u64ce\u63d0\u4f9b\u9ad8\u6548\u7684\u795e\u7ecf\u67b6\u6784\u3002</li> <li>\u63a8\u7406\u5f15\u64ce\u4e3a\u795e\u7ecf\u67b6\u6784\u641c\u7d22\u63d0\u4f9b\u975e\u5e38\u9ad8\u6548\u7684\u7f16\u8bd1\u5668\u4e0e\u8fd0\u884c\u65f6\u73af\u5883\uff0c\u4ee5\u652f\u6301\u8fd9\u4e9b\u9ad8\u6548\u6a21\u578b\u7684\u8fd0\u884c\u3002</li> </ul> </li> </ol> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#tinynas-two-stage-nas-for-tiny-memory-constraints","title":"TinyNAS: Two-Stage NAS for Tiny Memory Constraints","text":"<ul> <li> <p>\u95ee\u9898\uff1a\u4ec0\u4e48\u662f\u6b63\u786e\u7684\u641c\u7d22\u7a7a\u95f4\uff1f</p> <ul> <li>\u641c\u7d22\u7a7a\u95f4\u7684\u8d28\u91cf\u5728\u5f88\u5927\u7a0b\u5ea6\u4e0a\u51b3\u5b9a\u4e86\u641c\u7d22\u6a21\u578b\u7684\u6027\u80fd\u3002\u5728\u5b8c\u6574\u7684\u7f51\u7edc\u7a7a\u95f4\u4e2d\uff0c\u53ef\u80fd\u5b58\u5728\u591a\u4e2a\u66f4\u4f18\u7684\u5b50\u7a7a\u95f4\u3002 1. \u9009\u98791\uff1a\u91cd\u590d\u5229\u7528\u66fe\u7ecf\u4e3a\u79fb\u52a8AI\uff08\u4f8b\uff1aMobileNet\u3001MnasNet\uff09\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u641c\u7d22\u7a7a\u95f4\u3002<ul> <li>\u641c\u7d22\u7a7a\u95f4\u4e2d\u6700\u5c0f\u7684\u5b50\u7f51\u7edc\u7531\u4e8e\u5de8\u5927\u7684\u5dee\u8ddd\u800c\u65e0\u6cd5\u9002\u5e94\u786c\u4ef6\u3002 2. \u9009\u98792\uff1a\u4e3a\u7269\u8054\u7f51\u8bbe\u5907\u9009\u62e9\u4e00\u4e2a\u641c\u7d22\u7a7a\u95f4\uff08\u66f4\u660e\u667a\u7684\u9009\u62e9\uff09</li> </ul> </li> </ul> </li> <li> <p>\u95ee\u9898\uff1a\u5982\u4f55\u6269\u5c55\u7c7b\u4f3c\u4e8eMBNet-alike\u7684\u641c\u7d22\u7a7a\u95f4\uff1f</p> <ul> <li>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u7684width multiplier\u5bbd\u5ea6\u56e0\u5b50W\u548cresolution multiplier\u5206\u8fa8\u7387\u56e0\u5b50R\u6765\u7f29\u653e\u7c7b\u4f3cmbnet\u7684\u641c\u7d22\u7a7a\u95f4\u3002<ul> <li>width multiplier\u4e3b\u8981\u662f\u6309\u6bd4\u4f8b\u51cf\u5c11\u8f93\u5165\u8f93\u51fa\u901a\u9053\u6570\uff0cresolution multiplier\u4e3b\u8981\u662f\u6309\u6bd4\u4f8b\u964d\u4f4e\u7279\u5f81\u56fe\u7684\u5927\u5c0f\u3002\u6765\u81eaEfficient Convolutional Neural Networks for Mobile Vision Applications</li> <li>\u4e00\u4e2a\u7279\u5b9a\u7684R\u548cW\u4f1a\u5f97\u5230\u4e00\u4e2a\u5b50\u641c\u7d22\u7a7a\u95f4\u3002</li> <li>\u4f8b\u5982\uff1a\u667a\u80fd\u624b\u673a\u9002\u5408R=224,W=1.0\uff1bGPUs\u9002\u5408R=224,W=1.4\u3002</li> </ul> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#tinyengine","title":"TinyEngine","text":""},{"location":"self_learn/efficientml/tinyml/#introduction-to-edge-ai","title":"Introduction to Edge AI","text":"<ul> <li>\u8fb9\u7f18\u8bbe\u5907\u5728\u6211\u4eec\u7684\u65e5\u5e38\u751f\u6d3b\u4e2d\u662f\u65e0\u5904\u4e0d\u5728\u7684\u548c\u529f\u7387\u5e7f\u6cdb\u7684\u5e94\u7528\uff1a\u667a\u80fd\u624b\u673a\u3001\u673a\u5668\u4eba\u3001\u8f66\u8f86\u3001\u529e\u516c\u8bbe\u5907\u3001\u65e0\u7ebf\u7535\u6536\u53d1\u5668\u3001\u81ea\u52a8\u552e\u8d27\u673a\u53ca\u5bb6\u5ead\u7535\u5668\u7b49\u3002</li> <li>\u4ece\u4e91\u8ba1\u7b97\u5230\u8fb9\u7f18\u8ba1\u7b97\uff0c\u8fd9\u4e00\u8f6c\u53d8\u51f8\u663e\u4e86\u8d44\u6e90\u6709\u9650\u7684\u6311\u6218\u3002\u5982\u4e0b\u56fe\u5bf9\u6bd4\u4e86\u4e91\u8ba1\u7b97\u4e0e\u8fb9\u7f18\u8ba1\u7b97\u5e38\u89c1\u8bbe\u5907\u7684\u8d44\u6e90\u91cf\u3002</li> </ul>"},{"location":"self_learn/efficientml/tinyml/#parallel-computing-techniques","title":"Parallel computing techniques","text":"<ul> <li> <p>\u5e76\u884c\u8ba1\u7b97\u6280\u672f\u6709\u5229\u4e8e\u8fb9\u7f18\u8bbe\u5907\u5229\u7528\u6709\u9650\u7684\u8d44\u6e90\u8fdb\u884c\u673a\u5668\u5b66\u4e60\u3002</p> <ul> <li>\u5e76\u884c\u8ba1\u7b97\u6280\u672f\u4e0d\u4ec5\u6709\u52a9\u4e8e\u5c0f\u578b\u673a\u5668\u5b66\u4e60\uff0c\u4e5f\u6709\u52a9\u4e8e\u5927\u578b\u673a\u5668\u5b66\u4e60\u3002\u5bf9\u4e8e\u5927\u578b\u673a\u5668\u5b66\u4e60\u6a21\u578b\uff0c\u6211\u4eec\u6709\u8bb8\u591a\u7a7a\u95f4\u5728\u4e0d\u540c\u7ef4\u5ea6\u4e0a\u5e76\u884c\u5316\u8ba1\u7b97\u3002</li> <li>\u5e76\u884c\u8ba1\u7b97\u6280\u672f\u5bf9\u4e8e\u63a8\u7406\u548c\u8bad\u7ec3\u90fd\u5f88\u91cd\u8981\u3002</li> </ul> </li> <li> <p>\u7b2c\u4e8c\u7ae0\u5c06\u4ecb\u7ecd\u56db\u79cd\u5e7f\u6cdb\u5e94\u7528\u4e8e\u5c0f\u578b\u548c\u5927\u578b\u673a\u5668\u5b66\u4e60\u7684\u5e76\u884c\u8ba1\u7b97\u6280\u672f</p> <ul> <li>Loop optimization\u5faa\u73af\u4f18\u5316</li> <li>SIMD(single instruction, multiple data) programming</li> <li>Multithreading\u591a\u7ebf\u7a0b</li> <li>CUDA programming</li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#loop-optimization","title":"Loop optimization","text":"<ul> <li>Loop optimization\u4e3b\u8981\u6db5\u76d6\u4ee5\u4e0b\u4e09\u4e2a\u5b50\u6982\u5ff5<ul> <li>Loop reordering\u5faa\u73af\u91cd\u6392</li> <li>Loop tiling\u5faa\u73af\u6574\u7406</li> <li>Loop unrolling\u5faa\u73af\u5c55\u5f00</li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#loop-reordering","title":"Loop reordering\u5faa\u73af\u91cd\u6392","text":"<ul> <li>\u5b9a\u4e49\uff1a\u901a\u8fc7\u91cd\u65b0\u6392\u5e8f\u5faa\u73af\u7684\u5e8f\u5217\u6765\u4f18\u5316\u5c40\u90e8\u6027\u3002</li> <li>\u5c40\u90e8\u6027\uff1a\u5728\u64cd\u4f5c\u7cfb\u7edf\u8bfe\u7a0b\u4e2d\uff0c\u6211\u4eec\u77e5\u9053\u7cfb\u7edf\u4f1a\u5c06\u6700\u8fd1\u8bbf\u95ee\u7684\u5757\u4ece\u78c1\u76d8\u88c5\u5165\u4e3b\u5b58\u4e2d\uff0c\u4ee5\u4fbf\u4e0b\u4e00\u6b21\u5feb\u901f\u8bfb\u53d6\uff0c\u800c\u6570\u7ec4\u4e2d\u76f8\u90bb\u7684\u6570\u5f80\u5f80\u5b58\u50a8\u5728\u540c\u4e00\u4e2a\u5757\u4e2d\uff0c\u4e00\u8d77\u88ab\u88c5\u5165\u4e3b\u5b58\u3002</li> <li>\u5bf9\u4e8e\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u5b58\u5728\u5927\u91cf\u5377\u79ef\u548c\u77e9\u9635\u4e58\u6cd5\uff0c\u90fd\u6d89\u53ca\u5230\u5f20\u91cf\u7684\u8fd0\u7b97\u3002\u56e0\u6b64\u8003\u8651\u5faa\u73af\u4e2d\u7684\u5c40\u90e8\u6027\u5f71\u54cd\uff0c\u6709\u5229\u4e8e\u4f18\u5316\u8fd0\u884c\u901f\u5ea6\u548c\u5f00\u9500\u3002</li> <li> <p>\u5982\u4e0b\u56fe\u4e2d\uff0c\u5bf9\u4e8e\u77e9\u9635\u4e58\u6cd5 \\(C=A*B\\)\uff0c\u6709\u4e24\u79cd\u5faa\u73af\u65b9\u5f0f \\((i,j,k)\\) \u548c \\((i,k,j)\\)\uff0c\u660e\u663e\u540e\u8005\u7684\u5c40\u90e8\u6027\u66f4\u597d\u3002</p> <ul> <li>\u5bf9\u4e8e \\((i,j,k)\\) \u7684\u5faa\u73af\u65b9\u5f0f\uff0c\u77e9\u9635B\u5c40\u90e8\u6027\u8f83\u5dee\uff0c\u6bcf\u4e00\u6b21\u8bbf\u95ee\u51e0\u4e4e\u90fd\u4f1a\u5bfc\u81f4\u7f3a\u9875\u4e2d\u65ad\uff0c\u964d\u4f4e\u8fd0\u884c\u901f\u5ea6\u3002</li> <li> <p>\u5bf9\u4e8e \\((i,k,j)\\) \u7684\u5faa\u73af\u65b9\u5f0f\uff0c\u77e9\u9635A\u548cB\u7684\u5c40\u90e8\u6027\u90fd\u5f88\u597d\uff0c\u4f46\u662f\u77e9\u9635C\u7684\u5c40\u90e8\u6027\u76f8\u5bf9\u8f83\u5dee\uff0c\u4f46\u662f\u4ecd\u662f\u4e00\u884c\u4e00\u884c\u8bbf\u95ee\uff0c\u6743\u8861\u4e4b\u4e0b\u5c40\u90e8\u6027\u66f4\u597d\u3002</p> <p></p> </li> <li> <p>\u4ece\u5b9e\u9a8c\u6570\u636e\u53ef\u4ee5\u770b\u51fa\uff0c\u6539\u8fdb\u540e\u7684\u8fd0\u884c\u65f6\u95f4\u4ece24296ms\u964d\u4f4e\u81f31979ms\u3002\u53ef\u89c1Loop reordering\u5bf9\u7a0b\u5e8f\u5c40\u90e8\u6027\u7684\u63d0\u5347\u6548\u679c\u663e\u8457\u3002</p> <p></p> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#loop-tiling","title":"Loop tiling\u5faa\u73af\u6574\u7406","text":"<ul> <li>\u5b9a\u4e49\uff1a\u901a\u8fc7\u5212\u5206\u5faa\u73af\u7684\u8fed\u4ee3\u7a7a\u95f4\u6765\u51cf\u5c11\u5185\u5b58\u8bbf\u95ee\u3002</li> <li>\u5982\u679c\u6570\u636e\u6bd4\u7f13\u5b58\u5927\u5c0f\u5927\u5f88\u591a\u4f1a\u600e\u4e48\u6837\uff1f<ul> <li>\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u88ab\u518d\u6b21\u4f7f\u7528\u524d\u88ab\u91ca\u653e\uff0c\u5bfc\u81f4\u7f3a\u9875\u4e2d\u65ad\u6b21\u6570\u589e\u52a0\u3002</li> </ul> </li> <li> <p>Loop tiling\u5faa\u73af\u6574\u7406\u5982\u4f55\u51cf\u5c0f\u7f3a\u9875\u4e2d\u65ad</p> <ul> <li>\u5206\u533a\u5faa\u73af\u8fed\u4ee3\u7a7a\u95f4</li> <li>\u4f7f\u5f97\u5faa\u73af\u4e2d\u7684\u8bbf\u5b58\u6570\u636e\u9002\u5e94\u7f13\u5b58\u5927\u5c0f</li> <li>\u786e\u4fdd\u6570\u636e\u5728\u88ab\u518d\u6b21\u4f7f\u7528\u524d\u7559\u5728\u7f13\u5b58\u4e2d</li> </ul> </li> <li> <p>\u5982\u4e0b\u4e09\u5f20\u56fe\uff0c\u5bf9 \\((i,k,j)\\) \u4f9d\u6b21\u5faa\u73af\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u4f9d\u6b21\u5bf9 \\((j,k,i)\\) \u8fdb\u884c\u5206\u5757\u5904\u7406\uff0c\u5212\u5206\u4e3a\u5927\u5c0f\u4e3a \\(TILE\\_SIZE\\) \u7684\u5757\uff0c\u4f7f\u5f97\u6bcf\u6b21\u8bbf\u95ee\u7684\u5927\u5c0f\u6ee1\u8db3\u5c0f\u4e8e\u7f13\u5b58\u5927\u5c0f\uff0c\u51cf\u5c11\u7f3a\u9875\u4e2d\u65ad\u3002</p> <ul> <li>\u5bf9j\u8fdb\u884c\u5206\u5757\u5904\u7406\uff0c\u5212\u5206\u4e3a\u6bcf\u6b21\u904d\u5386\u5927\u5c0f\u4e3a \\(TILE\\_SIZE\\)\uff0c\u5219\u77e9\u9635B\u6bcf\u6b21\u8bbf\u95ee\u7684\u5927\u5c0f\u4eceN2\u53d8\u4e3a \\(N*TILE\\_SIZE\\)</li> <li>\u5bf9k\u4e5f\u8fdb\u884c\u5206\u5757\u5904\u7406\u3002\u5219\u77e9\u9635B\u6bcf\u6b21\u8bbf\u95ee\u7684\u5927\u5c0f\u53d8\u4e3a \\(TILE\\_SIZE2\\)\uff0c\u77e9\u9635A\u6bcf\u6b21\u8bbf\u95ee\u7684\u5927\u5c0f\u53d8\u4e3a \\(N*TILE\\_SIZE\\)</li> <li> <p>\u5bf9i\u8fdb\u884c\u5206\u5757\u5904\u7406\uff0c\u5219\u77e9\u9635A\u6bcf\u6b21\u8bbf\u95ee\u7684\u5927\u5c0f\u53d8\u4e3a \\(TILE\\_SIZE2\\)\uff0c\u4e14\u77e9\u9635C\u6bcf\u6b21\u8bbf\u95ee\u7684\u5927\u5c0f\u4e5f\u53d8\u4e3a \\(TILE\\_SIZE2\\)\u3002</p> <p></p> <p></p> <p></p> <p></p> </li> <li> <p>\\(TILE\\_SIZE\\) \u7684\u5927\u5c0f\u53ef\u4ee5\u6839\u636e\u9ad8\u901f\u7f13\u5b58\u7684\u5927\u5c0f\u6765\u786e\u5b9a\u3002</p> </li> <li>\u6bcf\u6b21\u8bbf\u95ee\u7684\u6570\u636e\u5927\u5c0f\u9002\u914d\u7f13\u5b58\u5927\u5c0f-&gt;\u91cd\u7528\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u6570\u589e\u52a0-&gt;\u7f13\u5b58\u7f3a\u5931\u6570\u4e0b\u964d\u3002</li> </ul> </li> <li> <p>Multilevel tiling</p> </li> </ul> <p>\u5bf9\u4e8e\u5b58\u5728\u591a\u7ea7\u7f13\u5b58\u7684\u5e73\u53f0\uff0c\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u8003\u8651\u5404\u7ea7\u7f13\u5b58\u7684\u5927\u5c0f\uff0c\u4f8b\u5982\u4e0b\u56fe\u4e2d\u8fdb\u4e00\u6b65\u5212\u5206j\uff0c\u4f7f\u5f97\u6700\u5c0f\u7684\u4e09\u4e2a\u5faa\u73af\u5373\u6bcf\u6b21\u8bbf\u95ee\u7684\u6570\u636e\u5927\u5c0f\u7b49\u4e8eL1 Cache\uff0c\u6700\u5c0f\u7684\u56db\u4e2a\u5faa\u73af\u8bbf\u95ee\u6570\u636e\u5927\u5c0f\u7b49\u4e8eL2 Cache\u3002</p> <p></p> <p>\u5982\u4e0b\u56fe\u901a\u8fc7\u516d\u4e2a\u5faa\u73af\u8fdb\u884c\u5faa\u73af\u6574\u7406\u540e\uff0c\u8fd0\u884c\u65f6\u95f4\u4ece24296ms\u964d\u4f4e\u52301269ms\u3002</p> <p></p>"},{"location":"self_learn/efficientml/tinyml/#loop-unrolling","title":"Loop unrolling\u5faa\u73af\u5c55\u5f00","text":"<ul> <li>\u5b9a\u4e49\uff1a\u4ee5\u727a\u7272\u5176\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u5927\u5c0f\u4e3a\u4ee3\u4ef7\u6765\u51cf\u5c11\u5206\u652f\u5f00\u9500\u3002</li> <li>\u5faa\u73af\u63a7\u5236\u9020\u6210\u7684\u5f00\u9500<ul> <li>\u6307\u9488\u7684\u7b97\u672f\u64cd\u4f5c</li> <li>\u5faa\u73af\u7ed3\u675f\u6761\u4ef6\u6d4b\u8bd5</li> <li>\u5206\u652f\u9884\u6d4b</li> </ul> </li> <li> <p>\u901a\u8fc7\u5faa\u73af\u5c55\u5f00\u51cf\u5c0f\u7684\u5f00\u9500</p> <ul> <li>\u6bcf\u6b21\u91cd\u590d\u5faa\u73af\u4f53</li> <li>\u6743\u8861\u4e8c\u8fdb\u5236\u5927\u5c0f\u548c\u51cf\u5c0f\u7684\u5f00\u9500</li> </ul> </li> <li> <p>\u5982\u56fe\uff0c\u5bf9\u539f\u5faa\u73af\u8fdb\u884c\u6539\u8fdb\uff0c\u6bcf\u4e00\u6b21\u5faa\u73af\u6267\u884c\u56db\u4e2a\u6b65\u957f\u7684k</p> <ul> <li>\u5bf9\u6307\u9488\u7684\u7b97\u672f\u64cd\u4f5c\uff1a\\(N^3\u2212&gt;1/4N^3\\)</li> <li>\u5faa\u73af\u7ed3\u675f\u6761\u4ef6\u6d4b\u8bd5\uff1a\\(N^3\u2212&gt;1/4N^3\\)</li> <li>\u6700\u5185\u90e8\u5faa\u73af\u7684\u4ee3\u7801\u5927\u5c0f\uff1a\\(1\\rightarrow4\\)</li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#simd-programming","title":"SIMD programming","text":"<ul> <li>\u5b9a\u4e49\uff1a\u5bf9\u591a\u4e2a\u6570\u636e\u70b9\u540c\u65f6\u6267\u884c\u76f8\u540c\u7684\u64cd\u4f5c\u3002\u901a\u8fc7\u5c06\u540c\u4e00\u6307\u4ee4\u5e94\u7528\u4e8e\u591a\u4e2a\u6570\u636e\uff0c\u4f7f\u5f97\u5b83\u4eec\u76f8\u4e92\u540c\u6b65\uff0c\u907f\u514d\u63a7\u5236\u5f00\u9500\u548c\u6307\u4ee4\u5f00\u9500\u3002</li> <li>\u5173\u952e\u7279\u70b9<ul> <li>\u5411\u91cf\u5bc4\u5b58\u5668\uff1a\u53ef\u4ee5\u4fdd\u5b58\u548c\u5904\u7406\u591a\u4e2a\u6570\u636e\u5143\u7d20\u7684\u4e13\u7528\u5bc4\u5b58\u5668\u3002</li> <li>\u5411\u91cf\u64cd\u4f5c\uff1a\u7528\u4e8e\u6574\u4e2a\u5411\u91cf\u7684\u7b97\u672f\u548c\u903b\u8f91\u8fd0\u7b97\u3002</li> </ul> </li> <li>\u4f18\u70b9<ul> <li>\u63d0\u9ad8\u8ba1\u7b97\u541e\u5410\u91cf\u548c\u901f\u5ea6</li> <li>\u63d0\u9ad8\u80fd\u6548</li> </ul> </li> </ul> Intel\u7684SSE\u6307\u4ee4\u96c6 &amp; ARM\u7684Neon\u6307\u4ee4\u96c6 <ul> <li>SSE\u548cNeon\u90fd\u662fSIMD\u7c7b\u578b\u7684\u6307\u4ee4\u96c6\uff0c\u5b83\u4eec\u90fd\u6709\u7c7b\u4f3c\u6307\u4ee4\u53ef\u4ee5\u4e00\u6b21\u6027\u5904\u7406\u56db\u4e2a32\u4f4d\u64cd\u4f5c\u6570\u7684\u8fd0\u7b97\u3002</li> <li>SSE<ul> <li><code>_mm_load_ps</code>\u3001<code>_mm_mul_ps</code>\uff1amm\u4ee3\u8868\u591a\u5a92\u4f53\uff0cload\u4ee3\u8868\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\uff0cps\u4ee3\u8868\u538b\u7f29\u5355\u7cbe\u5ea6\u3002</li> </ul> </li> <li>Neon<ul> <li><code>vld1q_f32</code>\u3001<code>vmulq_f32</code>\uff1av\u4ee3\u8868\u5411\u91cf\u3001ld\u8868\u793aload\uff0cmul\u8868\u793a\u4e58\u6cd5\uff0c1\u8868\u793a\u5411\u91cf\u6570\uff0cq\u8868\u793aquadword\u56db\u5b57\u3002</li> </ul> </li> </ul> <ul> <li>\u4e0b\u56fe\u662f\u4f7f\u7528SSE\u548cNeon\u6307\u4ee4\u8fdb\u884c\u77e9\u9635\u4e58\u6cd5\u7684\u793a\u4f8b\u4ee3\u7801\uff0c\u9700\u8981\u6ce8\u610f\u7684\u662ftranspose_tmp\u662f\u77e9\u9635B\u7684\u8f6c\u7f6e\uff0c\u4ee5\u5b9e\u73b0loop reordering\u7684\u540c\u6837\u6548\u679c\u3002</li> </ul>"},{"location":"self_learn/efficientml/tinyml/#multithreading","title":"Multithreading","text":"<ul> <li>\u5b9a\u4e49\uff1a\u591a\u7ebf\u7a0b\u662f\u6307\u5728\u5355\u4e2a\u8fdb\u7a0b\u4e2d\u5e76\u53d1\u6267\u884c\u591a\u4e2a\u7ebf\u7a0b\u3002</li> <li> <p>\u7ebf\u7a0b</p> <ul> <li>\u6700\u5c0f\u7684\u6267\u884c\u5355\u5143\u662f\u7ebf\u7a0b\uff0c\u6700\u5c0f\u7684\u8d44\u6e90\u5206\u914d\u5355\u5143\u662f\u8fdb\u7a0b\uff0c\u7ebf\u7a0b\u5171\u4eab\u8fdb\u7a0b\u4e2d\u7684\u8d44\u6e90\u3002</li> <li>\u7ebf\u7a0b\u5171\u4eab\u76f8\u540c\u7684\u5185\u5b58\u7a7a\u95f4\u548c\u8d44\u6e90\uff0c\u4f46\u5b83\u4eec\u6709\u81ea\u5df1\u7684\u5806\u6808\u548c\u7a0b\u5e8f\u8ba1\u6570\u5668\u3002</li> <li>\u4e0d\u540c\u7684\u7ebf\u7a0b\u53ef\u4ee5\u5728\u4e0d\u540c\u7684CPU\u6838\u5fc3\u4e0a\u8fd0\u884c\uff0c\u4ece\u800c\u63d0\u9ad8\u6027\u80fd\u5e76\u5141\u8bb8\u5e76\u884c\u6027</li> </ul> </li> <li> <p>\u591a\u7ebf\u7a0b\u7684\u4f18\u70b9</p> <ul> <li>\u6539\u8fdb\u7684\u6027\u80fd\uff1a\u591a\u4e2a\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u6267\u884c\u4efb\u52a1\uff0c\u63d0\u9ad8\u603b\u4f53\u7a0b\u5e8f\u901f\u5ea6\u3002</li> <li>\u54cd\u5e94\u6027\uff1a\u4e00\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u5bf9\u7528\u6237\u7684\u8f93\u5165\u4fdd\u6301\u54cd\u5e94\u800c\u4e0d\u53d7\u963b\u585e\u3002</li> <li>\u8d44\u6e90\u5229\u7528\u7387\uff1a\u7ebf\u7a0b\u53ef\u4ee5\u5171\u4eab\u8d44\u6e90\uff0c\u51cf\u5c11\u4e86\u521b\u5efa\u591a\u4e2a\u8fdb\u7a0b\u7684\u5f00\u9500\u3002</li> <li>\u7b80\u5316\u7684\u7a0b\u5e8f\u7ed3\u6784\uff1a\u591a\u7ebf\u7a0b\u53ef\u4ee5\u5e2e\u52a9\u5c06\u590d\u6742\u7684\u95ee\u9898\u5206\u89e3\u4e3a\u66f4\u7b80\u5355\u3001\u66f4\u5c0f\u7684\u4efb\u52a1\u3002</li> </ul> </li> <li> <p>\u4ecb\u7ecd\u4e24\u79cd\u5b9e\u7528\u7684\u7528\u4e8e\u7f16\u5199\u591a\u7ebf\u7a0b\u7a0b\u5e8f\u7684\u5e93-Pthreads\u548cOpenMP</p> </li> <li> <p>\u4f7f\u7528\u591a\u7ebf\u7a0b\u65f6\u52a0\u901f\u77e9\u9635\u4e58\u6cd5\uff0c\u9700\u8981\u5c06\u77e9\u9635\u5206\u5272\u6210\u82e5\u5e72\u90e8\u5206\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u8d1f\u8d23\u5176\u4e2d\u4e00\u90e8\u5206\u3002\u901a\u5e38\u6309\u7167\u884c\u5206\u5272\u77e9\u9635A\uff0c\u51cf\u5c11\u7ebf\u7a0b\u95f4\u901a\u4fe1\uff0c\u4f7f\u5176\u5de5\u4f5c\u76f8\u4e92\u72ec\u7acb\u3002</p> </li> <li> <p>\u5982\u4e0b\u56fe\uff0c\u901a\u8fc7Pthreads\u5e93\u6765\u8bbe\u8ba1\u591a\u7ebf\u7a0b\uff0c\u52a0\u901f\u77e9\u9635\u4e58\u6cd5\u7684\u4ee3\u7801\u793a\u4f8b\u3002\u4f18\u5316\u540e\u8fd0\u884c\u65f6\u95f4\u4ece24296ms\u964d\u4f4e\u52305864ms\u3002 </p> </li> <li> <p>OpenMP</p> <ul> <li>\u7279\u70b9<ul> <li>\u4e00\u4e2a\u5171\u4eab\u5185\u5b58\u7684\u5e76\u884c\u7f16\u7a0b\u6a21\u578b</li> <li>\u9002\u7528\u4e8eC,C++,Fortran</li> <li>\u53ef\u8de8\u4e0d\u540c\u5e73\u53f0\u548c\u64cd\u4f5c\u7cfb\u7edf</li> <li>\u6613\u4e8e\u4e0e\u73b0\u6709\u4ee3\u7801\u96c6\u6210</li> <li>\u9002\u7528\u4e8e\u5404\u79cd\u5904\u7406\u5668</li> </ul> </li> <li> <p>\u5982\u4e0b\u56fe\uff0c\u901a\u8fc7OpenMP\u5e93\u6765\u8bbe\u8ba1\u591a\u7ebf\u7a0b\uff0c\u52a0\u901f\u77e9\u9635\u4e58\u6cd5\u7684\u4ee3\u7801\u793a\u4f8b\uff0c\u76f8\u6bd4\u4e8ePthreads\u4ee3\u7801\u66f4\u52a0\u7b80\u6d01\uff0c\u4ec5\u9700\u4e24\u884c\u5373\u53ef\u5b9e\u73b0\u5e76\u884c\u3002</p> <p></p> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#cuda-programming","title":"CUDA programming","text":"<ul> <li>\u5b9a\u4e49\uff1a\u4f7f\u7528gpu\u6765\u52a0\u901f\u8ba1\u7b97\u3002</li> <li>\u4ecb\u7ecd<ul> <li>\u56fe\u5f62\u5904\u7406\u5355\u5143\uff08GPU\uff09\u63d0\u4f9b\u4e86\u66f4\u9ad8\u7684\u6307\u4ee4\u541e\u5410\u91cf\u548c\u5185\u5b58\u5e26\u5bbd\u3002</li> <li>CUDA\u662f\u7531\u82f1\u4f1f\u8fbe\u57282006\u5e74\u63a8\u51fa\u7684\uff0c\u4f5c\u4e3a\u4e00\u4e2a\u901a\u7528\u7684\u5e76\u884c\u8ba1\u7b97\u5e73\u53f0\u548c\u7f16\u7a0b\u6a21\u578b\uff0c\u5b83\u5229\u7528\u4e86Nvidia gpu\u4e2d\u7684\u5e76\u884c\u8ba1\u7b97\u5f15\u64ce\u3002</li> <li>CUDA\u7c7b\u4f3cC\u8bed\u8a00\uff0c\u7528\u6765\u8868\u793a\u4f7f\u7528\u8ba1\u7b97\u6a21\u5f0f\u7684\u786c\u4ef6\u63a5\u53e3\u5728gpu\u4e0a\u8fd0\u884c\u7684\u7a0b\u5e8f\u3002</li> </ul> </li> <li> <p>\u5982\u56fe\u4e3aCUDA\u7ebf\u7a0b\u7684\u5c42\u6b21\u7ed3\u6784</p> <ul> <li>\u7eff\u8272\u7684\u4e3a\u7ebf\u7a0b\u5757\uff0c\u5927\u5c0f\u4e3a2\u00d73\uff1b\u6a59\u8272\u7684\u4e3a\u5176\u4e2d\u4e00\u4e2a\u7ebf\u7a0b\u5757\u4e2d\u7684\u7ebf\u7a0b\uff0c\u5927\u5c0f\u4e3a3\u00d74\u3002\u56e0\u6b64\u603b\u5171\u670972\u4e2acuda\u7ebf\u7a0b\u3002</li> </ul> <p></p> </li> <li> <p>\u5982\u4e0b\u56fe\u662fCUDA\u7f16\u7a0b\u793a\u4f8b\u4ee3\u7801</p> <ul> <li>\u4e0a\u65b9\u4ee3\u7801\u4e3a\u4e3b\u673a\u4ee3\u7801\uff0c\u5728CPU\u4e0a\u4e32\u884c\u6267\u884c\u3002\u8d1f\u8d23\u4e3a\u77e9\u9635ABC\u5206\u914d\u5185\u5b58\uff0c\u5e76\u542f\u52a8CUDA\u7ebf\u7a0b\u3002</li> <li>\u4e0b\u65b9\u4ee3\u7801\u4e3aCUDA\u5185\u6838\u4ee3\u7801\uff0c\u5728GPU\u4e0a\u6267\u5e76\u884c\u6267\u884c\u3002\u6bcf\u4e2a\u7ebf\u7a0b\u4ece\u5176\u5728\u5757\u4e2d\u7684\u4f4d\u7f6e\uff08threadIdx\uff09\u548c\u5176\u5757\u5728\u7f51\u683c\u4e2d\u7684\u4f4d\u7f6e\uff08blockIdx\uff09\u8ba1\u7b97\u5176\u6574\u4f53\u7f51\u683c\u7ebf\u7a0bid\u3002</li> </ul> <p></p> </li> <li> <p>\u5148\u524d\u6211\u4eec\u5047\u8bbe\u77e9\u9635ABC\u5747\u5df2\u5206\u914d\uff0c\u73b0\u5728\u91cd\u65b0\u6765\u4e86\u89e3\u5b83\u4eec\u7684\u5206\u914d\u65b9\u5f0f\u3002</p> <ul> <li>CUDA\u7f16\u7a0b\u4e2d\u6709\u4e24\u4e2a\u5730\u5740\uff0c\u4e00\u4e2a\u662f\u4e3b\u673a\u5730\u5740\u5373CPU\u5185\u5b58\u5730\u5740\u7a7a\u95f4\uff0c\u53e6\u4e00\u4e2a\u662f\u8bbe\u5907\u5185\u5b58\u5730\u5740\u3002\u6570\u636e\u53ef\u4ee5\u5728\u4e24\u4e2a\u5730\u5740\u7a7a\u95f4\u5185\u79fb\u52a8\uff0c\u4f46\u6211\u4eec\u5e0c\u671b\u5c3d\u91cf\u51cf\u5c11\u79fb\u52a8\u3002\u6ce8\u610f\uff0c\u6211\u4eec\u65e0\u6cd5\u4ece\u4e3b\u673aCPU\u4ee3\u7801\u6bb5\u8bbf\u95eeGPU\u5185\u5b58\u3002</li> <li> <p>\u4e0b\u56fe\u4ee3\u7801\u4e2d</p> <p></p> <ul> <li><code>A[i] = (float)I;</code>\u662f\u586b\u5145\u4e3b\u673a\u5730\u5740\u7a7a\u95f4\u6307\u9488A\u3002</li> <li><code>cudaMalloc(&amp;deviceA, bytes);</code>\u662f\u5728\u8bbe\u5907GPU\u5730\u5740\u7a7a\u95f4\u4e2d\u5206\u914d\u7f13\u51b2\u533a\u3002</li> <li><code>cudaMemcpy(deviceA, A, bytes, cudaMemcpyHostToDevice);</code>\u662f\u5c06\u6570\u636e\u4eceCPU\u590d\u5236\u5230GPU\u3002</li> </ul> </li> </ul> </li> <li> <p>\u5bf9\u5185\u6838\u53ef\u89c1\u7684\u4e09\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u5730\u5740\u7a7a\u95f4</p> <ul> <li>\u79c1\u6709\u5185\u5b58\uff08\u6bcf\u4e2a\u7ebf\u7a0b\uff09\u3001\u5171\u4eab\u5185\u5b58\uff08\u6bcf\u4e2a\u5757\uff09\u3001\u5168\u5c40\u5185\u5b58<ul> <li>\u79c1\u6709\u5185\u5b58\u8bbf\u5b58\u6700\u5feb\uff0c\u7a7a\u95f4\u6700\u5c0f\uff1b\u5168\u5c40\u5185\u5b58\u8bbf\u5b58\u6700\u6162\uff0c\u7a7a\u95f4\u6700\u5927\u3002</li> </ul> </li> <li>\u4e0d\u540c\u7684\u5730\u5740\u7a7a\u95f4-&gt;\u4e0d\u540c\u7684\u4f4d\u7f6e-&gt;\u4e0d\u540c\u7684\u8d1f\u8f7d/\u5b58\u50a8\u5f00\u9500</li> </ul> </li> <li> <p>\u5982\u4e0b\u56fe\uff0c\u4f7f\u7528CUDA\u7b97\u6cd5\u52a0\u901f\u77e9\u9635\u4e58\u6cd5\uff0c\u539f\u8fd0\u884c\u65f6\u95f424296ms\uff0c\u4f18\u5316\u540e\u5728GPU\u8fd0\u884c\u65f6\u95f4258ms\uff0cCUDA\u5185\u6838\u8fd0\u884c\u65f6\u95f46.796ms\u3002     </p> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#inference-optimizations","title":"Inference optimizations","text":"<ul> <li>\u63a8\u7406\u4f18\u5316\u76ee\u7684\uff1a\u63d0\u9ad8\u8ba1\u7b97\u901f\u5ea6\uff0c\u51cf\u5c11\u5185\u5b58\u4f7f\u7528</li> <li>\u672c\u7ae0\u4ecb\u7ecd\u4ee5\u4e0b\u56db\u79cd\u6280\u672f\uff1a<ul> <li>pics/tinyml/image to Column (Im2col) convolution</li> <li>In-place depth-wise convolution</li> <li>NHWC for point-wise convolution, and NCHW for depth-wise convolution</li> <li>Winograd convolution</li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#picstinymlimage-to-column-im2col-convolution","title":"pics/tinyml/image to Column (Im2col) convolution","text":"<ul> <li>\u5b9a\u4e49\uff1a\u91cd\u65b0\u6392\u5217\u8f93\u5165\u6570\u636e\u4ee5\u76f4\u63a5\u5229\u7528\u77e9\u9635\u4e58\u6cd5\u6838\u3002</li> <li>Im2col\u662f\u4e00\u79cd\u901a\u8fc7\u5e7f\u4e49\u77e9\u9635\u4e58\u6cd5\uff08GEMM\uff09\u5b9e\u73b0\u5377\u79ef\u7684\u6280\u672f\u3002</li> <li> <p>\u4e0b\u56fe\u662f\u539f\u672c\u7684\u5377\u79ef\u64cd\u4f5c</p> <p></p> </li> <li> <p>\u5229\u7528Im2col\u6280\u672f\u5c06\u8f93\u5165\u548c\u5185\u6838\u90fd\u53d8\u5316\u4e3a\u77e9\u9635\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u5c06\u6bcf\u6b21\u53c2\u4e0e\u8fd0\u7b97\u7684\u4e24\u4e2a\u77e9\u9635\u5c55\u5f00\u6210\u4e00\u4e2a\u4e00\u7ef4\u7684\u5411\u91cf\uff0c\u4e24\u4e2a\u77e9\u9635\u7684\u4e58\u6cd5\u53d8\u6210\u4e00\u7ef4\u5411\u91cf\u7684\u70b9\u79ef\uff0c\u5219\u6574\u4e2a\u8f93\u5165\u548c\u5185\u6838\u7684\u5377\u79ef\u53d8\u6210\u4e24\u4e2a\u77e9\u9635\u7684\u4e58\u6cd5\uff0c\u7c7b\u4f3c\u4e8e\u964d\u7ef4\u3002\u53c2\u8003im2col\u53ef\u4ee5\u66f4\u597d\u7406\u89e3\u3002</p> <p></p> </li> <li> <p>\u4f18\u70b9\uff1a\u5229\u7528\u7ecf\u8fc7\u826f\u597d\u4f18\u5316\u7684GEMM\u8fdb\u884c\u5377\u79ef\u3002</p> </li> <li>\u7f3a\u70b9\uff1a\u589e\u52a0\u989d\u5916\u7684\u5185\u5b58\u4f7f\u7528\uff08\u4ece\u4e0a\u56fe\u4e5f\u53ef\u4ee5\u770b\u51fa\uff0c\u8f93\u5165\u6fc0\u6d3b\u7684\u5927\u5c0f\u660e\u663e\u589e\u5927\uff0c\u5927\u7ea62/3\u7684\u5185\u5b58\u91cd\u590d\uff09\uff0c\u9690\u5f0fGEMM\u53ef\u4ee5\u89e3\u51b3\u989d\u5916\u7684\u5185\u5b58\u4f7f\u7528\u95ee\u9898\u3002</li> </ul>"},{"location":"self_learn/efficientml/tinyml/#in-place-depth-wise-convolution","title":"In-place depth-wise convolution","text":"<ul> <li>\u5b9a\u4e49\uff1a\u91cd\u7528\u8f93\u5165\u7f13\u51b2\u533a\u5199\u5165\u8f93\u51fa\u6570\u636e\uff0c\u4ee5\u51cf\u5c11\u5cf0\u503cSRAM\u5185\u5b58\u3002</li> <li>\u8bb8\u591a\u6d41\u884c\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\uff0c\u5982MobileNetV2\uff0c\u90fd\u5177\u6709\u6df1\u5ea6\u5377\u79ef\u7684\u201c\u53cd\u5411\u6b8b\u5dee\u5757\u201d\uff0c\u51cf\u5c11\u4e86\u6a21\u578b\u5927\u5c0f\u548cFLOPs\uff0c\u4f46\u663e\u8457\u589e\u52a0\u4e86\u5cf0\u503c\u5185\u5b58\u3002</li> <li> <p>\u4e3a\u4e86\u51cf\u5c11\u6df1\u5ea6\u5377\u79ef\u7684\u5cf0\u503c\u5185\u5b58\uff0c\u6211\u4eec\u4f7f\u7528\u4e86\u5e26\u6709\u4e34\u65f6\u7f13\u51b2\u533a\u7684\u201c\u5c31\u4f4d\u201d\u66f4\u65b0\u7b56\u7565\u3002</p> <p></p> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#how-to-choose-the-appropriate-data-layout-nchwnhwc","title":"How to Choose the Appropriate Data Layout (NCHW/NHWC)","text":"<ul> <li>\u9488\u5bf9\u4e0d\u540c\u7c7b\u578b\u7684\u5377\u79ef\uff0c\u5229\u7528\u9002\u5f53\u7684\u6570\u636e\u5e03\u5c40\u3002</li> <li> <p>Use NHWC for Point-wise Convolution</p> <ul> <li>\u4e00\u822c\u6765\u8bf4\uff0c\u7531\u4e8e\u6709\u66f4\u591a\u7684\u987a\u5e8f\u8bbf\u95ee\uff0cNHWC\u6bd4NCHW\u5728point-wise\u5377\u79ef\u65b9\u9762\u5177\u6709\u66f4\u597d\u7684\u5c40\u90e8\u6027\u3002</li> <li> <p>\u5982\u4e0b\u56fe\u53f3\u6846\u4e2d\u7684\u6743\u91cd\u6570\u636e\u8bbf\u95ee\u987a\u5e8f\uff0cNHWC\u548cNCHW\u5177\u6709\u4e0d\u540c\u7684\u5b58\u50a8\u987a\u5e8f\uff0c\u5bf9\u4e8epoint-wise\u5377\u79ef\u663e\u7136NHWC\u8fde\u7eed\u8bbf\u95ee\u66f4\u597d\u3002</p> <p></p> </li> </ul> </li> <li> <p>Use NCHW for Depth-wise Convolution</p> <ul> <li>\u6211\u4eec\u5c06\u8bbf\u95ee\u6fc0\u6d3b\uff0c\u5e76\u5728NCHW\u5e8f\u5217\u4e2d\u8fdb\u884c\u6df1\u5ea6\u5377\u79ef\u3002</li> <li> <p>\u7531\u4e8e\u6709\u66f4\u591a\u7684\u987a\u5e8f\u8bbf\u95ee\uff0cNCHW\u5728\u6df1\u5ea6\u5377\u79ef\u65b9\u9762\u6bd4NHWC\u5177\u6709\u66f4\u597d\u7684\u5c40\u90e8\u6027\u3002</p> <p></p> </li> </ul> </li> </ul>"},{"location":"self_learn/efficientml/tinyml/#winograd-convolution","title":"Winograd convolution","text":"<ul> <li>Direct convolution need 9xCx4 MACs for 4 outputs</li> </ul> <ul> <li>Winograd convolution need only 16xC MACs for 4 outputs -&gt; 2.25x fewer MACs</li> </ul>"},{"location":"self_learn/parallel/cs149/","title":"Index","text":""},{"location":"self_learn/parallel/cs149/#progress","title":"progress","text":"<p>lecture 5-6 done</p>"},{"location":"self_learn/parallel/cs149/cuda/","title":"CUDA","text":""},{"location":"self_learn/parallel/cs149/cuda/#grid-block-and-thread","title":"Grid, Block, and Thread","text":"<p>each block has shared memory for all threads within the block.</p> <p>each thread has its own private memory.</p>"},{"location":"self_learn/parallel/cs149/cuda/#cuda-thread-block-scheduling","title":"CUDA Thread Block Scheduling","text":"<ul> <li>one block is mapped to one SMM core (streaming multiprocessor core)</li> </ul>"},{"location":"self_learn/parallel/cs149/cuda/#warp","title":"warp","text":"<ul> <li>warp is the execution context storage for CUDA threads.</li> <li>a warp consists of 32 threads, each thread is an instruction bank.</li> </ul>"},{"location":"self_learn/parallel/cs149/cuda/#matrix-multiplication-in-cuda","title":"Matrix Multiplication in CUDA","text":""},{"location":"self_learn/parallel/cs149/cuda/#parallel-reduction-in-cuda","title":"Parallel Reduction in CUDA","text":"<p>sequential addressing &gt; interleaved addressing</p>"},{"location":"self_learn/parallel/cs149/performance/","title":"Performance Optimization","text":""},{"location":"self_learn/parallel/cs149/performance/#balance-workloads","title":"Balance workloads","text":""},{"location":"self_learn/parallel/cs149/performance/#assignment-of-work","title":"assignment of work","text":"<ul> <li>static assignment</li> <li>dynamic assignment</li> </ul>"},{"location":"self_learn/parallel/cs149/performance/#work-granularity","title":"work granularity","text":"<ul> <li>small work granularity </li> <li>large work granularity</li> </ul>"},{"location":"self_learn/parallel/cs149/performance/#smarter-task-scheduling","title":"Smarter task scheduling","text":"<ul> <li> <p>Distributed work queues</p> <p></p> <p></p> </li> </ul>"},{"location":"self_learn/parallel/cs149/performance/#scheduling-fork-join-parallelism","title":"Scheduling fork-join parallelism","text":""},{"location":"self_learn/parallel/cs149/performance/#common-programming-patterns","title":"common programming patterns","text":""},{"location":"self_learn/parallel/cs149/performance/#cilk-plus","title":"Cilk Plus","text":"<p><code>cilk_spawn</code>\u521b\u5efa\u65b0\u7684 independent work\uff0c\u5e76\u5c06\u5176\u653e\u5165 thread0 \u7684 queue \u4e2d\uff0c\u800c\u975e\u521b\u5efa\u65b0\u7684 thread\uff1b\u5176\u4ed6 thread \u53ef\u4ee5\u4ece queue0 \u4e2d steal work</p> <p>\u4e8e\u662f\u95ee\u9898\u6765\u4e86\uff0cthread0 \u662f\u5148\u8fd0\u884c spawned child \u8fd8\u662f spawn \u540e\u9762\u7684 continuation \u5462</p> <ul> <li> <p>child first , stealing continuation</p> </li> <li> <p>continuation first, steal child</p> </li> </ul>"},{"location":"self_learn/toefl/listening/","title":"\u542c\u529b","text":""},{"location":"self_learn/toefl/listening/#_1","title":"\u542c\u529b\u5b66\u79d1\u5355\u8bcd\u5b66\u4e60\u8fa8","text":"<p>Vince\u542c\u529b\u5b66\u79d1\u5355\u8bcd\u5b66\u4e60\u8fa8\u542c</p>"},{"location":"self_learn/toefl/listening/#tpo","title":"TPO\u5206\u8bdd\u9898\u542c","text":"<p>\u542c\u5b8c\u4e00\u4e2a\u5b66\u79d1\u7684\u5355\u8bcd\u5c31\u53ef\u4ee5\u5728\u5c0f\u7ad9\u4e0a\u627e\u5bf9\u5e94\u7684\u8bdd\u9898\u5f00\u59cb\u8054\u7cfb</p> <p>\u7cbe\u542c\uff0c\u56de\u987e</p> <p>\u9488\u5bf9\u8fd9\u4e9b\u8584\u5f31\u7684\u9898\u6750\uff0c\u5927\u5bb6\u53ef\u4ee5\u603b\u7ed3\u603b\u7ed3\u8fd9\u7c7b\u6587\u7ae0\u4e00\u822c\u90fd\u662f\u5728\u8bb2\u4ec0\u4e48\u4ecb\u7ecd\u4ec0\u4e48\u3002\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5386\u53f2\u7c7b\u6587\u7ae0\u4e00\u822c\u90fd\u662f\u5728\u8bb2\u53d1\u5c55\u3001\u8d77\u6e90\u3001\u6539\u53d8\u4e4b\u7c7b\u7684\uff0c\u51e0\u4e2a\u5c42\u6b21\u4e00\u822c\u5c31\u662f\u8bdd\u9898\u7684\u53d1\u5c55\uff0c\u53d1\u5c55\u8fc7\u7a0b\u4e2d\u53d7\u5230\u7684\u5f71\u54cd\u4ee5\u53ca\u5bf9\u4ea7\u751f\u7684\u5f71\u54cd\uff0c\u5177\u4f53\u7684\u5f71\u54cd\u662f\u4ec0\u4e48\uff0c\u600e\u4e48\u5f71\u54cd\uff0c\u9700\u8981\u641e\u6e05\u695a\u65f6\u95f4\u987a\u5e8f\u8c01\u5148\u8c01\u540e</p> \u5e38\u89c1\u8bdd\u9898\u7684\u7ed3\u6784 <p>\u611f\u89c9\u542c\u529blecture\u603b\u5171\u4e5f\u5c31\u8fd9\u51e0\u4e2a\u8bdd\u9898\uff1a</p> <p>1.\u751f\u7269\u5b66\uff1axxx\u6982\u5ff5\u662f\u4ec0\u4e48\uff1f\u79d1\u5b66\u5bb6\u63d0\u51fa\u4e86\u54ea\u4e9b\u731c\u60f3\uff1f\u4f8b\u5b50\uff1f\uff08\u67d0\u79cd\u52a8\u7269\u751f\u7406\u6784\u9020/\u4e60\u6027/\u706d\u7edd\u4e0e\u4fdd\u62a4\uff1f\uff09 2.\u5929\u6587\u5b66\uff1a\u884c\u661f\u78b0\u649e/\u5f62\u6210\uff1f\u5929\u6587\u89c2\u6d4b\u6280\u672f\u7684\u53d1\u5c55\u5386\u7a0b/\u6700\u65b0\u7a81\u7834\uff1f\u5929\u6587\u73b0\u8c61\u7684\u7279\u70b9/\u53d1\u751f\u539f\u56e0/\u76f8\u5173\u7406\u8bba\uff1f 3.\u5730\u8d28\u5b66\uff1a\u677f\u5757\u79fb\u52a8\u76f8\u5173\u7406\u8bba\uff1f\u67d0\u79cd\u5ca9\u77f3/\u5730\u8c8c\u7684\u7279\u70b9\u53ca\u5f62\u6210\u8fc7\u7a0b\uff1f 4.\u8003\u53e4\u5b66\uff1a\u67d0\u4e2a\u53e4\u4ee3\u6587\u660e/\u4eba\u79cd\uff08\u4e0d\u77e5\u9053\u8fd9\u8bcd\u51c6\u4e0d\u51c6\u786e\uff09\u76f8\u5173\u7684\u6700\u65b0\u53d1\u73b0\u53ca\u76f8\u5173\u89e3\u91ca\uff08\u5982\u65e5\u5e38\u7528\u54c1\u3001\u58c1\u753b\u3001\u8fc1\u5f99\u8fc7\u7a0b\u3001\u5174\u8870\u3001\u5bf9\u5176\u4ed6\u6587\u660e\u7684\u5f71\u54cd\u7b49\uff09 5.\u827a\u672f\u53f2\uff1a\u67d0\u79cd\u620f\u5267\u5f62\u5f0f\u7684\u53d1\u5c55\u5386\u7a0b\u53ca\u7279\u70b9\uff1f\u67d0\u753b\u5bb6/\u67d0\u827a\u672f\u6d41\u6d3e/\u67d0\u827a\u672f\u4f5c\u54c1... 6.\u5efa\u7b51\u5b66\uff1a\u67d0\u79cd\u5efa\u7b51\u6d41\u6d3e\u7684\u7279\u70b9/\u53d1\u5c55\u53f2/\u5f71\u54cd\uff1f\u5efa\u7b51\u6750\u6599\u7684\u53d1\u5c55\uff1f\u76f8\u5173\u6280\u672f\u7684\u6539\u8fdb\uff1f</p> <p>\u53ef\u4ee5\u5728\u5c0f\u7ad9\u6258\u798f\u7f51\u7ad9\u4e0a\u5b66\u4e60\u4e00\u4e0b\u76f8\u5173\u5b66\u79d1\u8bcd\u6c47\u3002 \u542c\u7684\u8fc7\u7a0b\u4e2d\u9700\u8981\u6ce8\u91cd\uff1aprofessor\u5bf9\u67d0\u7406\u8bba/\u4eba\u7684\u6001\u5ea6;\u67d0\u7406\u8bba/\u4eba\u7684\u5f71\u54cd;\u4e00\u4e9b\u8fc7\u7a0b\u7684\u53d1\u751f\u987a\u5e8f\uff08\u4f46\u4e0d\u5e38\u8003\uff09...\u6682\u65f6\u60f3\u4e0d\u8d77\u6765\u4e86\uff0c\u6b22\u8fce\u8865\u5145</p>"},{"location":"self_learn/toefl/listening/#_2","title":"\u53d1\u5c55\u81ea\u5df1\u7684\u8bb0\u7b14\u8bb0\u65b9\u6cd5","text":"<p>\u8bdd\u9898\u8f6c\u79fb\u65f6\u7684\u7b26\u53f7</p> <p>\u5c3d\u91cf\u6309\u987a\u5e8f\u8bb0</p>"},{"location":"self_learn/toefl/listening/#_3","title":"\u6ce8\u610f\u4fe1\u53f7\u8bcd","text":"<p>\u5982remember/this is important/ this is amazing etc.</p> <p>\u4e3b\u65e8\u6982\u62ec\uff0c\u5173\u6ce8The issue/thing/problem is that \u2026 \u6216 I am wondering/thinking \u2026 \u6216 I come here for\u2026 \u7b49\u53e5\u578b\u3002</p> <p>\u63d0\u5230important\uff0cinteresting\uff0chighlight\uff0camazing\uff0cpopular\u7b49\u8868\u793a\u91cd\u70b9\u3001\u4eae\u70b9\u7684\u5185\u5bb9\uff0c\u4ee5\u53caproblem\uff0cchallenge\uff0cdifficulty\u7b49\u8868\u793a\u56f0\u96be\u7684\u5185\u5bb9\u3002 </p>"},{"location":"self_learn/toefl/resource/","title":"TPO completion","text":"<ul> <li>speaking: </li> <li>listening: 69</li> <li>writing: </li> <li>reading: 69,75</li> </ul>"},{"location":"self_learn/toefl/resource/#speaking","title":"Speaking","text":"<ul> <li> <p>\u5434\u5947\u8001\u5e08</p> </li> <li> <p>\u4e0d\u7231\u9178\u82e6\u8fa3\uff08\u5c0f\u7ea2\u4e66\uff09</p> </li> </ul>"},{"location":"self_learn/toefl/resource/#writing","title":"Writing","text":"<ul> <li>chatgpt for refurbish</li> </ul> writing type rubric"},{"location":"self_learn/toefl/resource/#integrated-writing-rubric","title":"Integrated Writing Rubric","text":"<p>A response at this level successfully selects the important information from the lecture and coherently and accurately presents this information in relation to the relevant information presented in the reading. The response is well organized, and occasional language errors that are present do not result in inaccurate or imprecise presentation of content or connections.</p>"},{"location":"self_learn/toefl/resource/#writing-for-an-academic-discussion-rubric","title":"Writing for an Academic Discussion Rubric","text":"<p>The response is a relevant and very clearly expressed contribution to the online discussion, and it demonstrates consistent facility in the use of language. A typical response displays the following: </p> <ul> <li> <p>Relevant and well-elaborated explanations, exemplifications, and/or details</p> </li> <li> <p>Effective use of a variety of syntactic structures and precise, idiomatic word choice</p> </li> <li> <p>Almost no lexical or grammatical errors other than those expected from a competent writer writing under timed conditions(e.g., common typos or common misspellings or substitutions like there/their)</p> </li> </ul>"},{"location":"self_learn/toefl/resource/#reading","title":"Reading","text":"<ul> <li> <p>TPO</p> </li> <li> <p>\u80cc\u5355\u8bcd\uff08\u738b\u7389\u6885\u3001\uff09</p> </li> <li> <p>BNC corpora</p> </li> </ul>"},{"location":"self_learn/toefl/resource/#listening","title":"Listening","text":"<ul> <li> <p>cached material on bilibili</p> </li> <li> <p>CNN news</p> </li> <li> <p>Sheldon talk show</p> </li> </ul>"},{"location":"self_learn/toefl/resource/#other-resources","title":"Other resources","text":"<ul> <li> <p>\u6258\u798f\u6a21\u8003\u771f\u9898</p> </li> <li> <p>\u5c0f\u7ad9\u6258\u798f</p> </li> <li> <p>tendo</p> </li> </ul>"},{"location":"self_learn/toefl/sheltonshow/","title":"Sheltonshow","text":"<p>Just pick out anything? Or maybe at the same time we can pick out a suit for him without knowing his size. Or pick out his career form without knowing his aptitude. Pick out his breakfast cereal without knowing his fiber requirements, or his feelings about marshmallows.</p>"},{"location":"tools/argparse/","title":"argparse","text":""},{"location":"tools/argparse/#argparsenamespace","title":"<code>argparse.Namespace</code>","text":"<pre><code>import argparse\n\n# \u521b\u5efa ArgumentParser \u5bf9\u8c61\nparser = argparse.ArgumentParser(description='\u793a\u4f8b\u7a0b\u5e8f')\n\n# \u6dfb\u52a0\u53c2\u6570\nparser.add_argument('--foo', help='foo \u53c2\u6570')\nparser.add_argument('bar', nargs='?', default='bar', help='bar \u53c2\u6570')\n\n# \u89e3\u6790\u53c2\u6570\nargs = parser.parse_args()\n\n# \u4f7f\u7528\u53c2\u6570\nprint(args.foo)\nprint(args.bar)\n\n# \u5982\u679c\u4f60\u60f3\u5c06 Namespace \u5bf9\u8c61\u8f6c\u6362\u4e3a\u5b57\u5178\uff0c\u53ef\u4ee5\u4f7f\u7528 vars() \u51fd\u6570\nargs_dict = vars(args)\nprint(args_dict['foo'])\nprint(args_dict['bar'])\n</code></pre>"},{"location":"tools/hf/","title":"Transfomer","text":""},{"location":"tools/hf/#necessary-libraries","title":"necessary libraries","text":"<pre><code>!pip install transformers datasets evaluate accelerate torch\n</code></pre>"},{"location":"tools/hf/#pipeline","title":"pipeline","text":"<p><code>pipeline()</code>\u51fd\u6570\uff1a\u4e0b\u8f7d\u9884\u8bad\u7ec3\u6a21\u578b\u548ctokenizer\u8fdb\u884c\u63a8\u7406\uff0c\u652f\u6301\u591a\u79cdtask</p> <pre><code>from transformers import pipeline\nclassifier = pipeline(\"sentiment-analysis\")\n\nclassifier(\"We are very happy to show you the \ud83e\udd17 Transformers library.\") # single query\n[{'label': 'POSITIVE', 'score': 0.9998}]\n\nresults = classifier([\"We are very happy to show you the \ud83e\udd17 Transformers library.\", \"We hope you don't hate it.\"]) # multiple queries\nfor result in results:\n    print(f\"label: {result['label']}, with score: {round(result['score'], 4)}\")\nlabel: POSITIVE, with score: 0.9998\nlabel: NEGATIVE, with score: 0.5309\n</code></pre>"},{"location":"tools/hf/#_1","title":"\u6307\u5b9a\u6a21\u578b\u548c\u529f\u80fd","text":""},{"location":"tools/hf/#_2","title":"\u901a\u8fc7\u6a21\u578b\u540d\u6307\u5b9a\u6a21\u578b","text":"<pre><code>import torch\nfrom transformers import pipeline\nfrom datasets import load_dataset, Audio\n\nspeech_recognizer = pipeline(\"automatic-speech-recognition\", model=\"facebook/wav2vec2-base-960h\")\ndataset = load_dataset(\"PolyAI/minds14\", name=\"en-US\", split=\"train\")\ndataset = dataset.cast_column(\"audio\", Audio(sampling_rate=speech_recognizer.feature_extractor.sampling_rate)) # match sampling rate, can ignore\nresult = speech_recognizer(dataset[:4][\"audio\"])\nprint([d[\"text\"] for d in result])\n</code></pre>"},{"location":"tools/hf/#autoclass","title":"\u901a\u8fc7 <code>AutoClass</code> \u6307\u5b9a\u6a21\u578b","text":"<pre><code>from transformers import AutoTokenizer, AutoModelForSequenceClassification\n\nmodel_name = \"nlptown/bert-base-multilingual-uncased-sentiment\"\n\n# download and cache pretrained model and tokenizer\nmodel = AutoModelForSequenceClassification.from_pretrained(model_name)\ntokenizer = AutoTokenizer.from_pretrained(model_name)\n\nclassifier = pipeline(\"sentiment-analysis\", model=model, tokenizer=tokenizer)\nclassifier(\"Nous sommes tr\u00e8s heureux de vous pr\u00e9senter la biblioth\u00e8que \ud83e\udd17 Transformers.\")\n</code></pre>"},{"location":"tools/hf/#autoclass_1","title":"AutoClass","text":""},{"location":"tools/hf/#autotokenizer","title":"AutoTokenizer","text":"<p>\u7528\u6cd5\u5982\u4e0a\uff0ctokenizer\u8fd4\u56de\u4e00\u4e2a<code>dict</code>\u5bf9\u8c61\uff1a</p> <ul> <li>input_ids: numerical representations of your tokens.</li> <li>attention_mask: indicates which tokens should be attended to.</li> </ul> <pre><code>encoding = tokenizer(\"We are very happy to show you the \ud83e\udd17 Transformers library.\")\nprint(encoding)\n\n{'input_ids': [101, 11312, 10320, 12495, 19308, 10114, 11391, 10855, 10103, 100, 58263, 13299, 119, 102],\n 'token_type_ids': [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\n 'attention_mask': [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]}\n\n# tokenize in batch\npt_batch = tokenizer(\n    [\"We are very happy to show you the \ud83e\udd17 Transformers library.\", \"We hope you don't hate it.\"],\n    padding=True,\n    truncation=True,\n    max_length=512,\n    return_tensors=\"pt\", # return pytorch tensor, not tensorflow tensor\n)\n</code></pre>"},{"location":"tools/hf/#automodel","title":"AutoModel","text":"<p>\u9ed8\u8ba4\u60c5\u51b5\u4f1a\u5c06\u6743\u91cd\u8bbe\u7f6e\u4e3afull precision (torch.float32)\uff0c\u8bbe\u7f6e <code>torch_dtype=\"auto\"</code> \u53ef\u4ee5\u5c06\u6570\u636e\u7c7b\u578b\u8bbe\u7f6e\u4e3athe most memory-optimal data type</p> <pre><code>from transformers import AutoModelForSequenceClassification\nfrom torch import nn\n\nmodel_name = \"nlptown/bert-base-multilingual-uncased-sentiment\"\npt_model = AutoModelForSequenceClassification.from_pretrained(model_name, torch_dtype=\"auto\")\n\n# feed the tokenized dict (add ** to unpack the dict) to the model\n# The model outputs the final activations in the logits attribute\npt_outputs = pt_model(**pt_batch)\n\npt_predictions = nn.functional.softmax(pt_outputs.logits, dim=-1)\nprint(pt_predictions)\n</code></pre> <p>All \ud83e\udd17 Transformers models (PyTorch or TensorFlow) output the tensors before the final activation function (like softmax) because the final activation function is often fused with the loss.</p>"},{"location":"tools/hf/#save-a-model","title":"save a model","text":"<pre><code>pt_save_directory = \"./pt_save_pretrained\"\ntokenizer.save_pretrained(pt_save_directory)\npt_model.save_pretrained(pt_save_directory)\n\n# reload local model\npt_model = AutoModelForSequenceClassification.from_pretrained(pt_save_directory)\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u901a\u8fc7<code>from_pt</code>\u548c<code>from_tf</code>\u5c06\u5b58\u50a8\u7684\u6a21\u578b\u8f6c\u6362\u4e3a pytorch \u6216 tensorflow \u67b6\u6784</p> <pre><code>from transformers import AutoModel\n\ntokenizer = AutoTokenizer.from_pretrained(pt_save_directory)\npt_model = AutoModelForSequenceClassification.from_pretrained(pt_save_directory, from_pt=True)\n</code></pre>"},{"location":"tools/hf/#customized-configuration","title":"Customized configuration","text":"<p>\u53ef\u4ee5\u6539\u53d8hidden layer \u5c42\u6570\u3001attention head \u6570\u7b49\uff0c\u4f46\u9700\u8981\u6ce8\u610f\u6b64\u65f6\u6a21\u578b\u53c2\u6570\u662f\u968f\u673a\u521d\u59cb\u5316\u7684\uff0c\u9700\u8981\u91cd\u65b0\u8bad\u7ec3</p> <pre><code>from transformers import AutoConfig, AutoModel\n\nmy_config = AutoConfig.from_pretrained(\"distilbert/distilbert-base-uncased\", n_heads=12)\nmy_model = AutoModel.from_config(my_config)\n</code></pre>"},{"location":"tools/hf/#trainer-a-pytorch-optimized-training-loop","title":"Trainer - a PyTorch optimized training loop","text":"<p><code>torch.nn.Module</code> \u7684\u8bad\u7ec3\u8fc7\u7a0b\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u4e5f\u53ef\u4ee5\u7528\u5c01\u88c5\u597d\u7684 <code>Trainer</code> \u7c7b\uff0c\u5b83\u63d0\u4f9b\u4e86\u57fa\u672c\u7684training loop \uff0c\u652f\u6301 distributed training, mixed precision, and more.</p> <pre><code>from transformers import AutoModelForSequenceClassification\nmodel = AutoModelForSequenceClassification.from_pretrained(\"distilbert/distilbert-base-uncased\", torch_dtype=\"auto\")\n\nfrom transformers import TrainingArguments\ntraining_args = TrainingArguments(\n    output_dir=\"path/to/save/folder/\",\n    learning_rate=2e-5,\n    per_device_train_batch_size=8,\n    per_device_eval_batch_size=8,\n    num_train_epochs=2,\n)\n\nfrom transformers import AutoTokenizer\ntokenizer = AutoTokenizer.from_pretrained(\"distilbert/distilbert-base-uncased\")\n\nfrom datasets import load_dataset\ndataset = load_dataset(\"rotten_tomatoes\")  # doctest: +IGNORE_RESULT\n\n# Create a function to tokenize the dataset\ndef tokenize_dataset(dataset):\n    return tokenizer(dataset[\"text\"])\n# apply it over the entire dataset with map\ndataset = dataset.map(tokenize_dataset, batched=True)\n# A DataCollatorWithPadding to create a batch of examples from your dataset:\nfrom transformers import DataCollatorWithPadding\ndata_collator = DataCollatorWithPadding(tokenizer=tokenizer)\n\n# gather all these classes in Trainer:\nfrom transformers import Trainer\ntrainer = Trainer(\n    model=model,\n    args=training_args,\n    train_dataset=dataset[\"train\"],\n    eval_dataset=dataset[\"test\"],\n    processing_class=tokenizer,\n    data_collator=data_collator,\n)  # doctest: +SKIP\n\n# call train() to start training\ntrainer.train()\n</code></pre>"},{"location":"tools/mkdocs/","title":"mkdocs\u4f7f\u7528","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"tools/mkdocs/#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"tools/mkdocs/#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"tools/mkdocs/#code-block-with-a-title","title":"Code block With a title:","text":"qsort.py<pre><code>def qsort(array,order):\n    for i in range(array.len):\n        for j in range(array.len):\n            ...\n</code></pre>"},{"location":"tools/mkdocs/#open-a-virtual-environment","title":"Open a Virtual Environment","text":"<p>Sometimes, we need a venv to make some command run.</p>"},{"location":"tools/mkdocs/#steps","title":"Steps","text":"<ul> <li>in your terminal, <code>cd</code> into the expected directory.</li> <li>enter <code>python3 -m venv venv</code> or <code>python -m venv venv</code></li> <li>enter <code>source venv/bin/activate</code></li> <li>check if the command works...</li> </ul>"},{"location":"tools/numpy/","title":"numpy","text":""},{"location":"tools/numpy/#npeinsum","title":"<code>np.einsum</code>","text":"<p>choose the correct labelling for the axes of the inputs arrays and the array that we want to get out.</p>"},{"location":"tools/numpy/#_1","title":"\u793a\u4f8b","text":"<p>A \u4e3a 1 \u7ef4\uff0c\u7528 i \u8868\u793a\u8be5\u7ef4\u5ea6\uff1bB \u4e3a 2 \u7ef4\uff0c\u7528 i\uff0cj \u8868\u793a\u8fd9\u4e24\u4e2a\u7ef4\u5ea6\uff1b\u5171\u7528 i \u8868\u793a A \u548c B \u7684\u5143\u7d20\u6cbf\u7740\u5404\u81ea\u7684 i \u7ef4\u5ea6\u76f8\u4e58</p> <pre><code>A = np.array([0, 1, 2])\n\nB = np.array([[ 0,  1,  2,  3],\n              [ 4,  5,  6,  7],\n              [ 8,  9, 10, 11]])\n\nnp.einsum('i,ij-&gt;i', A, B)\n</code></pre> <p>A \u4e3a 2 \u7ef4\uff0c\u7528 i\uff0cj \u8868\u793a\u8be5\u7ef4\u5ea6\uff1bB \u4e3a 2 \u7ef4\uff0c\u7528 j\uff0ck \u8868\u793a\u8fd9\u4e24\u4e2a\u7ef4\u5ea6\uff1b\u5171\u7528 j \u8868\u793a A \u548c B \u7684\u5143\u7d20\u6cbf\u7740\u5404\u81ea\u7684 j \u7ef4\u5ea6\u76f8\u4e58\uff1b\u7bad\u5934\u540e\u65b9 ik \u8868\u793a\u6cbf i\uff0ck \u7684\u7ef4\u5ea6\u987a\u5e8f\u6392\u5217\uff0c\u5e76\u4e14\u5c06\u4e4b\u524d\u7684 j \u7ef4\u5ea6\u76f8\u4e58\u7684\u5143\u7d20\u6c42\u548c</p> <pre><code>np.einsum('ij,jk-&gt;ik', A, B) \n</code></pre> <p></p> <p>\u5982\u4e0b\u56fe\uff0c\u4e0d\u7701\u7565 j \u7ef4\uff0c\u5219\u4f1a\u662f\u8fd9\u6837 <pre><code>np.einsum('ij,jk-&gt;ijk', A, B)\n</code></pre></p> <p></p>"},{"location":"tools/numpy/#_2","title":"\u4e00\u7ef4\u5411\u91cf\u5e38\u7528\u8868\u8fbe\u5f0f","text":""},{"location":"tools/numpy/#_3","title":"\u4e8c\u4f4d\u77e9\u9635\u5e38\u7528\u8868\u8fbe\u5f0f","text":""},{"location":"tools/poetry/","title":"poetry\u7ba1\u7406\u5b89\u88c5\u5305","text":""},{"location":"tools/poetry/#_1","title":"\u57fa\u672c\u7528\u6cd5","text":"<pre><code># \u521d\u59cb\u5316\uff0c\u751f\u6210 pyproject.toml\npoetry init\npoetry new poetry-demo \n</code></pre>"},{"location":"tools/poetry/#_2","title":"\u521b\u5efa\u865a\u62df\u73af\u5883","text":"<pre><code>poetry env use python\npoetry env python3.8\npoetry env use 3.8 # \u6fc0\u6d3b\u6216\u521b\u5efa\u865a\u62df\u73af\u5883\npoetry env system # \u6fc0\u6d3b\u7cfb\u7edf\u9ed8\u8ba4\u7684 python\n\n\npoetry env remove 3.8 # \u5220\u9664\u73af\u5883\npoetry env list # \u67e5\u770b\u6240\u6709\u865a\u62df\u73af\u5883\n\npoetry env activate\npoetry env deacti\n</code></pre> <p><code>use xxx</code>\u6839\u636e\u7cfb\u7edf\u73af\u5883\u53d8\u91cf<code>PATH</code>\u4e2d python \u7684\u7248\u672c\u53f7\u6765\u521b\u5efa\u865a\u62df\u73af\u5883\uff0c\u56e0\u6b64\u8981\u786e\u4fdd xxx \u5b58\u5728\u4e8e PATH</p> <p>Windows\u7cfb\u7edf\u4e0b poetry \u865a\u62df\u73af\u5883\u5b89\u88c5\u5728 <code>\\Users\\username\\AppData\\Local\\pypoetry\\Cache\\virtualenvs\\</code>\uff0cMacOS\u5728 <code>/Users/username/Library/Caches/pypoetry/virtualenvs</code></p>"},{"location":"tools/poetry/#_3","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<pre><code>poetry install # \u5b89\u88c5 pyproject.toml \u4e2d\u6240\u6709\u4f9d\u8d56\uff0c\u6309\u7167 poetry.lock \u4e2d\u7684\u7248\u672c\u5b89\u88c5\npoetry add requests\npoetry lock # \u5c06 pyproject.toml \u548c poetry.lock \u540c\u6b65\npoetry update # \u6839\u636e pyproject.toml \u4e2d\u7684\u7248\u672c\u66f4\u65b0\u5305\uff0c\u5e76\u91cd\u65b0\u751f\u6210 poetry.lock\n\npoetry show # \u67e5\u770b\u6240\u6709\u5b89\u88c5\u7684 packages\npoetry show --tree # \u67e5\u770b\u6240\u6709\u5b89\u88c5\u7684 packages \u4ee5\u53ca\u4f9d\u8d56\u5173\u7cfb\npendulum 3.0.0 Python datetimes made easy\n\u251c\u2500\u2500 python-dateutil &gt;=2.6\n\u2502   \u2514\u2500\u2500 six &gt;=1.5 \n\u2514\u2500\u2500 tzdata &gt;=2020.1\n</code></pre> <p>\u6ca1\u6709\u865a\u62df\u73af\u5883\u65f6\u5b89\u88c5\u5305\uff0c\u4f1a\u81ea\u52a8\u521b\u5efa\u865a\u62df\u73af\u5883</p>"},{"location":"tools/poetry/#_4","title":"\u914d\u7f6e","text":"<pre><code>poetry config --list \npoetry config virtualenvs.in-project true\n</code></pre>"},{"location":"tools/poetry/#_5","title":"\u6362\u6e90","text":"<p><code>poetry source add tsinghua https://pypi.tuna.tsinghua.edu.cn/simple</code></p> <p>manual</p> <pre><code>Available commands:\n    about              Shows information about Poetry.\n    add                Adds a new dependency to pyproject.toml and installs it.\n    build              Builds a package, as a tarball and a wheel by default.\n    check              Validates the content of the pyproject.toml file and its consistency with the poetry.lock file.\n    config             Manages configuration settings.\n    help               Displays help for a command.\n    init               Creates a basic pyproject.toml file in the current directory.\n    install            Installs the project dependencies.\n    list               Lists commands.\n    lock               Locks the project dependencies.\n    new                Creates a new Python project at &lt;path&gt;.\n    publish            Publishes a package to a remote repository.\n    remove             Removes a package from the project dependencies.\n    run                Runs a command in the appropriate environment.\n    search             Searches for packages on remote repositories.\n    show               Shows information about packages.\n    sync               Update the project's environment according to the lockfile.\n    update             Update the dependencies as according to the pyproject.toml file.\n    version            Shows the version of the project or bumps it when a valid bump rule is provided.\n\ncache\n    cache clear        Clears a Poetry cache by name.\n    cache list         List Poetry's caches.\n\ndebug\n    debug info         Shows debug information.\n    debug resolve      Debugs dependency resolution.\n    debug tags         Shows compatible tags for your project's current active environment.\n\nenv\n    env activate       Print the command to activate a virtual environment.\n    env info           Displays information about the current environment.\n    env list           Lists all virtualenvs associated with the current project.\n    env remove         Remove virtual environments associated with the project.\n    env use            Activates or creates a new virtualenv for the current project.\n\npython\n    python install     Install the specified Python version from the Python Standalone Builds project. (experimental feature)\n    python list        Shows Python versions available for this environment. (experimental feature)\n    python remove      Remove the specified Python version if managed by Poetry. (experimental feature)\n\nself\n    self add           Add additional packages to Poetry's runtime environment.\n    self install       Install locked packages (incl. addons) required by this Poetry installation.\n    self lock          Lock the Poetry installation's system requirements.\n    self remove        Remove additional packages from Poetry's runtime environment.\n    self show          Show packages from Poetry's runtime environment.\n    self show plugins  Shows information about the currently installed plugins.\n    self sync          Sync Poetry's own environment according to the locked packages (incl. addons) required by this Poetry installation.\n    self update        Updates Poetry to the latest version.\n\nsource\n    source add         Add source configuration for project.\n    source remove      Remove source configured for the project.\n    source show        Show information about sources configured for the project.\n</code></pre>"},{"location":"tools/pypackage/","title":"python\u81ea\u5b9a\u4e49\u6a21\u5757","text":""},{"location":"tools/pypackage/#setuppy","title":"<code>setup.py</code>","text":"<pre><code>from setuptools import setup, find_packages\n\nsetup(\n    name=\"mytest\",\n    version=\"1.0\",\n    author=\"wangbm\",\n    author_email=\"wongbingming@163.com\",\n    description=\"Learn to Pack Python Module  --&gt;\u516c\u4f17\u53f7\uff1aPython\u7f16\u7a0b\u65f6\u5149\",\n\n    # \u9879\u76ee\u4e3b\u9875\n    url=\"http://iswbm.com/\", \n\n    # \u4f60\u8981\u5b89\u88c5\u7684\u5305\uff0c\u901a\u8fc7 setuptools.find_packages \u627e\u5230\u5f53\u524d\u76ee\u5f55\u4e0b\u6709\u54ea\u4e9b\u5305\n    packages=find_packages()\n)\n</code></pre>"},{"location":"tools/pytorch/","title":"pytorch\u4f7f\u7528","text":""},{"location":"tools/pytorch/#modelstate_dict","title":"<code>model.state_dict</code>","text":"<p>\u5728 PyTorch \u4e2d\uff0c<code>torch.nn.Module</code> \u6a21\u578b\u7684\u5b66\u4e60\u53c2\u6570\uff08\u5373\u6743\u91cd\u548c\u504f\u5dee\uff09\u5305\u542b\u5728\u6a21\u578b\u7684\u53c2\u6570\u4e2d\uff08\u4f7f\u7528 <code>model.parameters()</code> \u8bbf\u95ee\uff09\u3002<code>state_dict</code> \u53ea\u662f\u4e00\u4e2a Python \u5b57\u5178\u5bf9\u8c61\uff0c\u5b83\u5c06\u6bcf\u4e2a\u5c42\u6620\u5c04\u5230\u5176\u53c2\u6570\u5f20\u91cf\u3002</p> <p>\u8bf7\u6ce8\u610f\uff0c\u53ea\u6709\u5177\u6709\u53ef\u5b66\u4e60\u53c2\u6570\u7684\u5c42\uff08\u5377\u79ef\u5c42\u3001\u7ebf\u6027\u5c42\u7b49\uff09\u548c\u6ce8\u518c\u7f13\u51b2\u533a\uff08batchnorm \u7684 running_mean\uff09\u5728\u6a21\u578b\u7684 state_dict \u4e2d\u6709\u6761\u76ee\u3002\u4f18\u5316\u5668\u5bf9\u8c61 (torch.optim) \u4e5f\u6709\u4e00\u4e2a state_dict\uff0c\u5176\u4e2d\u5305\u542b\u6709\u5173\u4f18\u5316\u5668\u72b6\u6001\u4ee5\u53ca\u6240\u7528\u8d85\u53c2\u6570\u7684\u4fe1\u606f\u3002</p>"},{"location":"tools/pytorch/#_1","title":"\u793a\u4f8b","text":"<pre><code>import torch\nimport torch.nn as nn\nimport torch.nn.functional as F\nimport torch.optim as optim\n\nclass TheModelClass(nn.Module):\n    ...\nnet = TheModelClass()\noptimizer = optim.SGD(net.parameters(), lr=0.001, momentum=0.9)\n\n# Print model's state_dict\nprint(\"Model's state_dict:\")\nfor param_tensor in net.state_dict():\n    print(param_tensor, \"\\t\", net.state_dict()[param_tensor].size())\n# Print optimizer's state_dict\nprint(\"Optimizer's state_dict:\")\nfor var_name in optimizer.state_dict():\n    print(var_name, \"\\t\", optimizer.state_dict()[var_name])\n</code></pre>"},{"location":"tools/pytorch/#_2","title":"\u4fdd\u5b58/\u52a0\u8f7d\u6a21\u578b","text":""},{"location":"tools/pytorch/#state_dict","title":"\u4fdd\u5b58/\u52a0\u8f7d <code>state_dict</code>","text":"<pre><code>### save\ntorch.save(model.state_dict(), PATH)\n\n### load\nmodel = TheModelClass(*args, **kwargs)\nmodel.load_state_dict(torch.load(PATH, weights_only=True))\nmodel.eval()\n</code></pre> <p>\u5728\u8fd0\u884c\u63a8\u7406\u4e4b\u524d\u8c03\u7528 <code>model.eval()</code> \u4ee5\u5c06 dropout \u548c\u6279\u5f52\u4e00\u5316\u5c42\u8bbe\u7f6e\u4e3a\u8bc4\u4f30\u6a21\u5f0f\u3002\u672a\u80fd\u6267\u884c\u6b64\u64cd\u4f5c\u5c06\u5bfc\u81f4\u4e0d\u4e00\u81f4\u7684\u63a8\u7406\u7ed3\u679c\u3002</p> <p>\u5e38\u89c1\u7684 PyTorch \u7ea6\u5b9a\u662f\u4f7f\u7528 .pt \u6216 .pth \u6587\u4ef6\u6269\u5c55\u540d\u4fdd\u5b58\u6a21\u578b\u3002</p> <p>\u4e0d\u8981\u5fd8\u8bb0 <code>best_model_state = model.state_dict()</code> \u8fd4\u56de\u5bf9\u72b6\u6001\u7684\u5f15\u7528\uff0c\u800c\u4e0d\u662f\u5176\u526f\u672c\uff01\u60a8\u5fc5\u987b\u5e8f\u5217\u5316 <code>best_model_state</code> \u6216\u4f7f\u7528 <code>best_model_state = deepcopy(model.state_dict())</code> \u4ee5\u907f\u514d\u540e\u7eed\u8bad\u7ec3\u65f6 <code>state_dict</code> \u88ab\u4f18\u5316\u8fed\u4ee3</p>"},{"location":"tools/pytorch/#_3","title":"\u4fdd\u5b58/\u52a0\u8f7d\u6574\u4e2a\u6a21\u578b","text":"<pre><code># save\ntorch.save(model, PATH)\n\n# Model class must be defined somewhere\nmodel = torch.load(PATH, weights_only=False)\nmodel.eval()\n</code></pre> <p>\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u4fdd\u5b58\u6a21\u578b\u5c06\u4f7f\u7528 Python \u7684 pickle \u6a21\u5757\u4fdd\u5b58\u6574\u4e2a\u6a21\u5757\u3002\u6b64\u65b9\u6cd5\u7684\u7f3a\u70b9\u662f\u5e8f\u5217\u5316\u6570\u636e\u7ed1\u5b9a\u5230\u7279\u5b9a\u7684\u7c7b\u4ee5\u53ca\u4fdd\u5b58\u6a21\u578b\u65f6\u4f7f\u7528\u7684\u786e\u5207\u76ee\u5f55\u7ed3\u6784\u3002\u539f\u56e0\u662f pickle \u4e0d\u4fdd\u5b58\u6a21\u578b\u7c7b\u672c\u8eab\u3002\u76f8\u53cd\uff0c\u5b83\u4fdd\u5b58\u5305\u542b\u8be5\u7c7b\u7684\u6587\u4ef6\u7684\u8def\u5f84\uff0c\u8be5\u8def\u5f84\u5728\u52a0\u8f7d\u65f6\u4f7f\u7528\u3002\u56e0\u6b64\uff0c\u5f53\u5728\u5176\u4ed6\u9879\u76ee\u4e2d\u4f7f\u7528\u6216\u91cd\u6784\u540e\uff0c\u60a8\u7684\u4ee3\u7801\u53ef\u80fd\u4f1a\u4ee5\u5404\u79cd\u65b9\u5f0f\u4e2d\u65ad\u3002</p>"},{"location":"tools/pytorch/#torchscript","title":"\u4ee5 TorchScript \u683c\u5f0f\u5bfc\u51fa/\u52a0\u8f7d\u6a21\u578b","text":"<pre><code>### export/save\nmodel_scripted = torch.jit.script(model) # Export to TorchScript\nmodel_scripted.save('model_scripted.pt') # Save\n\n### load\nmodel = torch.jit.load('model_scripted.pt')\nmodel.eval()\n</code></pre>"},{"location":"tools/pytorch/#general-checkpoint","title":"\u4e3a \u63a8\u7406/\u6062\u590d\u8bad\u7ec3 \u4fdd\u5b58\u548c\u52a0\u8f7d general checkpoint","text":"<pre><code># save\ntorch.save({\n            'epoch': epoch,\n            'model_state_dict': model.state_dict(),\n            'optimizer_state_dict': optimizer.state_dict(),\n            'loss': loss,\n            ...\n            }, PATH)\n\n\n# load\nmodel = TheModelClass(*args, **kwargs)\noptimizer = TheOptimizerClass(*args, **kwargs)\n\ncheckpoint = torch.load(PATH, weights_only=True)\nmodel.load_state_dict(checkpoint['model_state_dict'])\noptimizer.load_state_dict(checkpoint['optimizer_state_dict'])\nepoch = checkpoint['epoch']\nloss = checkpoint['loss']\n\nmodel.eval()\n# - or -\nmodel.train()\n</code></pre> <p>\u6b64\u60c5\u51b5\u4e0b\uff0c\u5fc5\u987b\u4fdd\u5b58\u7684\u4e0d\u4ec5\u4ec5\u662f\u6a21\u578b\u7684 <code>state_dict</code>\u3002\u540c\u6837\u91cd\u8981\u7684\u662f\u4fdd\u5b58\u4f18\u5316\u5668\u7684 <code>state_dict</code>\uff0c\u56e0\u4e3a\u5b83\u5305\u542b\u5728\u6a21\u578b\u8bad\u7ec3\u65f6\u66f4\u65b0\u7684\u7f13\u51b2\u533a\u548c\u53c2\u6570\u3002\u60a8\u53ef\u80fd\u60f3\u8981\u4fdd\u5b58\u7684\u5176\u4ed6\u9879\u76ee\u5305\u62ec\u60a8\u505c\u6b62\u7684 epoch\u3001\u6700\u65b0\u8bb0\u5f55\u7684\u8bad\u7ec3\u635f\u5931\u3001\u5916\u90e8 <code>torch.nn.Embedding</code> \u5c42\u7b49\u3002\u56e0\u6b64\uff0c\u8fd9\u6837\u7684\u68c0\u67e5\u70b9\u901a\u5e38\u6bd4\u5355\u72ec\u7684\u6a21\u578b\u5927 2~3 \u500d\u3002</p> <p>\u8981\u4fdd\u5b58\u591a\u4e2a\u7ec4\u4ef6\uff0c\u8bf7\u5c06\u5b83\u4eec\u7ec4\u7ec7\u5728\u4e00\u4e2a\u5b57\u5178\u4e2d\uff0c\u5e76\u4f7f\u7528 torch.save() \u5e8f\u5217\u5316\u8be5\u5b57\u5178\u3002\u5e38\u89c1\u7684 PyTorch \u7ea6\u5b9a\u662f\u4f7f\u7528 .tar \u6587\u4ef6\u6269\u5c55\u540d\u4fdd\u5b58\u8fd9\u4e9b\u68c0\u67e5\u70b9\u3002</p>"},{"location":"tools/pytorch/#_4","title":"\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u4fdd\u5b58\u591a\u4e2a\u6a21\u578b","text":"<p>\u53ea\u9700\u5c06\u591a\u4e2a\u7ec4\u4ef6\u7684 state_dict \u7ec4\u7ec7\u6210\u4e00\u4e2a\u5b57\u5178\u518d\u8fdb\u884c save\uff1bload \u65f6\u6839\u636e loaded ckpt \u5bf9\u5e94\u7684\u952e\u503c\u8fdb\u884c\u8d4b\u503c</p> <pre><code># save\ntorch.save({\n            'modelA_state_dict': modelA.state_dict(),\n            'modelB_state_dict': modelB.state_dict(),\n            'optimizerA_state_dict': optimizerA.state_dict(),\n            'optimizerB_state_dict': optimizerB.state_dict(),\n            ...\n            }, PATH)\n\n\n# load\nmodelA = TheModelAClass(*args, **kwargs)\nmodelB = TheModelBClass(*args, **kwargs)\noptimizerA = TheOptimizerAClass(*args, **kwargs)\noptimizerB = TheOptimizerBClass(*args, **kwargs)\n\ncheckpoint = torch.load(PATH, weights_only=True)\nmodelA.load_state_dict(checkpoint['modelA_state_dict'])\nmodelB.load_state_dict(checkpoint['modelB_state_dict'])\noptimizerA.load_state_dict(checkpoint['optimizerA_state_dict'])\noptimizerB.load_state_dict(checkpoint['optimizerB_state_dict'])\n\nmodelA.eval()\nmodelB.eval()\n# - or -\nmodelA.train()\nmodelB.train()\n</code></pre>"},{"location":"tools/pytorch/#_5","title":"\u4f7f\u7528\u6765\u81ea\u4e0d\u540c\u6a21\u578b\u7684\u53c2\u6570\u9884\u70ed\u542f\u52a8\u6a21\u578b","text":"<p>\u53ef\u4ee5\u5728 <code>load_state_dict()</code> \u51fd\u6570\u4e2d\u5c06 <code>strict</code> \u53c2\u6570\u8bbe\u7f6e\u4e3a <code>False</code> \u4ee5\u5ffd\u7565\u4e0d\u5339\u914d\u7684\u952e\u3002</p> <pre><code># save modelA\ntorch.save(modelA.state_dict(), PATH)\n\n# load modelA for modelB (not necessarily of the same class)\nmodelB = TheModelBClass(*args, **kwargs)\nmodelB.load_state_dict(torch.load(PATH, weights_only=True), strict=False)\n</code></pre>"},{"location":"tools/pytorch/#_6","title":"\u8de8\u8bbe\u5907\u4fdd\u5b58\u548c\u52a0\u8f7d\u6a21\u578b","text":""},{"location":"tools/pytorch/#gpu-cpu","title":"\u5728 GPU \u4e0a\u4fdd\u5b58\uff0c\u5728 CPU \u4e0a\u52a0\u8f7d","text":"<p><pre><code>torch.save(model.state_dict(), PATH)\n\ndevice = torch.device('cpu')\nmodel = TheModelClass(*args, **kwargs)\nmodel.load_state_dict(torch.load(PATH, map_location=device, weights_only=True))\n</code></pre> \u6b64\u5904\u9700\u8981\u8bbe\u7f6e <code>map_location</code> \u4e3a cpu</p>"},{"location":"tools/pytorch/#gpu-gpu","title":"\u5728 GPU \u4e0a\u4fdd\u5b58\uff0c\u5728 GPU \u4e0a\u52a0\u8f7d","text":"<p><pre><code>torch.save(model.state_dict(), PATH)\n\ndevice = torch.device('cuda')\nmodel = TheModelClass(*args, **kwargs)\nmodel.load_state_dict(torch.load(PATH, weights_only=True))\nmodel.to(device)\n</code></pre> \u6b64\u5904\u9700\u8981 <code>model.to(device)</code> \u6765\u5c06\u521d\u59cb\u5316\u7684\u6a21\u578b\u8f6c\u6362\u4e3a CUDA \u4f18\u5316\u6a21\u578b\uff0c\u4f46\u4e0d\u9700\u8981\u6307\u5b9a <code>map_location</code>\uff0c\u56e0\u4e3a\u539f\u672c\u5c31\u4fdd\u5b58\u5728 GPU \u4e0a\uff1b</p> <p>\u6b64\u5916\uff0c\u52a1\u5fc5\u6dfb\u52a0\u8bed\u53e5 <code>input = input.to(device)</code> \u5c06\u8f93\u5165\u8f6c\u79fb\u5230 CUDA GPU \u4e0a\u8fdb\u884c\u63a8\u7406/\u8bad\u7ec3</p>"},{"location":"tools/pytorch/#cpu-gpu","title":"\u5728 CPU \u4e0a\u4fdd\u5b58\uff0c\u5728 GPU \u4e0a\u52a0\u8f7d","text":"<p><pre><code>torch.save(model.state_dict(), PATH)\n\ndevice = torch.device('cuda')\nmodel = TheModelClass(*args, **kwargs)\nmodel.load_state_dict(torch.load(PATH, map_location='cuda:0', weights_only=True))\nmodel.to(device)\n</code></pre> \u540c\u4e0a\uff0c\u52a1\u5fc5\u6dfb\u52a0\u8bed\u53e5 <code>input = input.to(device)</code> \u5c06\u8f93\u5165\u8f6c\u79fb\u5230 CUDA GPU \u4e0a\u8fdb\u884c\u63a8\u7406/\u8bad\u7ec3</p>"},{"location":"tools/tqdm/","title":"\u8fdb\u5ea6\u6761\u53ef\u89c6\u5316","text":"<p>\u4e0b\u9762\u5c55\u793a\u4e00\u4e2a\u5b9e\u65f6\u663e\u793a\u7f51\u9875\u6587\u4ef6\u4e0b\u8f7d\u8fdb\u5ea6\u7684\u4f8b\u5b50\uff0c\u5173\u6ce8 line 6 \u7684<code>tqdm</code></p> <pre><code>import tqdm\nimport urllib.request\nwith urllib.request.urlopen(url) as response:\n    file_size = int(response.info().get('Content-Length', 0))\n    block_size = 8192  # 8 KB\n    with open(out_file_tmp, 'wb') as out_file_obj, tqdm(\n            desc=os.path.basename(out_file),\n            total=file_size,\n            unit='iB',\n            unit_scale=True,\n            unit_divisor=1024,\n    ) as bar:\n        while True:\n            buffer = response.read(block_size)\n            if not buffer:\n                break\n            out_file_obj.write(buffer)\n            bar.update(len(buffer))\n</code></pre>"}]}